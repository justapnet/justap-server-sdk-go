---
swagger: "2.0"
info:
  description: "欢迎阅读 Justap Api 文档\n\nJustap 是为移动端应用和PC端应用打造的下一代聚合支付SAAS服务平台，通过一个\
    \ SDK 即可快速的支持各种形式的应用，并且一次接口完成多个不同支付渠道的接入。平台除了支持服务商子商户模式，同时还对商家自有商户（即自己前往微信、支付宝\
    等机构开户）提供了完整的支持。\n\n感谢您的支持，我们将不断探索，为您提供更优质的服务！如需技术支持可前往商户中心提交工单，支持工程师会尽快与您取得联系！\
    \n\n# 文档说明\n采用 REST 风格设计。所有接口请求地址都是可预期的以及面向资源的。使用规范的 HTTP 响应代码来表示请求结果的正确或错误信息。\
    使用 HTTP 内置的特性，如 HTTP Authentication 和 HTTP 请求方法让接口易于理解。\n\n## HTTP 状态码\nHTTP 状\
    态码可以用于表明服务的状态。服务器返回的 HTTP 状态码遵循 [RFC 7231](http://tools.ietf.org/html/rfc7231#section-6)\
    \ 和 [IANA Status Code Registry](http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)\
    \ 标准。\n\n## 认证\n在调用 API 时，必须提供 API Key 作为每个请求的身份验证。你可以在管理平台内管理你的 API Key。API Key\
    \ 是商户在系统中的身份标识，请安全存储，确保其不要被泄露。如需获取或更新 API Key ，也可以在商户中心内进行操作。\nApi Key 在使用自定义的\
    \ HTTP Header 进行传递。\n\n```\nX-Justap-Api-Key\n```\n\nAPI Key 分为 live 和 test 两种\
    模式。分别对应真实交易环境和模拟测试交易环境并且可以实时切换。\n测试模式下的 API Key 会模拟交易等请求，但是不会产生任何真实交易行为和费用，便于调\
    试和接入。\n\n**⚠️ 注意**：在使用 live 模式前，需要先前往 `商户中心 -> 应用设置 -> 开发参数` 开启 live 模式。\n\n<SecurityDefinitions\
    \ />\n\n## 请求类型\n所有的 API 请求只支持 HTTPS 方式调用。\n\n## 路由参数\n路由参数是指出现在 URL 路径中的可变变量。\
    在本文档中，使用 `{}` 包裹的部分。 例如： `{charge_id}`，在实际使用是，需要将 `{charge_id}` 替换为实际值 `charge_8a8sdf888888`\n\
    \n## MIME Type\nMIME 类型用于指示服务器返回的数据格式。服务器目前默认采用 `application/json`。\n\n例如:\n```\n\
    application/json\n```\n\n## 错误\n服务器使用 HTTP 状态码 (status code) 来表明一个 API 请求的成功或失\
    败状态。返回 HTTP 2XX 表明 API 请求成功。返回 HTTP 4XX 表明在请求 API 时提供了错误信息，例如参数缺失、参数错误、支付渠道错误等\
    。返回 HTTP 5XX 表明 API 请求时，服务器发生了错误。\n在返回错误的状态码时，回同时返回一些错误信息提示出错原因。\n\n具体的错误码我们正在\
    整理当中。\n\n## 分页\n所有的 Justap 资源都可以被 list API 方法支持，例如分页 charges 和 refunds。这些 list\
    \ API 方法拥有相同的数据结构。Justap 是基于 cursor 的分页机制，使用参数 starting_after 来决定列表从何处开始，使用参数\
    \ ending_before 来决定列表从何处结束。\n\n## 参数说明\n请求参数中包含的以下字段释义请参考：\n\n- REQUIRED: 必填参数\
    \n- OPTIONAL: 可选参数，可以在请求当前接口时按需传入\n- CONDITIONAL: 在某些条件下必传\n- RESPONSE-ONLY: 标\
    示该参数仅在接口返回参数中出现，调用 API 时无需传入\n\n# 如何保证幂等性\n如果发生请求超时或服务器内部错误，客户端可能会尝试重发请求。您可以在请\
    求中设置 ClientToken 参数避免多次重试带来重复操作的问题。\n\n## 什么是幂等性\n在数学计算或者计算机科学中，幂等性（idempotence）\
    是指相同操作或资源在一次或多次请求中具有同样效果的作用。幂等性是在分布式系统设计中具有十分重要的地位。\n\n## 保证幂等性\n通常情况下，客户端只需要在\
    500（InternalErrorInternalError）或503（ServiceUnavailable）错误，或者无法获取响应结果时重试。充实时您可以\
    从客户端生成一个参数值不超过64个的ASCII字符，并将值赋予 ClientToken，保证重试请求的幂等性。\n\n## ClientToken 详解\n\
    ClientToken参数的详细信息如下所示。\n\n- ClientToken 是一个由客户端生成的唯一的、大小写敏感、不超过64个ASCII字符的字符串\
    。例如，`ClientToken=123e4567-e89b-12d3-a456-426655440000`。\n- 如果您提供了一个已经使用过的 ClientToken，\
    但其他请求参数**有变化**，则服务器会返回 IdempotentParameterMismatch 的错误代码。\n- 如果您提供了一个已经使用过的 ClientToken，\
    且其他请求参数**不变**，则服务器会尝试返回 ClientToken 对应的记录。\n\n## API列表\n以下为部分包含了 ClientToken 参\
    数的API，供您参考。具体哪些API支持 ClientToken 参数请以各 API 文档为准，此处不一一列举。\n\n- [申请退款接口](https://www.justap.cn/docs#operation/TradeService_Refunds)\n\
    \n# 签名\n为保证安全，JUSTAP 所有接口均需要对请求进行签名。服务器收到请求后进行签名的验证。如果签名验证不通过，将会拒绝处理请求，并返回 401\
    \ Unauthorized。\n\n签名算法：\n\n```\nbase64Encode(hamc-sha256(md5(请求 body + 请求时间戳\
    \ + 一次性随机字符串) + 一次性随机字符串))\n```\n\n## 准备\n首先需要在 Justap 创建一个应用，商户需要生成一对 RSA 密钥对\
    ，并将公钥配置到 `商户中心 -> 开发配置`。\nRSA 可以使用支付宝提供的 [密钥生成工具](https://opendocs.alipay.com/common/02kipl)\
    \ 来生成。\n\n商户在使用时，可以按照下述步骤生成请求的签名。\n\n\n## 算法描述:\n- 在请求发送前，取完整的**请求 body**\n- 生\
    成一个随机的32位字符串，得到 **一次性随机字符串**\n- 获取当前时间的时间戳，得到 **请求时间戳**\n- 在请求字符串后面拼接上 **请求时间戳\
    ** 和 **一次性随机字符串**，得到 **待 Hash 字符串**\n- 对 **待 Hash 字符串** 计算 md5，得到 **待签名字符串**\n\
    - **待签名字符串** 后面拼接上 一次性随机字符串，得到完整的 **待签名字符串**\n- 使用商户 RSA 私钥，对 **待签名字符串** 计算签名，\
    并对 结果 进行 base64 编码，即可得到 **签名**\n\n## 设置HTTP头\nJustap 要求请求通过 自定义头部 来传递签名。具体定义如下\
    :\n\n```\nX-Justap-Signature: 签名\nX-Justap-Request-Time: 请求时间戳\nX-Justap-Nonce:\
    \ 一次性随机字符串\nX-Justap-Body-Hash: 待签名字符串\n```\n\n具体的签名算法实现，可参考我们提供的各语言 SDK。\n\n\
    # WebHooks\n"
  version: "1.0"
  title: "Justap API"
  termsOfService: "https://www.justap.cn/terms#terms"
  contact:
    name: "Justap LTD."
    email: "support@justap.net"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
  x-logo:
    altText: "JUSTAP 开发文档"
    url: "https://www.justap.cn/assets/img/logo/logo-developer.svg"
host: "127.0.0.1:21011"
tags:
- name: "聚合支付"
- name: "BusinessUserService"
- name: "SettlementService"
- name: "CustomerService"
- name: "RoyaltyService"
- name: "CheckoutService"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
security:
- ApiKeyAuth: []
paths:
  /transaction/v1/charges:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Charge 对象列表"
      description: "返回之前创建过 charge 对象的一个列表。列表是按创建时间进行排序，总是将最新的 charge 对象显示在最前。如果不设\
        置 created 参数，默认查询近一个月的数据；设置了 created 参数，会按照对应的时间段查询。"
      operationId: "ChargeService_QueryChargeList"
      parameters:
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "starting_after"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 id 是\
          \ obj_end，你可以使用 starting_after = obj_end 去获取下一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "StartingAfter"
        x-optionalDataType: "String"
      - name: "ending_before"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的第一项的 id 是 obj_start，\
          你可以使用 ending_before = obj_start 去获取上一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "EndingBefore"
        x-optionalDataType: "String"
      - name: "merchant_trade_id"
        in: "query"
        description: "[OPTIONAL] 客户系统订单号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "MerchantTradeId"
        x-optionalDataType: "String"
      - name: "created.lt"
        in: "query"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLt"
        x-optionalDataType: "Int64"
      - name: "created.lte"
        in: "query"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLte"
        x-optionalDataType: "Int64"
      - name: "created.gt"
        in: "query"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGt"
        x-optionalDataType: "Int64"
      - name: "created.gte"
        in: "query"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGte"
        x-optionalDataType: "Int64"
      - name: "channel"
        in: "query"
        description: "[OPTIONAL] 渠道名称\n\n - BALANCE: 余额支付\n - AlipayQR: 支付宝扫码支付\n\
          \ - AlipayScan: 支付宝条码支付\n - AlipayApp: 支付宝 App 支付\n - AlipayWap: 支付宝手机网站\
          支付\n - AlipayPage: 支付宝电脑网站支付\n - AlipayFace: 支付宝刷脸支付\n - AlipayLite: 支付宝\
          小程序支付\n - WechatpayApp: 微信 App 支付\n - WechatpayJSAPI: 微信 JSAPI 支付\n - WechatpayH5:\
          \ 微信 H5 支付\n - WechatpayNative: 微信 Native 支付\n - WechatpayLite: 微信小程序支付\n\
          \ - WechatpayFace: 刷脸支付\n - WechatpayScan: 微信付款码支付"
        required: false
        type: "string"
        default: "CHANNEL_INVALID_UNSPECIFIED"
        format: "string"
        enum:
        - "CHANNEL_INVALID_UNSPECIFIED"
        - "BALANCE"
        - "AlipayQR"
        - "AlipayScan"
        - "AlipayApp"
        - "AlipayWap"
        - "AlipayPage"
        - "AlipayFace"
        - "AlipayLite"
        - "WechatpayApp"
        - "WechatpayJSAPI"
        - "WechatpayH5"
        - "WechatpayNative"
        - "WechatpayLite"
        - "WechatpayFace"
        - "WechatpayScan"
        x-exportParamName: "Channel"
        x-optionalDataType: "String"
      - name: "paid"
        in: "query"
        description: "[OPTIONAL] 是否已付款"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Paid"
        x-optionalDataType: "Bool"
      - name: "refunded"
        in: "query"
        description: "[OPTIONAL] 是否存在退款信息，无论退款是否成功。"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Refunded"
        x-optionalDataType: "Bool"
      - name: "reversed"
        in: "query"
        description: "[OPTIONAL] 是否已撤销"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Reversed"
        x-optionalDataType: "Bool"
      - name: "closed"
        in: "query"
        description: "[OPTIONAL] 是否已关闭"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Closed"
        x-optionalDataType: "Bool"
      - name: "expired"
        in: "query"
        description: "[OPTIONAL] 是否已过期"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Expired"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "聚合支付"
      summary: "创建 Charge 对象"
      description: "发起一次支付请求时需要创建一个新的 charge 对象，获取一个可用的支付凭据用于客户端向第三方渠道发起支付请求。如果使用测\
        试模式的 API Key，则不会发生真实交易。当支付成功后，会发送 Webhooks 通知。"
      operationId: "ChargeService_Charges"
      parameters:
      - in: "body"
        name: "body"
        description: "你可以创建一个 charge 对象向用户收款。charge 是一个支付凭据对象，所有和支付相关的要素信息都存储在这个对象\
          中，你的服务端可以通过发起支付请求来创建一个新的 charge 对象，也可以随时查询一个或者多个 charge 对象的状态。每个 charge\
          \ 对象都拥有一个标识 id，该 id 在系统内唯一。"
        required: true
        schema:
          $ref: "#/definitions/v1CreateChargeRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /transaction/v1/charges/{charge_id}:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Charge 对象"
      description: "你可以在后台异步通知之前，通过查询接口确认支付状态。通过charge对象的id查询一个已创建的charge对象。"
      operationId: "ChargeService_QueryCharge"
      parameters:
      - name: "charge_id"
        in: "path"
        description: "[REQUIRED] Charge 对象 id"
        required: true
        type: "string"
        x-exportParamName: "ChargeId"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /transaction/v1/charges/{charge_id}/refunds:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Refund 对象列表"
      description: "返回之前创建 charge 对象的一个 refund 对象列表。列表是按创建时间进行排序，总是将最新的 refund 对象显\
        示在最前。"
      operationId: "RefundService_QueryRefundList"
      parameters:
      - name: "charge_id"
        in: "path"
        description: "[REQUIRED] 支付 Charge Id"
        required: true
        type: "string"
        x-exportParamName: "ChargeId"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "starting_after"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 id 是\
          \ obj_end，你可以使用 starting_after = obj_end 去获取下一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "StartingAfter"
        x-optionalDataType: "String"
      - name: "ending_before"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的第一项的 id 是 obj_start，\
          你可以使用 ending_before = obj_start 去获取上一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "EndingBefore"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RefundListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /transaction/v1/charges/{charge_id}/refunds/{refund_id}:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Refund 对象"
      description: "可以通过 charge 对象的查询接口查询某一个 charge 对象的退款列表，也可以通过 refund 对象的 id 查询\
        一个已创建的 refund 对象。可以在 Webhooks 通知之前，通过查询接口确认退款状态。"
      operationId: "RefundService_QueryRefund"
      parameters:
      - name: "charge_id"
        in: "path"
        description: "[REQUIRED] 支付 Charge Id"
        required: true
        type: "string"
        x-exportParamName: "ChargeId"
      - name: "refund_id"
        in: "path"
        description: "[REQUIRED] Refund 对象 id"
        required: true
        type: "string"
        x-exportParamName: "RefundId"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RefundResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /transaction/v1/charges/{charge_id}/reverse:
    post:
      tags:
      - "聚合支付"
      summary: "撤销 Charge 对象"
      description: "针对已经创建的 Charge，你可以调用撤销接口进行交易的关闭。接口支持对于未成功付款的订单进行撤销，则关闭交易。调用此接口\
        后用户后期不能支付成功。\n\n注：撤销订单在不同收单机构会有不同的行为。对于成功付款的订单请使用 退款 接口进行退款处理。只有针对未支付的订单，我\
        们建议你调用撤销接口。\n\n- 微信支付：如果此订单用户支付失败，微信支付系统会将此订单关闭；如果用户支付成功，微信支付系统会将此订单资金退还给用\
        户。(7天以内的交易单可调用撤销)\n- 支付宝：如果此订单用户支付失败，支付宝系统会将此订单关闭；如果用户支付成功，支付宝系统会将此订单资金退还给\
        用户。"
      operationId: "ChargeService_ReverseCharge"
      parameters:
      - name: "charge_id"
        in: "path"
        description: "Charge 对象 id"
        required: true
        type: "string"
        x-exportParamName: "ChargeId"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /transaction/v1/refunds:
    post:
      tags:
      - "聚合支付"
      summary: "创建 Refund 对象"
      description: "通过发起一次退款请求创建一个新的 refund 对象，只能对已经发生交易并且没有全额退款的 charge 对象发起退款。当进\
        行全额退款之前，可以进行多次退款，直至全额退款。当一次退款成功后，会发送 Webhooks 通知。"
      operationId: "RefundService_Refunds"
      parameters:
      - in: "body"
        name: "body"
        description: "通过发起一次退款请求创建一个新的 refund 对象，只能对已经发生交易并且没有全额退款的 charge 对象发起退款。\
          当进行全额退款之前，可以进行多次退款，直至全额退款。当一次退款成功后，会发送 Webhooks 通知。"
        required: true
        schema:
          $ref: "#/definitions/v1CreateRefundRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RefundResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/business_users:
    get:
      tags:
      - "BusinessUserService"
      summary: "查询 BusinessUser 对象列表"
      operationId: "BusinessUserService_ListAllUsers"
      parameters:
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "starting_after"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 id 是\
          \ obj_end，你可以使用 starting_after = obj_end 去获取下一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "StartingAfter"
        x-optionalDataType: "String"
      - name: "ending_before"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的第一项的 id 是 obj_start，\
          你可以使用 ending_before = obj_start 去获取上一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "EndingBefore"
        x-optionalDataType: "String"
      - name: "created.lt"
        in: "query"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLt"
        x-optionalDataType: "Int64"
      - name: "created.lte"
        in: "query"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLte"
        x-optionalDataType: "Int64"
      - name: "created.gt"
        in: "query"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGt"
        x-optionalDataType: "Int64"
      - name: "created.gte"
        in: "query"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGte"
        x-optionalDataType: "Int64"
      - name: "disabled"
        in: "query"
        description: "[OPTIONAL] 是否禁用，默认为 false"
        required: false
        type: "boolean"
        x-exportParamName: "Disabled"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1UserListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "BusinessUserService"
      summary: "创建 BusinessUser 对象"
      operationId: "BusinessUserService_CreateUser"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1CreateUserRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1UserResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/business_users/search:
    get:
      tags:
      - "BusinessUserService"
      summary: "搜索 BusinessUser 对象"
      operationId: "BusinessUserService_SearchUsers"
      parameters:
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "created.lt"
        in: "query"
        description: "大于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLt"
        x-optionalDataType: "Int64"
      - name: "created.lte"
        in: "query"
        description: "大于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLte"
        x-optionalDataType: "Int64"
      - name: "created.gt"
        in: "query"
        description: "小于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGt"
        x-optionalDataType: "Int64"
      - name: "created.gte"
        in: "query"
        description: "小于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGte"
        x-optionalDataType: "Int64"
      - name: "email"
        in: "query"
        description: "[OPTIONAL] BusinessUser 对象的邮箱地址。支持模糊匹配"
        required: false
        type: "string"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "[OPTIONAL] BusinessUser 对象的用户名。支持模糊匹配"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "phone"
        in: "query"
        description: "[OPTIONAL] BusinessUser 对象的手机号码"
        required: false
        type: "string"
        x-exportParamName: "Phone"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1UserListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/business_users/{id}:
    get:
      tags:
      - "BusinessUserService"
      summary: "查询 BusinessUser 对象"
      operationId: "BusinessUserService_RetrieveUser"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1UserResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "BusinessUserService"
      summary: "更新 BusinessUser 对象"
      operationId: "BusinessUserService_UpdateUser"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "address"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Address"
        x-optionalDataType: "String"
      - name: "currency"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Currency"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "phone"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Phone"
        x-optionalDataType: "String"
      - name: "avatar"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Avatar"
        x-optionalDataType: "String"
      - name: "disabled"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "Disabled"
        x-optionalDataType: "Bool"
      - name: "gender"
        in: "query"
        description: " - GENDER_UNKNOWN: 未设置\n - MALE: 男\n - FE_MALE: 女\n - PRIVACY:\
          \ 保密\n - ThirdGender: 第三性别"
        required: false
        type: "string"
        default: "GENDER_UNKNOWN"
        enum:
        - "GENDER_UNKNOWN"
        - "MALE"
        - "FE_MALE"
        - "PRIVACY"
        - "ThirdGender"
        x-exportParamName: "Gender"
        x-optionalDataType: "String"
      - name: "parent_user_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ParentUserId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1UserResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    delete:
      tags:
      - "BusinessUserService"
      summary: "删除 BusinessUser 对象"
      operationId: "BusinessUserService_DeleteUser"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DeleteUserResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/charges:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Charge 对象列表"
      description: "返回之前创建过 charge 对象的一个列表。列表是按创建时间进行排序，总是将最新的 charge 对象显示在最前。如果不设\
        置 created 参数，默认查询近一个月的数据；设置了 created 参数，会按照对应的时间段查询。"
      operationId: "ChargeService_QueryChargeList2"
      parameters:
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "starting_after"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 id 是\
          \ obj_end，你可以使用 starting_after = obj_end 去获取下一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "StartingAfter"
        x-optionalDataType: "String"
      - name: "ending_before"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的第一项的 id 是 obj_start，\
          你可以使用 ending_before = obj_start 去获取上一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "EndingBefore"
        x-optionalDataType: "String"
      - name: "merchant_trade_id"
        in: "query"
        description: "[OPTIONAL] 客户系统订单号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "MerchantTradeId"
        x-optionalDataType: "String"
      - name: "created.lt"
        in: "query"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLt"
        x-optionalDataType: "Int64"
      - name: "created.lte"
        in: "query"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLte"
        x-optionalDataType: "Int64"
      - name: "created.gt"
        in: "query"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGt"
        x-optionalDataType: "Int64"
      - name: "created.gte"
        in: "query"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGte"
        x-optionalDataType: "Int64"
      - name: "channel"
        in: "query"
        description: "[OPTIONAL] 渠道名称\n\n - BALANCE: 余额支付\n - AlipayQR: 支付宝扫码支付\n\
          \ - AlipayScan: 支付宝条码支付\n - AlipayApp: 支付宝 App 支付\n - AlipayWap: 支付宝手机网站\
          支付\n - AlipayPage: 支付宝电脑网站支付\n - AlipayFace: 支付宝刷脸支付\n - AlipayLite: 支付宝\
          小程序支付\n - WechatpayApp: 微信 App 支付\n - WechatpayJSAPI: 微信 JSAPI 支付\n - WechatpayH5:\
          \ 微信 H5 支付\n - WechatpayNative: 微信 Native 支付\n - WechatpayLite: 微信小程序支付\n\
          \ - WechatpayFace: 刷脸支付\n - WechatpayScan: 微信付款码支付"
        required: false
        type: "string"
        default: "CHANNEL_INVALID_UNSPECIFIED"
        format: "string"
        enum:
        - "CHANNEL_INVALID_UNSPECIFIED"
        - "BALANCE"
        - "AlipayQR"
        - "AlipayScan"
        - "AlipayApp"
        - "AlipayWap"
        - "AlipayPage"
        - "AlipayFace"
        - "AlipayLite"
        - "WechatpayApp"
        - "WechatpayJSAPI"
        - "WechatpayH5"
        - "WechatpayNative"
        - "WechatpayLite"
        - "WechatpayFace"
        - "WechatpayScan"
        x-exportParamName: "Channel"
        x-optionalDataType: "String"
      - name: "paid"
        in: "query"
        description: "[OPTIONAL] 是否已付款"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Paid"
        x-optionalDataType: "Bool"
      - name: "refunded"
        in: "query"
        description: "[OPTIONAL] 是否存在退款信息，无论退款是否成功。"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Refunded"
        x-optionalDataType: "Bool"
      - name: "reversed"
        in: "query"
        description: "[OPTIONAL] 是否已撤销"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Reversed"
        x-optionalDataType: "Bool"
      - name: "closed"
        in: "query"
        description: "[OPTIONAL] 是否已关闭"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Closed"
        x-optionalDataType: "Bool"
      - name: "expired"
        in: "query"
        description: "[OPTIONAL] 是否已过期"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Expired"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "聚合支付"
      summary: "创建 Charge 对象"
      description: "发起一次支付请求时需要创建一个新的 charge 对象，获取一个可用的支付凭据用于客户端向第三方渠道发起支付请求。如果使用测\
        试模式的 API Key，则不会发生真实交易。当支付成功后，会发送 Webhooks 通知。"
      operationId: "ChargeService_Charges2"
      parameters:
      - in: "body"
        name: "body"
        description: "你可以创建一个 charge 对象向用户收款。charge 是一个支付凭据对象，所有和支付相关的要素信息都存储在这个对象\
          中，你的服务端可以通过发起支付请求来创建一个新的 charge 对象，也可以随时查询一个或者多个 charge 对象的状态。每个 charge\
          \ 对象都拥有一个标识 id，该 id 在系统内唯一。"
        required: true
        schema:
          $ref: "#/definitions/v1CreateChargeRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/charges/{charge_id}:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Charge 对象"
      description: "你可以在后台异步通知之前，通过查询接口确认支付状态。通过charge对象的id查询一个已创建的charge对象。"
      operationId: "ChargeService_QueryCharge2"
      parameters:
      - name: "charge_id"
        in: "path"
        description: "[REQUIRED] Charge 对象 id"
        required: true
        type: "string"
        x-exportParamName: "ChargeId"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/charges/{charge_id}/reverse:
    post:
      tags:
      - "聚合支付"
      summary: "撤销 Charge 对象"
      description: "针对已经创建的 Charge，你可以调用撤销接口进行交易的关闭。接口支持对于未成功付款的订单进行撤销，则关闭交易。调用此接口\
        后用户后期不能支付成功。\n\n注：撤销订单在不同收单机构会有不同的行为。对于成功付款的订单请使用 退款 接口进行退款处理。只有针对未支付的订单，我\
        们建议你调用撤销接口。\n\n- 微信支付：如果此订单用户支付失败，微信支付系统会将此订单关闭；如果用户支付成功，微信支付系统会将此订单资金退还给用\
        户。(7天以内的交易单可调用撤销)\n- 支付宝：如果此订单用户支付失败，支付宝系统会将此订单关闭；如果用户支付成功，支付宝系统会将此订单资金退还给\
        用户。"
      operationId: "ChargeService_ReverseCharge2"
      parameters:
      - name: "charge_id"
        in: "path"
        description: "Charge 对象 id"
        required: true
        type: "string"
        x-exportParamName: "ChargeId"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1ChargeResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/checkout/union_qr:
    post:
      tags:
      - "CheckoutService"
      summary: "通过聚合收款码创建订单"
      operationId: "CheckoutService_CreateUnionQrCheckout"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1UnionQrRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1UnionQrRequest"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/customers:
    get:
      tags:
      - "CustomerService"
      operationId: "CustomerService_ListAllCustomers"
      parameters:
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "starting_after"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 id 是\
          \ obj_end，你可以使用 starting_after = obj_end 去获取下一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "StartingAfter"
        x-optionalDataType: "String"
      - name: "ending_before"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的第一项的 id 是 obj_start，\
          你可以使用 ending_before = obj_start 去获取上一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "EndingBefore"
        x-optionalDataType: "String"
      - name: "created.lt"
        in: "query"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLt"
        x-optionalDataType: "Int64"
      - name: "created.lte"
        in: "query"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLte"
        x-optionalDataType: "Int64"
      - name: "created.gt"
        in: "query"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGt"
        x-optionalDataType: "Int64"
      - name: "created.gte"
        in: "query"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGte"
        x-optionalDataType: "Int64"
      - name: "disabled"
        in: "query"
        description: "[OPTIONAL] 是否禁用，默认为 false"
        required: false
        type: "boolean"
        x-exportParamName: "Disabled"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CustomerListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "CustomerService"
      operationId: "CustomerService_CreateCustomer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1CreateCustomerRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CustomerResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/customers/search:
    get:
      tags:
      - "CustomerService"
      operationId: "CustomerService_SearchCustomers"
      parameters:
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "created.lt"
        in: "query"
        description: "大于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLt"
        x-optionalDataType: "Int64"
      - name: "created.lte"
        in: "query"
        description: "大于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLte"
        x-optionalDataType: "Int64"
      - name: "created.gt"
        in: "query"
        description: "小于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGt"
        x-optionalDataType: "Int64"
      - name: "created.gte"
        in: "query"
        description: "小于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGte"
        x-optionalDataType: "Int64"
      - name: "email"
        in: "query"
        description: "[OPTIONAL] BusinessUser 对象的邮箱地址。支持模糊匹配"
        required: false
        type: "string"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "[OPTIONAL] BusinessUser 对象的用户名。支持模糊匹配"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "phone"
        in: "query"
        description: "[OPTIONAL] BusinessUser 对象的手机号码"
        required: false
        type: "string"
        x-exportParamName: "Phone"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CustomerListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/customers/{id}:
    get:
      tags:
      - "CustomerService"
      operationId: "CustomerService_RetrieveCustomer"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CustomerResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "CustomerService"
      operationId: "CustomerService_UpdateCustomer"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "address"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Address"
        x-optionalDataType: "String"
      - name: "currency"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Currency"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "phone"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Phone"
        x-optionalDataType: "String"
      - name: "avatar"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Avatar"
        x-optionalDataType: "String"
      - name: "disabled"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "Disabled"
        x-optionalDataType: "Bool"
      - name: "gender"
        in: "query"
        description: " - GENDER_UNKNOWN: 未设置\n - MALE: 男\n - FE_MALE: 女\n - PRIVACY:\
          \ 保密\n - ThirdGender: 第三性别"
        required: false
        type: "string"
        default: "GENDER_UNKNOWN"
        enum:
        - "GENDER_UNKNOWN"
        - "MALE"
        - "FE_MALE"
        - "PRIVACY"
        - "ThirdGender"
        x-exportParamName: "Gender"
        x-optionalDataType: "String"
      - name: "parent_customer_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ParentCustomerId"
        x-optionalDataType: "String"
      - name: "out_customer_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OutCustomerId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1CustomerResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    delete:
      tags:
      - "CustomerService"
      operationId: "CustomerService_DeleteCustomer"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DeleteCustomerResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/refunds:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Refund 对象列表"
      description: "返回之前创建 charge 对象的一个 refund 对象列表。列表是按创建时间进行排序，总是将最新的 refund 对象显\
        示在最前。"
      operationId: "RefundService_QueryRefundList2"
      parameters:
      - name: "charge_id"
        in: "query"
        description: "[REQUIRED] 支付 Charge Id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "ChargeId"
        x-optionalDataType: "String"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "starting_after"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 id 是\
          \ obj_end，你可以使用 starting_after = obj_end 去获取下一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "StartingAfter"
        x-optionalDataType: "String"
      - name: "ending_before"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的第一项的 id 是 obj_start，\
          你可以使用 ending_before = obj_start 去获取上一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "EndingBefore"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RefundListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "聚合支付"
      summary: "创建 Refund 对象"
      description: "通过发起一次退款请求创建一个新的 refund 对象，只能对已经发生交易并且没有全额退款的 charge 对象发起退款。当进\
        行全额退款之前，可以进行多次退款，直至全额退款。当一次退款成功后，会发送 Webhooks 通知。"
      operationId: "RefundService_Refunds2"
      parameters:
      - in: "body"
        name: "body"
        description: "通过发起一次退款请求创建一个新的 refund 对象，只能对已经发生交易并且没有全额退款的 charge 对象发起退款。\
          当进行全额退款之前，可以进行多次退款，直至全额退款。当一次退款成功后，会发送 Webhooks 通知。"
        required: true
        schema:
          $ref: "#/definitions/v1CreateRefundRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RefundResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/refunds/{refund_id}:
    get:
      tags:
      - "聚合支付"
      summary: "查询 Refund 对象"
      description: "可以通过 charge 对象的查询接口查询某一个 charge 对象的退款列表，也可以通过 refund 对象的 id 查询\
        一个已创建的 refund 对象。可以在 Webhooks 通知之前，通过查询接口确认退款状态。"
      operationId: "RefundService_QueryRefund2"
      parameters:
      - name: "refund_id"
        in: "path"
        description: "[REQUIRED] Refund 对象 id"
        required: true
        type: "string"
        x-exportParamName: "RefundId"
      - name: "charge_id"
        in: "query"
        description: "[REQUIRED] 支付 Charge Id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "ChargeId"
        x-optionalDataType: "String"
      - name: "app_id"
        in: "query"
        description: "[REQUIRED] 应用 id"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RefundResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/royalties:
    post:
      tags:
      - "RoyaltyService"
      summary: "创建 Royalty 对象"
      operationId: "RoyaltyService_CreateRoyalty"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1CreateRoyaltyRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1RoyaltyResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/settlement_accounts:
    get:
      tags:
      - "SettlementService"
      summary: "查询 SettlementAccount 对象列表"
      operationId: "SettlementService_ListAllSettlementAccounts"
      parameters:
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "[OPTIONAL] 限制有多少对象可以被返回，限制范围是从 1~100 项，默认是 10 项"
        required: false
        type: "integer"
        default: 10
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "starting_after"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的第一项从何处开始。假设你的一次请求返回列表的最后一项的 id 是\
          \ obj_end，你可以使用 starting_after = obj_end 去获取下一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "StartingAfter"
        x-optionalDataType: "String"
      - name: "ending_before"
        in: "query"
        description: "[OPTIONAL] 在分页时使用的指针，决定了列表的最末项在何处结束。假设你的一次请求返回列表的第一项的 id 是 obj_start，\
          你可以使用 ending_before = obj_start 去获取上一页"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "EndingBefore"
        x-optionalDataType: "String"
      - name: "created.lt"
        in: "query"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLt"
        x-optionalDataType: "Int64"
      - name: "created.lte"
        in: "query"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedLte"
        x-optionalDataType: "Int64"
      - name: "created.gt"
        in: "query"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGt"
        x-optionalDataType: "Int64"
      - name: "created.gte"
        in: "query"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "CreatedGte"
        x-optionalDataType: "Int64"
      - name: "disabled"
        in: "query"
        description: "[OPTIONAL] 是否禁用，默认为 false"
        required: false
        type: "boolean"
        x-exportParamName: "Disabled"
        x-optionalDataType: "Bool"
      - name: "customer_id"
        in: "query"
        description: "[OPTIONAL] 客户 ID"
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "user_id"
        in: "query"
        description: "[OPTIONAL] 商户用户 ID"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1SettlementAccountListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "SettlementService"
      summary: "创建 SettlementAccount 对象"
      operationId: "SettlementService_CreateSettlementAccount"
      parameters:
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "user_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      - name: "customer_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "channel"
        in: "query"
        description: " - ALIPAY: 分账到支付宝\n - WECHANTPAY: 分账到微信支付\n - BANK: 分账到银行卡\n\
          \ - BALANCE: 分账到 justap 账户余额"
        required: false
        type: "string"
        default: "CHANNEL_UNKNOWN"
        enum:
        - "CHANNEL_UNKNOWN"
        - "ALIPAY"
        - "WECHANTPAY"
        - "BANK"
        - "BALANCE"
        x-exportParamName: "Channel"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.account"
        in: "query"
        description: "openid 或者商户号，由类型决定\n\n微信支付分账接收方账户，OPENID或者商户号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientWechatpayChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.name"
        in: "query"
        description: "微信支付分账接收方姓名或名称"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientWechatpayChannelRecipientName"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.force_check"
        in: "query"
        description: "是否强制校验收款人姓名"
        required: false
        type: "boolean"
        default: false
        format: "boolean"
        x-exportParamName: "RecipientWechatpayChannelRecipientForceCheck"
        x-optionalDataType: "Bool"
      - name: "recipient.wechatpay_channel_recipient.type"
        in: "query"
        description: "微信支付分账接收方类型"
        required: false
        type: "string"
        default: "TYPE_UNSET"
        format: "string"
        enum:
        - "TYPE_UNSET"
        - "B2C"
        - "B2B"
        x-exportParamName: "RecipientWechatpayChannelRecipientType"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.account_type"
        in: "query"
        description: "微信支付分账接收方账户类型\n\n - ACCOUNT_TYPE_UNSET: 未设置\n - MERCHANT_ID:\
          \ 分账到微信商户号\n - OPENID: 分账到个人微信号（父公众号的openid，或服务商的openid））\n - SUB_OPENID:\
          \ 分账到个人微信号，子账号的\n - LOGIN_NAME: 分账到微信登录号"
        required: false
        type: "string"
        default: "ACCOUNT_TYPE_UNSET"
        format: "string"
        enum:
        - "ACCOUNT_TYPE_UNSET"
        - "MERCHANT_ID"
        - "OPENID"
        - "SUB_OPENID"
        - "LOGIN_NAME"
        - "USER_ID"
        x-exportParamName: "RecipientWechatpayChannelRecipientAccountType"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.app_id"
        in: "query"
        description: "微信支付分账接收方 openid 所对应的公众号 ID"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientWechatpayChannelRecipientAppId"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.account"
        in: "query"
        description: "支付宝账号，账号ID或者登录邮箱"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientAlipayChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.name"
        in: "query"
        description: "支付宝账号真实姓名"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientAlipayChannelRecipientName"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.type"
        in: "query"
        description: "支付宝账号类型"
        required: false
        type: "string"
        default: "TYPE_UNSET"
        format: "string"
        enum:
        - "TYPE_UNSET"
        - "B2C"
        - "B2B"
        x-exportParamName: "RecipientAlipayChannelRecipientType"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.account_type"
        in: "query"
        description: "支付宝账号类型\n\n - ACCOUNT_TYPE_UNSET: 未设置\n - MERCHANT_ID: 分账到微信\
          商户号\n - OPENID: 分账到个人微信号（父公众号的openid，或服务商的openid））\n - SUB_OPENID: 分账到个人\
          微信号，子账号的\n - LOGIN_NAME: 分账到微信登录号"
        required: false
        type: "string"
        default: "ACCOUNT_TYPE_UNSET"
        format: "string"
        enum:
        - "ACCOUNT_TYPE_UNSET"
        - "MERCHANT_ID"
        - "OPENID"
        - "SUB_OPENID"
        - "LOGIN_NAME"
        - "USER_ID"
        x-exportParamName: "RecipientAlipayChannelRecipientAccountType"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.account"
        in: "query"
        description: "银行卡号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.name"
        in: "query"
        description: "银行卡开户名"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientName"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.type"
        in: "query"
        description: "银行卡类型"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientType"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_name"
        in: "query"
        description: "银行卡开户行编码"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankName"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_branch"
        in: "query"
        description: "银行卡开户支行"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankBranch"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_province"
        in: "query"
        description: "银行卡开户省份"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankProvince"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_city"
        in: "query"
        description: "银行卡开户城市"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankCity"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1SettlementAccountResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/settlement_accounts/search:
    get:
      tags:
      - "SettlementService"
      summary: "搜索 SettlementAccount 对象"
      operationId: "SettlementService_SearchSettlementAccounts"
      parameters:
      - name: "user_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1SettlementAccountListResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
  /v1/settlement_accounts/{id}:
    get:
      tags:
      - "SettlementService"
      summary: "查询 SettlementAccount 对象"
      operationId: "SettlementService_RetrieveSettlementAccount"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      - name: "object"
        in: "query"
        description: "对象类型"
        required: false
        type: "string"
        default: "SettlementAccount"
        format: "string"
        x-exportParamName: "Object"
        x-optionalDataType: "String"
      - name: "data.id"
        in: "query"
        description: "分账接收方的唯一标识"
        required: false
        type: "string"
        default: "0"
        format: "string"
        x-exportParamName: "DataId"
        x-optionalDataType: "String"
      - name: "data.app_id"
        in: "query"
        description: "分账接收方所在的应用 ID"
        required: false
        type: "string"
        default: "0"
        format: "string"
        x-exportParamName: "DataAppId"
        x-optionalDataType: "String"
      - name: "data.user_id"
        in: "query"
        description: "分账接收方的用户 ID"
        required: false
        type: "string"
        default: "0"
        format: "string"
        x-exportParamName: "DataUserId"
        x-optionalDataType: "String"
      - name: "data.channel"
        in: "query"
        description: "分账接收方的账户类型\n\n - ALIPAY: 分账到支付宝\n - WECHANTPAY: 分账到微信支付\n -\
          \ BANK: 分账到银行卡\n - BALANCE: 分账到 justap 账户余额"
        required: false
        type: "string"
        default: "CHANNEL_UNKNOWN"
        enum:
        - "CHANNEL_UNKNOWN"
        - "ALIPAY"
        - "WECHANTPAY"
        - "BANK"
        - "BALANCE"
        x-exportParamName: "DataChannel"
        x-optionalDataType: "String"
      - name: "data.recipient.wechatpay_channel_recipient.account"
        in: "query"
        description: "openid 或者商户号，由类型决定\n\n微信支付分账接收方账户，OPENID或者商户号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientWechatpayChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "data.recipient.wechatpay_channel_recipient.name"
        in: "query"
        description: "微信支付分账接收方姓名或名称"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientWechatpayChannelRecipientName"
        x-optionalDataType: "String"
      - name: "data.recipient.wechatpay_channel_recipient.force_check"
        in: "query"
        description: "是否强制校验收款人姓名"
        required: false
        type: "boolean"
        default: false
        format: "boolean"
        x-exportParamName: "DataRecipientWechatpayChannelRecipientForceCheck"
        x-optionalDataType: "Bool"
      - name: "data.recipient.wechatpay_channel_recipient.type"
        in: "query"
        description: "微信支付分账接收方类型"
        required: false
        type: "string"
        default: "TYPE_UNSET"
        format: "string"
        enum:
        - "TYPE_UNSET"
        - "B2C"
        - "B2B"
        x-exportParamName: "DataRecipientWechatpayChannelRecipientType"
        x-optionalDataType: "String"
      - name: "data.recipient.wechatpay_channel_recipient.account_type"
        in: "query"
        description: "微信支付分账接收方账户类型\n\n - ACCOUNT_TYPE_UNSET: 未设置\n - MERCHANT_ID:\
          \ 分账到微信商户号\n - OPENID: 分账到个人微信号（父公众号的openid，或服务商的openid））\n - SUB_OPENID:\
          \ 分账到个人微信号，子账号的\n - LOGIN_NAME: 分账到微信登录号"
        required: false
        type: "string"
        default: "ACCOUNT_TYPE_UNSET"
        format: "string"
        enum:
        - "ACCOUNT_TYPE_UNSET"
        - "MERCHANT_ID"
        - "OPENID"
        - "SUB_OPENID"
        - "LOGIN_NAME"
        - "USER_ID"
        x-exportParamName: "DataRecipientWechatpayChannelRecipientAccountType"
        x-optionalDataType: "String"
      - name: "data.recipient.wechatpay_channel_recipient.app_id"
        in: "query"
        description: "微信支付分账接收方 openid 所对应的公众号 ID"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientWechatpayChannelRecipientAppId"
        x-optionalDataType: "String"
      - name: "data.recipient.alipay_channel_recipient.account"
        in: "query"
        description: "支付宝账号，账号ID或者登录邮箱"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientAlipayChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "data.recipient.alipay_channel_recipient.name"
        in: "query"
        description: "支付宝账号真实姓名"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientAlipayChannelRecipientName"
        x-optionalDataType: "String"
      - name: "data.recipient.alipay_channel_recipient.type"
        in: "query"
        description: "支付宝账号类型"
        required: false
        type: "string"
        default: "TYPE_UNSET"
        format: "string"
        enum:
        - "TYPE_UNSET"
        - "B2C"
        - "B2B"
        x-exportParamName: "DataRecipientAlipayChannelRecipientType"
        x-optionalDataType: "String"
      - name: "data.recipient.alipay_channel_recipient.account_type"
        in: "query"
        description: "支付宝账号类型\n\n - ACCOUNT_TYPE_UNSET: 未设置\n - MERCHANT_ID: 分账到微信\
          商户号\n - OPENID: 分账到个人微信号（父公众号的openid，或服务商的openid））\n - SUB_OPENID: 分账到个人\
          微信号，子账号的\n - LOGIN_NAME: 分账到微信登录号"
        required: false
        type: "string"
        default: "ACCOUNT_TYPE_UNSET"
        format: "string"
        enum:
        - "ACCOUNT_TYPE_UNSET"
        - "MERCHANT_ID"
        - "OPENID"
        - "SUB_OPENID"
        - "LOGIN_NAME"
        - "USER_ID"
        x-exportParamName: "DataRecipientAlipayChannelRecipientAccountType"
        x-optionalDataType: "String"
      - name: "data.recipient.bank_channel_recipient.account"
        in: "query"
        description: "银行卡号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientBankChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "data.recipient.bank_channel_recipient.name"
        in: "query"
        description: "银行卡开户名"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientBankChannelRecipientName"
        x-optionalDataType: "String"
      - name: "data.recipient.bank_channel_recipient.type"
        in: "query"
        description: "银行卡类型"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientBankChannelRecipientType"
        x-optionalDataType: "String"
      - name: "data.recipient.bank_channel_recipient.bank_name"
        in: "query"
        description: "银行卡开户行编码"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientBankChannelRecipientBankName"
        x-optionalDataType: "String"
      - name: "data.recipient.bank_channel_recipient.bank_branch"
        in: "query"
        description: "银行卡开户支行"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientBankChannelRecipientBankBranch"
        x-optionalDataType: "String"
      - name: "data.recipient.bank_channel_recipient.bank_province"
        in: "query"
        description: "银行卡开户省份"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientBankChannelRecipientBankProvince"
        x-optionalDataType: "String"
      - name: "data.recipient.bank_channel_recipient.bank_city"
        in: "query"
        description: "银行卡开户城市"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "DataRecipientBankChannelRecipientBankCity"
        x-optionalDataType: "String"
      - name: "data.created"
        in: "query"
        description: "分账接收方的创建时间"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "DataCreated"
        x-optionalDataType: "Int64"
      - name: "data.updated"
        in: "query"
        description: "分账接收方的更新时间"
        required: false
        type: "integer"
        default: 0
        format: "int64"
        x-exportParamName: "DataUpdated"
        x-optionalDataType: "Int64"
      - name: "data.object"
        in: "query"
        description: "对象类型"
        required: false
        type: "string"
        default: "Recipient"
        format: "string"
        x-exportParamName: "DataObject"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1SettlementAccountResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    post:
      tags:
      - "SettlementService"
      summary: "更新 SettlementAccount 对象"
      operationId: "SettlementService_UpdateSettlementAccount"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "customer_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "user_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UserId"
        x-optionalDataType: "String"
      - name: "channel"
        in: "query"
        description: " - ALIPAY: 分账到支付宝\n - WECHANTPAY: 分账到微信支付\n - BANK: 分账到银行卡\n\
          \ - BALANCE: 分账到 justap 账户余额"
        required: false
        type: "string"
        default: "CHANNEL_UNKNOWN"
        enum:
        - "CHANNEL_UNKNOWN"
        - "ALIPAY"
        - "WECHANTPAY"
        - "BANK"
        - "BALANCE"
        x-exportParamName: "Channel"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.account"
        in: "query"
        description: "openid 或者商户号，由类型决定\n\n微信支付分账接收方账户，OPENID或者商户号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientWechatpayChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.name"
        in: "query"
        description: "微信支付分账接收方姓名或名称"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientWechatpayChannelRecipientName"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.force_check"
        in: "query"
        description: "是否强制校验收款人姓名"
        required: false
        type: "boolean"
        default: false
        format: "boolean"
        x-exportParamName: "RecipientWechatpayChannelRecipientForceCheck"
        x-optionalDataType: "Bool"
      - name: "recipient.wechatpay_channel_recipient.type"
        in: "query"
        description: "微信支付分账接收方类型"
        required: false
        type: "string"
        default: "TYPE_UNSET"
        format: "string"
        enum:
        - "TYPE_UNSET"
        - "B2C"
        - "B2B"
        x-exportParamName: "RecipientWechatpayChannelRecipientType"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.account_type"
        in: "query"
        description: "微信支付分账接收方账户类型\n\n - ACCOUNT_TYPE_UNSET: 未设置\n - MERCHANT_ID:\
          \ 分账到微信商户号\n - OPENID: 分账到个人微信号（父公众号的openid，或服务商的openid））\n - SUB_OPENID:\
          \ 分账到个人微信号，子账号的\n - LOGIN_NAME: 分账到微信登录号"
        required: false
        type: "string"
        default: "ACCOUNT_TYPE_UNSET"
        format: "string"
        enum:
        - "ACCOUNT_TYPE_UNSET"
        - "MERCHANT_ID"
        - "OPENID"
        - "SUB_OPENID"
        - "LOGIN_NAME"
        - "USER_ID"
        x-exportParamName: "RecipientWechatpayChannelRecipientAccountType"
        x-optionalDataType: "String"
      - name: "recipient.wechatpay_channel_recipient.app_id"
        in: "query"
        description: "微信支付分账接收方 openid 所对应的公众号 ID"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientWechatpayChannelRecipientAppId"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.account"
        in: "query"
        description: "支付宝账号，账号ID或者登录邮箱"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientAlipayChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.name"
        in: "query"
        description: "支付宝账号真实姓名"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientAlipayChannelRecipientName"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.type"
        in: "query"
        description: "支付宝账号类型"
        required: false
        type: "string"
        default: "TYPE_UNSET"
        format: "string"
        enum:
        - "TYPE_UNSET"
        - "B2C"
        - "B2B"
        x-exportParamName: "RecipientAlipayChannelRecipientType"
        x-optionalDataType: "String"
      - name: "recipient.alipay_channel_recipient.account_type"
        in: "query"
        description: "支付宝账号类型\n\n - ACCOUNT_TYPE_UNSET: 未设置\n - MERCHANT_ID: 分账到微信\
          商户号\n - OPENID: 分账到个人微信号（父公众号的openid，或服务商的openid））\n - SUB_OPENID: 分账到个人\
          微信号，子账号的\n - LOGIN_NAME: 分账到微信登录号"
        required: false
        type: "string"
        default: "ACCOUNT_TYPE_UNSET"
        format: "string"
        enum:
        - "ACCOUNT_TYPE_UNSET"
        - "MERCHANT_ID"
        - "OPENID"
        - "SUB_OPENID"
        - "LOGIN_NAME"
        - "USER_ID"
        x-exportParamName: "RecipientAlipayChannelRecipientAccountType"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.account"
        in: "query"
        description: "银行卡号"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientAccount"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.name"
        in: "query"
        description: "银行卡开户名"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientName"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.type"
        in: "query"
        description: "银行卡类型"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientType"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_name"
        in: "query"
        description: "银行卡开户行编码"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankName"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_branch"
        in: "query"
        description: "银行卡开户支行"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankBranch"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_province"
        in: "query"
        description: "银行卡开户省份"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankProvince"
        x-optionalDataType: "String"
      - name: "recipient.bank_channel_recipient.bank_city"
        in: "query"
        description: "银行卡开户城市"
        required: false
        type: "string"
        format: "string"
        x-exportParamName: "RecipientBankChannelRecipientBankCity"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1SettlementAccountResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
    delete:
      tags:
      - "SettlementService"
      summary: "删除 SettlementAccount 对象"
      operationId: "SettlementService_DeleteSettlementAccount"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "app_id"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A successful response."
          schema:
            $ref: "#/definitions/v1DeleteSettlementAccountResponse"
        "401":
          description: "表示认证信息错误或签名错误"
          schema:
            $ref: "#/definitions/rpcStatus"
        "403":
          description: "表示无权限访问该资源"
          schema:
            $ref: "#/definitions/rpcStatus"
        "404":
          description: "表示该资源未找到"
          schema:
            $ref: "#/definitions/rpcStatus"
        "500":
          description: "表示服务器在处理请求时出错"
          schema:
            $ref: "#/definitions/rpcStatus"
        "503":
          description: "表示服务器暂时无法处理请求"
          schema:
            $ref: "#/definitions/rpcStatus"
        default:
          description: "An unexpected error response."
          schema:
            $ref: "#/definitions/rpcStatus"
securityDefinitions:
  ApiKeyAuth:
    description: "在调用 API 时，必须提供 API Key 作为每个请求的身份验证。你可以在管理平台内管理你的 API Key。API Key\
      \ 是商户在系统中的身份标识，请安全存储，确保其不要被泄露。\n\n\nAPI 使用 API Key 进行认证，调用 API 时在添加格式为：`X_JUSTAP_API_KEY:\
      \ TEST_XXXXX` 的自定义求请求头。\n\n\nAPI Key 分为 live 和 test 两种模式。分别对应真实交易环境和模拟测试交易环境\
      并且可以实时切换。测试模式下的 API Key 会模拟交易等请求，但是不会产生任何真实交易行为和费用，便于调试和接入。 所有的 API 请求必须通过 HTTPS\
      \ 发送，使用 HTTP 会被服务器拒绝。\n"
    type: "apiKey"
    name: "X-JUSTAP-API-KEY"
    in: "header"
definitions:
  CreateRoyaltyRequestRoyaltyFeeMode:
    type: "string"
    title: "- free: 不收取\n - fixed: 固定金额\n - rate: 比例"
    enum:
    - "free"
    - "fixed"
    - "rate"
    default: "free"
  CreateRoyaltyRequestRoyaltyReceiver:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
        description: "[REQUIRED] 根据 royalty_mode 参数，如果 royalty_mode = fixed, 则此参数传\
          分润金额，单位元，如果 royalty_mode = rate，此参数传百分比小数， 0.1 表示 10%"
      fee:
        type: "number"
        format: "float"
        description: "[OPTIONAL] 手续费，单位：元。 如果传递，则每笔分账都会在应分帐金额基础上扣除手续费后再请求支付平台进行分账"
      fee_model:
        description: "[OPTIONAL] 手续费模式，fixed 表示固定金额，rate 表示按比例计算手续费。此参数传手续费比例，0.1\
          \ 表示 10%"
        $ref: "#/definitions/CreateRoyaltyRequestRoyaltyFeeMode"
      fee_ratio:
        type: "number"
        format: "float"
        description: "[OPTIONAL] 手续费比例，与 手续费 字段二选一即可ratio"
      ratio:
        type: "number"
        format: "float"
        description: "[OPTIONAL] 根据 royalty_mode 参数，如果 royalty_mode = fixed, 此参数无效\
          ，如果 royalty_mode = rate，此参数传分润比例，0.1 表示 10%"
      recipient_business_user_id:
        type: "string"
        format: "string"
        description: "接受方的商业用户ID"
      royalty_mode:
        description: "[REQUIRED] 分润模式，free 表示不收取，fixed 表示固定金额，rate 表示按比例分润"
        $ref: "#/definitions/v1RoyaltyMode"
  ExtraAlipayInvoiceInfoKeyInfo:
    type: "object"
    properties:
      invoice_merchant_name:
        type: "string"
      is_support_invoice:
        type: "boolean"
      tax_num:
        type: "string"
    example:
      tax_num: "tax_num"
      is_support_invoice: true
      invoice_merchant_name: "invoice_merchant_name"
  ExtraAlipaySettleInfoSettleDetailInfos:
    type: "object"
    properties:
      amount:
        type: "string"
      settle_entity_id:
        type: "string"
      settle_entity_type:
        type: "string"
      summary_dimension:
        type: "string"
      trans_in:
        type: "string"
      trans_in_type:
        type: "string"
    example:
      amount: "amount"
      settle_entity_type: "settle_entity_type"
      trans_in: "trans_in"
      summary_dimension: "summary_dimension"
      settle_entity_id: "settle_entity_id"
      trans_in_type: "trans_in_type"
  ExtraWechatpayDetailGoodsDetail:
    type: "object"
    properties:
      Wechatpay_goods_id:
        type: "string"
      goods_name:
        type: "string"
      merchant_goods_id:
        type: "string"
      quantity:
        type: "string"
        format: "int64"
      unit_price:
        type: "string"
        format: "int64"
    example:
      goods_name: "goods_name"
      quantity: "quantity"
      Wechatpay_goods_id: "Wechatpay_goods_id"
      merchant_goods_id: "merchant_goods_id"
      unit_price: "unit_price"
  ExtraWechatpaySceneInfoH5Info:
    type: "object"
    properties:
      app_name:
        type: "string"
      app_url:
        type: "string"
      bundle_id:
        type: "string"
      package_name:
        type: "string"
      type:
        type: "string"
    example:
      app_name: "app_name"
      app_url: "app_url"
      bundle_id: "bundle_id"
      package_name: "package_name"
      type: "type"
  ExtraWechatpaySceneInfoStoreInfo:
    type: "object"
    properties:
      address:
        type: "string"
      area_code:
        type: "string"
      id:
        type: "string"
      name:
        type: "string"
    example:
      address: "address"
      area_code: "area_code"
      name: "name"
      id: "id"
  OpenApiRoyaltyDetailInfoPojoTradeFundBillItem:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
        description: "金额"
      fund_channel:
        type: "string"
        format: "string"
        description: "资金渠道"
      fund_type:
        type: "string"
        format: "string"
        description: "渠道所使用的资金类型"
      real_amount:
        type: "number"
        format: "float"
        description: "渠道实际付款金额"
    title: "only in response"
    example:
      real_amount: 6.878052
      amount: 6.778325
      fund_type: "fund_type"
      fund_channel: "fund_channel"
  RefundExtraAlipayOpenApiRoyaltyDetailInfoPojo:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
        description: "分账的金额，单位为元"
      buyer_logon_id:
        type: "string"
        format: "string"
        description: "买家支付宝账号"
      buyer_user_id:
        type: "string"
        format: "string"
        description: "买家在支付宝的用户id"
      desc:
        type: "string"
        format: "string"
        description: "分账描述"
      fund_change:
        type: "string"
        format: "string"
        description: "分账变更消息"
      refund_detail_item_list:
        type: "array"
        description: "退款使用的资金渠道"
        items:
          $ref: "#/definitions/OpenApiRoyaltyDetailInfoPojoTradeFundBillItem"
      refund_fee:
        type: "number"
        format: "float"
        description: "总退款金额"
      royalty_scene:
        type: "string"
        format: "string"
        description: "可选值：达人佣金、平台服务费、技术服务费、其他"
      royalty_type:
        type: "string"
        format: "string"
        description: "分账类型"
      send_back_fee:
        type: "string"
        format: "string"
        description: "买家实际退款金额"
      store_name:
        type: "string"
        format: "string"
        description: "交易场景"
      trans_in:
        type: "string"
        format: "string"
        description: "收入方账户"
      trans_in_name:
        type: "string"
        format: "string"
        description: "分账收款方姓名"
      trans_in_type:
        type: "string"
        format: "string"
        description: "收入方账户类型"
      trans_out:
        type: "string"
        format: "string"
        description: "支出方账户"
      trans_out_type:
        type: "string"
        format: "string"
        description: "支出方账户类型"
    example:
      refund_detail_item_list:
      - real_amount: 6.878052
        amount: 6.778325
        fund_type: "fund_type"
        fund_channel: "fund_channel"
      - real_amount: 6.878052
        amount: 6.778325
        fund_type: "fund_type"
        fund_channel: "fund_channel"
      amount: 2.8841622
      trans_in: "trans_in"
      royalty_type: "royalty_type"
      buyer_user_id: "buyer_user_id"
      trans_out: "trans_out"
      trans_out_type: "trans_out_type"
      trans_in_type: "trans_in_type"
      refund_fee: 5.9448957
      send_back_fee: "send_back_fee"
      store_name: "store_name"
      buyer_logon_id: "buyer_logon_id"
      royalty_scene: "royalty_scene"
      fund_change: "fund_change"
      trans_in_name: "trans_in_name"
      desc: "desc"
  RefundExtraWechatPayAccount:
    type: "object"
    properties:
      from:
        type: "array"
        description: "退款出资账户及金额"
        items:
          $ref: "#/definitions/RefundExtraWechatPayAccount"
    example:
      from:
      - null
      - null
  RefundExtraWechatPayGoodsDetailItem:
    type: "object"
    properties:
      goods_name:
        type: "string"
        format: "string"
        description: "商品名称, 商品的实际名称"
      merchant_goods_id:
        type: "string"
        format: "string"
        description: "商户侧商品编码, 由半角的大小写字母、数字、中划线、下划线中的一种或几种组成"
      refund_amount:
        type: "integer"
        format: "int64"
        description: "商品退款金额，单位为分"
      refund_quantity:
        type: "integer"
        format: "int64"
        description: "\t单品的退款数量"
      unit_price:
        type: "integer"
        format: "int64"
        description: "商品单价金额，单位为分"
      wechatpay_goods_id:
        type: "string"
        format: "string"
        description: "微信支付商品编码, 微信支付定义的统一商品编号（没有可不传）"
    example:
      goods_name: "goods_name"
      wechatpay_goods_id: "wechatpay_goods_id"
      merchant_goods_id: "merchant_goods_id"
      refund_amount: 6
      unit_price: 3
      refund_quantity: 3
  SettlementAccountRecipientAccountType:
    type: "string"
    title: "微信支付的分账接收方账户类型:\n     1、MERCHANT_ID：商户号\n     2、OPENID：个人openid（由父商户APPID转\
      换得到）, 或者支付宝的 openid\n     3、SUB_OPENID: 个人sub_openid（由子商户APPID转换得到）\n     4、\
      LOGIN_NAME: 支付宝的邮箱\n     5、USER_ID: 支付宝的用户id"
    description: "- ACCOUNT_TYPE_UNSET: 未设置\n - MERCHANT_ID: 分账到微信商户号\n - OPENID:\
      \ 分账到个人微信号（父公众号的openid，或服务商的openid））\n - SUB_OPENID: 分账到个人微信号，子账号的\n - LOGIN_NAME:\
      \ 分账到微信登录号"
    enum:
    - "ACCOUNT_TYPE_UNSET"
    - "MERCHANT_ID"
    - "OPENID"
    - "SUB_OPENID"
    - "LOGIN_NAME"
    - "USER_ID"
    default: "ACCOUNT_TYPE_UNSET"
  SettlementAccountRecipientAlipayChannelRecipient:
    type: "object"
    properties:
      account:
        type: "string"
        format: "string"
        description: "支付宝账号，账号ID或者登录邮箱"
      account_type:
        description: "支付宝账号类型"
        $ref: "#/definitions/SettlementAccountRecipientAccountType"
      name:
        type: "string"
        format: "string"
        description: "支付宝账号真实姓名"
      type:
        description: "支付宝账号类型"
        $ref: "#/definitions/SettlementAccountRecipientRecipientType"
    example:
      account_type: {}
      name: "name"
      type: {}
      account: "account"
  SettlementAccountRecipientBankChannelRecipient:
    type: "object"
    properties:
      account:
        type: "string"
        format: "string"
        description: "银行卡号"
      bank_branch:
        type: "string"
        format: "string"
        description: "银行卡开户支行"
      bank_city:
        type: "string"
        format: "string"
        description: "银行卡开户城市"
      bank_name:
        type: "string"
        format: "string"
        description: "银行卡开户行编码"
      bank_province:
        type: "string"
        format: "string"
        description: "银行卡开户省份"
      name:
        type: "string"
        format: "string"
        description: "银行卡开户名"
      type:
        type: "string"
        format: "string"
        description: "银行卡类型"
    example:
      bank_branch: "bank_branch"
      bank_name: "bank_name"
      name: "name"
      bank_province: "bank_province"
      type: "type"
      account: "account"
      bank_city: "bank_city"
  SettlementAccountRecipientRecipientType:
    type: "string"
    enum:
    - "TYPE_UNSET"
    - "B2C"
    - "B2B"
    default: "TYPE_UNSET"
  SettlementAccountRecipientWechatpayChannelRecipient:
    type: "object"
    properties:
      account:
        type: "string"
        format: "string"
        description: "微信支付分账接收方账户，OPENID或者商户号"
        title: "openid 或者商户号，由类型决定"
      account_type:
        description: "微信支付分账接收方账户类型"
        $ref: "#/definitions/SettlementAccountRecipientAccountType"
      app_id:
        type: "string"
        format: "string"
        description: "微信支付分账接收方 openid 所对应的公众号 ID"
      force_check:
        type: "boolean"
        format: "boolean"
        description: "是否强制校验收款人姓名"
        default: false
      name:
        type: "string"
        format: "string"
        description: "微信支付分账接收方姓名或名称"
      type:
        description: "微信支付分账接收方类型"
        $ref: "#/definitions/SettlementAccountRecipientRecipientType"
    example:
      name: "name"
      app_id: "app_id"
      account: "account"
      force_check: false
  protobufAny:
    type: "object"
    properties:
      '@type':
        type: "string"
        description: "A URL/resource name that uniquely identifies the type of the\
          \ serialized\nprotocol buffer message. This string must contain at least\n\
          one \"/\" character. The last segment of the URL's path must represent\n\
          the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
          \ The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\
          \nIn practice, teams usually precompile into the binary all types that they\n\
          expect it to use in the context of Any. However, for URLs which use the\n\
          scheme `http`, `https`, or no scheme, one can optionally set up a type\n\
          server that maps type URLs to message definitions as follows:\n\n* If no\
          \ scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must\
          \ yield a [google.protobuf.Type][]\n  value in binary format, or produce\
          \ an error.\n* Applications are allowed to cache lookup results based on\
          \ the\n  URL, or have them precompiled into a binary to avoid any\n  lookup.\
          \ Therefore, binary compatibility needs to be preserved\n  on changes to\
          \ types. (Use versioned type names to manage\n  breaking changes.)\n\nNote:\
          \ this functionality is not currently available in the official\nprotobuf\
          \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
          \nSchemes other than `http`, `https` (or the empty scheme) might be\nused\
          \ with implementation specific semantics."
    description: "`Any` contains an arbitrary serialized protocol buffer message along\
      \ with a\nURL that describes the type of the serialized message.\n\nProtobuf\
      \ library provides support to pack/unpack Any values in the form\nof utility\
      \ functions or additional generated methods of the Any type.\n\nExample 1: Pack\
      \ and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
      \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack\
      \ and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
      \    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
      \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
      \      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in\
      \ Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err\
      \ != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err\
      \ := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods\
      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
      \ as the type URL and the unpack\nmethods only use the fully qualified type\
      \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
      \ will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an\
      \ `Any` value uses the regular\nrepresentation of the deserialized, embedded\
      \ message, with an\nadditional field `@type` which contains the type URL. Example:\n\
      \n    package google.profile;\n    message Person {\n      string first_name\
      \ = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf\
      \ the embedded message type is well-known and has a custom JSON\nrepresentation,\
      \ that representation will be embedded adding a field\n`value` which holds the\
      \ custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
      \n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n\
      \      \"value\": \"1.212s\"\n    }"
    example:
      '@type': "@type"
    additionalProperties: {}
  rpcStatus:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      details:
        type: "array"
        items:
          $ref: "#/definitions/protobufAny"
      message:
        type: "string"
  tradev1Channel:
    type: "string"
    title: "支付渠道枚举值"
    description: "- BALANCE: 余额支付\n - AlipayQR: 支付宝扫码支付\n - AlipayScan: 支付宝条码支付\n\
      \ - AlipayApp: 支付宝 App 支付\n - AlipayWap: 支付宝手机网站支付\n - AlipayPage: 支付宝电脑网站支付\
      \n - AlipayFace: 支付宝刷脸支付\n - AlipayLite: 支付宝小程序支付\n - WechatpayApp: 微信 App 支\
      付\n - WechatpayJSAPI: 微信 JSAPI 支付\n - WechatpayH5: 微信 H5 支付\n - WechatpayNative:\
      \ 微信 Native 支付\n - WechatpayLite: 微信小程序支付\n - WechatpayFace: 刷脸支付\n - WechatpayScan:\
      \ 微信付款码支付"
    enum:
    - "CHANNEL_INVALID_UNSPECIFIED"
    - "BALANCE"
    - "AlipayQR"
    - "AlipayScan"
    - "AlipayApp"
    - "AlipayWap"
    - "AlipayPage"
    - "AlipayFace"
    - "AlipayLite"
    - "WechatpayApp"
    - "WechatpayJSAPI"
    - "WechatpayH5"
    - "WechatpayNative"
    - "WechatpayLite"
    - "WechatpayFace"
    - "WechatpayScan"
    default: "CHANNEL_INVALID_UNSPECIFIED"
  tradev1RoyaltyMethod:
    type: "string"
    title: "--------------------------------------------------\nRoyalties"
    description: "- Alipay: 支付宝\n - Wechatpay: 对应 MERCHANT_ID"
    enum:
    - "RoyaltyMethodUnset"
    - "Balance"
    - "Alipay"
    - "Wechatpay"
    default: "RoyaltyMethodUnset"
  v1AcquirerCreateRoyaltyResponse:
    type: "object"
  v1AcquirerQueryRoyaltyResponse:
    type: "object"
  v1AcquirerRoyaltyNotifyResponse:
    type: "object"
  v1AlipayCallbackResponse:
    type: "object"
    properties:
      callback_url:
        type: "string"
  v1AlipayNotifyResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
  v1CallbackRoutingResponse:
    type: "object"
  v1Charge:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "double"
        description: "订单金额"
        default: 0.0
      amount_fee:
        type: "number"
        format: "float"
        description: "下单金额"
      amount_refund:
        type: "number"
        format: "float"
        description: "订单退款总金额"
      amount_royalty:
        type: "number"
        format: "float"
        description: "分账金额"
      amount_settle:
        type: "number"
        format: "double"
        description: "结算金额，不一定有，视支付通道情况返回"
      app_id:
        type: "string"
        format: "string"
        description: "应用ID"
      body:
        type: "string"
        format: "string"
        description: "订单描述信息"
      channel:
        description: "支付渠道"
        $ref: "#/definitions/tradev1Channel"
      charge_id:
        type: "string"
        format: "string"
        description: "Charge 对象 id"
      client_ip:
        type: "string"
        format: "string"
        description: "顾客IP"
      closed:
        type: "boolean"
        format: "boolean"
        description: "是否关闭"
        default: false
      closed_at:
        type: "string"
        format: "date-time"
        description: "关闭时间"
      closed_ts:
        type: "string"
        format: "int64"
        description: "关闭时间戳"
      created_at:
        type: "string"
        format: "date-time"
        description: "Charge 对象创建时间"
      credential:
        description: "支付凭证"
        $ref: "#/definitions/protobufAny"
      currency:
        type: "string"
        format: "string"
        description: "货币单位，当前仅支持 CNY"
      description:
        type: "string"
        format: "string"
        description: "描述信息"
      expired_ts:
        type: "string"
        format: "int64"
        description: "订单过期时间戳"
      extra:
        description: "支付渠道元数据"
        $ref: "#/definitions/v1ChargeExtra"
      failure_code:
        type: "string"
        format: "string"
        description: "收单机构错误码"
      failure_msg:
        type: "string"
        format: "string"
        description: "收单机构错误描述信息"
      live_mode:
        type: "boolean"
        description: "表明是否是沙箱环境"
        default: false
      merchant_trade_id:
        type: "string"
        format: "string"
        description: "商户系统订单号，APP下需唯一"
      metadata:
        type: "object"
        description: "订单元数据，原样返回"
        additionalProperties:
          type: "string"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "Charge"
      paid:
        type: "boolean"
        description: "表明是否已支付"
        default: false
      paid_at:
        type: "string"
        format: "date-time"
        description: "支付时间"
      paid_ts:
        type: "string"
        format: "int64"
        description: "支付时间戳"
      refunded:
        type: "boolean"
        description: "表明是否包含退款，含退款失败的"
        default: false
      refunds:
        type: "array"
        description: "Refund 对象列表"
        items:
          $ref: "#/definitions/v1Refund"
      reversed:
        type: "boolean"
        description: "表明是否已经撤销"
        default: false
      reversed_at:
        type: "string"
        format: "date-time"
        description: "冲正时间"
      subject:
        type: "string"
        format: "string"
        description: "订单描述主题"
      time_expire:
        type: "string"
        format: "date-time"
        description: "订单过期时间"
      transaction_no:
        type: "string"
        format: "string"
        description: "Charge 的支付单号"
      ttl:
        type: "integer"
        format: "int32"
        description: "订单生存时间，单位秒"
        default: 0
    title: "Charge 对象"
    example:
      metadata:
        key: "metadata"
      time_expire: "2000-01-23T04:56:07.000+00:00"
      subject: "subject"
      amount_fee: 6.0274563
      channel: {}
      created_at: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      body: "body"
      failure_msg: "failure_msg"
      refunds:
      - amount: 7.143538
        failure_code: "failure_code"
        metadata:
          key: "metadata"
        succeed_ts: 7.05877035158235610623478351044468581676483154296875
        created: 0.885137473901165261480628032586537301540374755859375
        refund_no: "refund_no"
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        success_at: "2000-01-23T04:56:07.000+00:00"
        is_success: false
        failure_msg: "failure_msg"
        refund_id: "refund_id"
        charge_id: "charge_id"
        account:
          alipay:
            refund_royalty_parameters:
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
          wechatpay:
            goods_detail:
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            account:
              from:
              - null
              - null
        transaction_no: "transaction_no"
        charge_merchant_trade_id: "charge_merchant_trade_id"
        status: "status"
      - amount: 7.143538
        failure_code: "failure_code"
        metadata:
          key: "metadata"
        succeed_ts: 7.05877035158235610623478351044468581676483154296875
        created: 0.885137473901165261480628032586537301540374755859375
        refund_no: "refund_no"
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        success_at: "2000-01-23T04:56:07.000+00:00"
        is_success: false
        failure_msg: "failure_msg"
        refund_id: "refund_id"
        charge_id: "charge_id"
        account:
          alipay:
            refund_royalty_parameters:
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
          wechatpay:
            goods_detail:
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            account:
              from:
              - null
              - null
        transaction_no: "transaction_no"
        charge_merchant_trade_id: "charge_merchant_trade_id"
        status: "status"
      credential:
        '@type': "@type"
      amount_refund: 1.4658129
      charge_id: "charge_id"
      extra:
        alipay_face: {}
        wechatpay_lite:
          time_expire: "time_expire"
          goods_tag: "goods_tag"
          settle_info:
            profit_sharing: true
          time_start: "time_start"
          applet_config:
            timeStamp: "timeStamp"
            package: "package"
            paySign: "paySign"
            appId: "appId"
            signType: "signType"
            nonceStr: "nonceStr"
          attach: "attach"
          detail:
            invoice_id: "invoice_id"
            goods_detail:
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            cost_price: "cost_price"
          payer:
            openid: "openid"
            appid: "appid"
          prepay_id: "prepay_id"
          scene_info:
            store_info:
              address: "address"
              area_code: "area_code"
              name: "name"
              id: "id"
            device_id: "device_id"
            h5_info:
              app_name: "app_name"
              app_url: "app_url"
              bundle_id: "bundle_id"
              package_name: "package_name"
              type: "type"
            payer_client_ip: "payer_client_ip"
        wechatpay_native:
          time_expire: "time_expire"
          goods_tag: "goods_tag"
          settle_info:
            profit_sharing: true
          time_start: "time_start"
          qr_code: "qr_code"
          attach: "attach"
          detail:
            invoice_id: "invoice_id"
            goods_detail:
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            cost_price: "cost_price"
          qr_link: "qr_link"
          scene_info:
            store_info:
              address: "address"
              area_code: "area_code"
              name: "name"
              id: "id"
            device_id: "device_id"
            h5_info:
              app_name: "app_name"
              app_url: "app_url"
              bundle_id: "bundle_id"
              package_name: "package_name"
              type: "type"
            payer_client_ip: "payer_client_ip"
        alipay_scan:
          extend_params:
            hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
            sys_service_provider_id: "sys_service_provider_id"
            hb_fq_num: "hb_fq_num"
            industry_reflux_info: "industry_reflux_info"
            specified_seller_name: "specified_seller_name"
            card_type: "card_type"
          query_options: "query_options"
          discount_amount: 7.457744773683766
          is_async_pay:
            async_type: "async_type"
          operator_id: "operator_id"
          buyer_id: "buyer_id"
          product_code: "product_code"
          invoice_amount: 4.965218492984954
          auth_no: "auth_no"
          fund_bill_list:
            real_amount: "real_amount"
            amount: "amount"
            fund_channel: "fund_channel"
          scene: "scene"
          auth_confirm_mode: "auth_confirm_mode"
          store_name: "store_name"
          receipt_amount: 9.965781217890562
          discount_goods_detail: "discount_goods_detail"
          buyer_pay_amount: 6.84685269835264
          terminal_id: "terminal_id"
          store_id: "store_id"
          gmt_payment: "gmt_payment"
          pay_params: "pay_params"
          buyer_user_id: "buyer_user_id"
          goods_detail:
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          auth_code: "auth_code"
          discountable_amount: 1.1730742509559433
          voucher_detail_list:
            purchase_ant_contribute: 6.438423552598547
            amount: 6.683562403749608
            merchant_contribute: 8.762042012749001
            purchase_buyer_contribute: 3.5571952270680973
            name: "name"
            memo: "memo"
            purchase_merchant_contribute: 6.965117697638846
            other_contribute: 9.018348186070783
            template_id: "template_id"
            id: "id"
            type: "type"
          advance_payment_type: "advance_payment_type"
          total_amount: 9.369310271410669
          buyer_logon_id: "buyer_logon_id"
          request_org_pid: "request_org_pid"
          point_amount: 5.025004791520295
        alipay_app:
          store_id: "store_id"
          credit_biz_order_id: "credit_biz_order_id"
          extend_params:
            hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
            sys_service_provider_id: "sys_service_provider_id"
            hb_fq_num: "hb_fq_num"
            industry_reflux_info: "industry_reflux_info"
            specified_seller_name: "specified_seller_name"
            card_type: "card_type"
          credit_agreement_id: "credit_agreement_id"
          product_code: "product_code"
          goods_detail:
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          enable_pay_channels: "enable_pay_channels"
          ext_user_info:
            cert_type: "cert_type"
            cert_no: "cert_no"
            mobile: "mobile"
            name: "name"
            fix_buyer: "fix_buyer"
            min_age: "min_age"
            need_check_info: "need_check_info"
          credit_pay_mode: "credit_pay_mode"
          merchant_trade_id: "merchant_trade_id"
          disable_pay_channels: "disable_pay_channels"
          goods_type: "goods_type"
          seller_id: "seller_id"
          pay_param: "pay_param"
        alipay_wap:
          store_id: "store_id"
          extend_params:
            hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
            sys_service_provider_id: "sys_service_provider_id"
            hb_fq_num: "hb_fq_num"
            industry_reflux_info: "industry_reflux_info"
            specified_seller_name: "specified_seller_name"
            card_type: "card_type"
          quit_url: "quit_url"
          product_code: "product_code"
          goods_detail:
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          pay_url: "pay_url"
          enable_pay_channels: "enable_pay_channels"
          fund_bill_list:
          - "fund_bill_list"
          - "fund_bill_list"
          voucher_detail_list:
            purchase_ant_contribute: 6.438423552598547
            amount: 6.683562403749608
            merchant_contribute: 8.762042012749001
            purchase_buyer_contribute: 3.5571952270680973
            name: "name"
            memo: "memo"
            purchase_merchant_contribute: 6.965117697638846
            other_contribute: 9.018348186070783
            template_id: "template_id"
            id: "id"
            type: "type"
          merchant_trade_id: "merchant_trade_id"
          business_params: "business_params"
          disable_pay_channels: "disable_pay_channels"
          return_url: "return_url"
          goods_type: "goods_type"
          auth_token: "auth_token"
          promo_params: "promo_params"
          seller_id: "seller_id"
        wechatpay_app:
          time_expire: "time_expire"
          goods_tag: "goods_tag"
          settle_info:
            profit_sharing: true
          time_start: "time_start"
          app_config:
            package: "package"
            appid: "appid"
            sign: "sign"
            partnerid: "partnerid"
            prepayid: "prepayid"
            noncestr: "noncestr"
            timestamp: "timestamp"
          attach: "attach"
          detail:
            invoice_id: "invoice_id"
            goods_detail:
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            cost_price: "cost_price"
          prepay_id: "prepay_id"
          scene_info:
            store_info:
              address: "address"
              area_code: "area_code"
              name: "name"
              id: "id"
            device_id: "device_id"
            h5_info:
              app_name: "app_name"
              app_url: "app_url"
              bundle_id: "bundle_id"
              package_name: "package_name"
              type: "type"
            payer_client_ip: "payer_client_ip"
        wechatpay_jsapi:
          time_expire: "time_expire"
          goods_tag: "goods_tag"
          settle_info:
            profit_sharing: true
          time_start: "time_start"
          jsapi_config:
            timeStamp: "timeStamp"
            package: "package"
            paySign: "paySign"
            appId: "appId"
            signType: "signType"
            nonceStr: "nonceStr"
          attach: "attach"
          detail:
            invoice_id: "invoice_id"
            goods_detail:
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            cost_price: "cost_price"
          payer:
            openid: "openid"
            appid: "appid"
          prepay_id: "prepay_id"
          scene_info:
            store_info:
              address: "address"
              area_code: "area_code"
              name: "name"
              id: "id"
            device_id: "device_id"
            h5_info:
              app_name: "app_name"
              app_url: "app_url"
              bundle_id: "bundle_id"
              package_name: "package_name"
              type: "type"
            payer_client_ip: "payer_client_ip"
        alipay_page:
          store_id: "store_id"
          extend_params:
            hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
            sys_service_provider_id: "sys_service_provider_id"
            hb_fq_num: "hb_fq_num"
            industry_reflux_info: "industry_reflux_info"
            specified_seller_name: "specified_seller_name"
            card_type: "card_type"
          time_expire: 1
          request_from_url: 1.024645700144157789424070870154537260532379150390625
          integration_type: 7.3862819483858839220147274318151175975799560546875
          qr_pay_mode: "qr_pay_mode"
          qrcode_width: 1.231513536777255612975068288506008684635162353515625
          goods_detail:
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          pay_url: "pay_url"
          enable_pay_channels: "enable_pay_channels"
          sub_merchant:
            merchant_id: "merchant_id"
            merchant_type: "merchant_type"
          invoice_info:
            key_info:
              tax_num: "tax_num"
              is_support_invoice: true
              invoice_merchant_name: "invoice_merchant_name"
            details: "details"
          merchant_trade_id: "merchant_trade_id"
          business_params: 4.1456080298839363962315474054776132106781005859375
          disable_pay_channels: "disable_pay_channels"
          goods_type: "goods_type"
          promo_params: "promo_params"
          seller_id: "seller_id"
        wechatpay_scan:
          time_expire: "time_expire"
          bank_type: "bank_type"
          settle_info:
            profit_sharing: true
          time_start: "time_start"
          sub_is_subscribe: false
          fee_type: "fee_type"
          payer:
            openid: "openid"
            appid: "appid"
          spbill_create_ip: "spbill_create_ip"
          cash_fee: "cash_fee"
          auth_code: "auth_code"
          sub_openid: "sub_openid"
          cash_fee_type: "cash_fee_type"
          goods_tag: "goods_tag"
          settlement_total_fee: 1.2846590061165319429647979632136411964893341064453125
          attach: "attach"
          detail:
            invoice_id: "invoice_id"
            goods_detail:
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            cost_price: "cost_price"
          time_end: "time_end"
          is_subscribe: false
          scene_info:
            store_info:
              address: "address"
              area_code: "area_code"
              name: "name"
              id: "id"
            device_id: "device_id"
            h5_info:
              app_name: "app_name"
              app_url: "app_url"
              bundle_id: "bundle_id"
              package_name: "package_name"
              type: "type"
            payer_client_ip: "payer_client_ip"
        alipay_lite:
          store_id: "store_id"
          extend_params:
            hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
            sys_service_provider_id: "sys_service_provider_id"
            hb_fq_num: "hb_fq_num"
            industry_reflux_info: "industry_reflux_info"
            specified_seller_name: "specified_seller_name"
            card_type: "card_type"
          time_expire: "time_expire"
          settle_info:
            settle_period_time: "settle_period_time"
            settle_detail_infos:
              amount: "amount"
              settle_entity_type: "settle_entity_type"
              trans_in: "trans_in"
              summary_dimension: "summary_dimension"
              settle_entity_id: "settle_entity_id"
              trans_in_type: "trans_in_type"
          operator_id: "operator_id"
          receiver_address_info:
            zip: "zip"
            address: "address"
            mobile: "mobile"
            name: "name"
            division_code: "division_code"
          body: "body"
          buyer_id: "buyer_id"
          product_code: "product_code"
          discountable_amount: 3.616076749251911
          logistics_detail:
            logistics_type: "logistics_type"
          business_params:
            good_taxes: "good_taxes"
            actual_order_time: "actual_order_time"
            campus_card: "campus_card"
            card_type: "card_type"
          timeout_express: "timeout_express"
          trade_no: "trade_no"
          undiscountable_amount: 2.027123023002322
          seller_id: "seller_id"
          terminal_id: "terminal_id"
        alipay_qr:
          discountable_amount: "discountable_amount"
          store_id: "store_id"
          operator_id: "operator_id"
          qr_code: "qr_code"
          qr_code_timeout_express: "qr_code_timeout_express"
          buyer_id: "buyer_id"
          product_code: "product_code"
          goods_detail:
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          - goods_name: "goods_name"
            alipay_goods_id: "alipay_goods_id"
            quantity: 9.301444243932575517419536481611430644989013671875
            price: 7.0614014
            goods_category: "goods_category"
            goods_id: "goods_id"
            body: "body"
            categories_tree: "categories_tree"
            show_url: "show_url"
          qr_link: "qr_link"
          terminal_id: "terminal_id"
        wechatpay_h5:
          wap_name: "wap_name"
          time_expire: "time_expire"
          wap_url: "wap_url"
          goods_tag: "goods_tag"
          settle_info:
            profit_sharing: true
          time_start: "time_start"
          attach: "attach"
          detail:
            invoice_id: "invoice_id"
            goods_detail:
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            - goods_name: "goods_name"
              quantity: "quantity"
              Wechatpay_goods_id: "Wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              unit_price: "unit_price"
            cost_price: "cost_price"
          pay_url: "pay_url"
          pay_sign: "pay_sign"
          prepay_id: "prepay_id"
          scene_info:
            store_info:
              address: "address"
              area_code: "area_code"
              name: "name"
              id: "id"
            device_id: "device_id"
            h5_info:
              app_name: "app_name"
              app_url: "app_url"
              bundle_id: "bundle_id"
              package_name: "package_name"
              type: "type"
            payer_client_ip: "payer_client_ip"
      client_ip: "client_ip"
      currency: "currency"
      refunded: false
      app_id: "app_id"
      expired_ts: "expired_ts"
      amount: 0.8008281904610115
      amount_royalty: 5.962134
      failure_code: "failure_code"
      closed_at: "2000-01-23T04:56:07.000+00:00"
      paid_ts: "paid_ts"
      reversed_at: "2000-01-23T04:56:07.000+00:00"
      ttl: 6
      paid_at: "2000-01-23T04:56:07.000+00:00"
      amount_settle: 5.637376656633329
      live_mode: false
      merchant_trade_id: "merchant_trade_id"
      closed_ts: "closed_ts"
      paid: false
      closed: false
      reversed: false
      transaction_no: "transaction_no"
      object: "Charge"
  v1ChargeExtra:
    type: "object"
    properties:
      alipay_app:
        description: "支付宝 App 支付渠道元数据"
        $ref: "#/definitions/v1ExtraAlipayApp"
      alipay_face:
        description: "支付宝 刷脸 支付渠道元数据"
        $ref: "#/definitions/v1ExtraAlipayFace"
      alipay_lite:
        description: "支付宝 小程序 支付渠道元数据"
        $ref: "#/definitions/v1ExtraAlipayLite"
      alipay_page:
        description: "支付宝 电脑网站 支付渠道元数据"
        $ref: "#/definitions/v1ExtraAlipayPage"
      alipay_qr:
        description: "支付宝 当面付 支付渠道元数据"
        $ref: "#/definitions/v1ExtraAlipayQr"
      alipay_scan:
        description: "支付宝 扫码(被扫) 支付渠道元数据"
        $ref: "#/definitions/v1ExtraAlipayScan"
      alipay_wap:
        description: "支付宝 手机网站 支付渠道元数据"
        $ref: "#/definitions/v1ExtraAlipayWap"
      wechatpay_app:
        description: "微信支付 App 支付渠道元数据"
        $ref: "#/definitions/v1ExtraWechatpayApp"
      wechatpay_h5:
        description: "微信支付 H5 支付渠道元数据"
        $ref: "#/definitions/v1ExtraWechatpayH5"
      wechatpay_jsapi:
        description: "微信支付 公众号 支付渠道元数据"
        $ref: "#/definitions/v1ExtraWechatpayJsapi"
      wechatpay_lite:
        description: "微信支付 小程序 支付渠道元数据"
        $ref: "#/definitions/v1ExtraWechatpayLite"
      wechatpay_native:
        description: "微信支付 扫码(被扫) 支付渠道元数据"
        $ref: "#/definitions/v1ExtraWechatpayNative"
      wechatpay_scan:
        description: "微信支付 扫码(被扫) 支付渠道元数据"
        $ref: "#/definitions/v1ExtraWechatpayScan"
    example:
      alipay_face: {}
      wechatpay_lite:
        time_expire: "time_expire"
        goods_tag: "goods_tag"
        settle_info:
          profit_sharing: true
        time_start: "time_start"
        applet_config:
          timeStamp: "timeStamp"
          package: "package"
          paySign: "paySign"
          appId: "appId"
          signType: "signType"
          nonceStr: "nonceStr"
        attach: "attach"
        detail:
          invoice_id: "invoice_id"
          goods_detail:
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          cost_price: "cost_price"
        payer:
          openid: "openid"
          appid: "appid"
        prepay_id: "prepay_id"
        scene_info:
          store_info:
            address: "address"
            area_code: "area_code"
            name: "name"
            id: "id"
          device_id: "device_id"
          h5_info:
            app_name: "app_name"
            app_url: "app_url"
            bundle_id: "bundle_id"
            package_name: "package_name"
            type: "type"
          payer_client_ip: "payer_client_ip"
      wechatpay_native:
        time_expire: "time_expire"
        goods_tag: "goods_tag"
        settle_info:
          profit_sharing: true
        time_start: "time_start"
        qr_code: "qr_code"
        attach: "attach"
        detail:
          invoice_id: "invoice_id"
          goods_detail:
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          cost_price: "cost_price"
        qr_link: "qr_link"
        scene_info:
          store_info:
            address: "address"
            area_code: "area_code"
            name: "name"
            id: "id"
          device_id: "device_id"
          h5_info:
            app_name: "app_name"
            app_url: "app_url"
            bundle_id: "bundle_id"
            package_name: "package_name"
            type: "type"
          payer_client_ip: "payer_client_ip"
      alipay_scan:
        extend_params:
          hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
          sys_service_provider_id: "sys_service_provider_id"
          hb_fq_num: "hb_fq_num"
          industry_reflux_info: "industry_reflux_info"
          specified_seller_name: "specified_seller_name"
          card_type: "card_type"
        query_options: "query_options"
        discount_amount: 7.457744773683766
        is_async_pay:
          async_type: "async_type"
        operator_id: "operator_id"
        buyer_id: "buyer_id"
        product_code: "product_code"
        invoice_amount: 4.965218492984954
        auth_no: "auth_no"
        fund_bill_list:
          real_amount: "real_amount"
          amount: "amount"
          fund_channel: "fund_channel"
        scene: "scene"
        auth_confirm_mode: "auth_confirm_mode"
        store_name: "store_name"
        receipt_amount: 9.965781217890562
        discount_goods_detail: "discount_goods_detail"
        buyer_pay_amount: 6.84685269835264
        terminal_id: "terminal_id"
        store_id: "store_id"
        gmt_payment: "gmt_payment"
        pay_params: "pay_params"
        buyer_user_id: "buyer_user_id"
        goods_detail:
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        auth_code: "auth_code"
        discountable_amount: 1.1730742509559433
        voucher_detail_list:
          purchase_ant_contribute: 6.438423552598547
          amount: 6.683562403749608
          merchant_contribute: 8.762042012749001
          purchase_buyer_contribute: 3.5571952270680973
          name: "name"
          memo: "memo"
          purchase_merchant_contribute: 6.965117697638846
          other_contribute: 9.018348186070783
          template_id: "template_id"
          id: "id"
          type: "type"
        advance_payment_type: "advance_payment_type"
        total_amount: 9.369310271410669
        buyer_logon_id: "buyer_logon_id"
        request_org_pid: "request_org_pid"
        point_amount: 5.025004791520295
      alipay_app:
        store_id: "store_id"
        credit_biz_order_id: "credit_biz_order_id"
        extend_params:
          hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
          sys_service_provider_id: "sys_service_provider_id"
          hb_fq_num: "hb_fq_num"
          industry_reflux_info: "industry_reflux_info"
          specified_seller_name: "specified_seller_name"
          card_type: "card_type"
        credit_agreement_id: "credit_agreement_id"
        product_code: "product_code"
        goods_detail:
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        enable_pay_channels: "enable_pay_channels"
        ext_user_info:
          cert_type: "cert_type"
          cert_no: "cert_no"
          mobile: "mobile"
          name: "name"
          fix_buyer: "fix_buyer"
          min_age: "min_age"
          need_check_info: "need_check_info"
        credit_pay_mode: "credit_pay_mode"
        merchant_trade_id: "merchant_trade_id"
        disable_pay_channels: "disable_pay_channels"
        goods_type: "goods_type"
        seller_id: "seller_id"
        pay_param: "pay_param"
      alipay_wap:
        store_id: "store_id"
        extend_params:
          hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
          sys_service_provider_id: "sys_service_provider_id"
          hb_fq_num: "hb_fq_num"
          industry_reflux_info: "industry_reflux_info"
          specified_seller_name: "specified_seller_name"
          card_type: "card_type"
        quit_url: "quit_url"
        product_code: "product_code"
        goods_detail:
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        pay_url: "pay_url"
        enable_pay_channels: "enable_pay_channels"
        fund_bill_list:
        - "fund_bill_list"
        - "fund_bill_list"
        voucher_detail_list:
          purchase_ant_contribute: 6.438423552598547
          amount: 6.683562403749608
          merchant_contribute: 8.762042012749001
          purchase_buyer_contribute: 3.5571952270680973
          name: "name"
          memo: "memo"
          purchase_merchant_contribute: 6.965117697638846
          other_contribute: 9.018348186070783
          template_id: "template_id"
          id: "id"
          type: "type"
        merchant_trade_id: "merchant_trade_id"
        business_params: "business_params"
        disable_pay_channels: "disable_pay_channels"
        return_url: "return_url"
        goods_type: "goods_type"
        auth_token: "auth_token"
        promo_params: "promo_params"
        seller_id: "seller_id"
      wechatpay_app:
        time_expire: "time_expire"
        goods_tag: "goods_tag"
        settle_info:
          profit_sharing: true
        time_start: "time_start"
        app_config:
          package: "package"
          appid: "appid"
          sign: "sign"
          partnerid: "partnerid"
          prepayid: "prepayid"
          noncestr: "noncestr"
          timestamp: "timestamp"
        attach: "attach"
        detail:
          invoice_id: "invoice_id"
          goods_detail:
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          cost_price: "cost_price"
        prepay_id: "prepay_id"
        scene_info:
          store_info:
            address: "address"
            area_code: "area_code"
            name: "name"
            id: "id"
          device_id: "device_id"
          h5_info:
            app_name: "app_name"
            app_url: "app_url"
            bundle_id: "bundle_id"
            package_name: "package_name"
            type: "type"
          payer_client_ip: "payer_client_ip"
      wechatpay_jsapi:
        time_expire: "time_expire"
        goods_tag: "goods_tag"
        settle_info:
          profit_sharing: true
        time_start: "time_start"
        jsapi_config:
          timeStamp: "timeStamp"
          package: "package"
          paySign: "paySign"
          appId: "appId"
          signType: "signType"
          nonceStr: "nonceStr"
        attach: "attach"
        detail:
          invoice_id: "invoice_id"
          goods_detail:
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          cost_price: "cost_price"
        payer:
          openid: "openid"
          appid: "appid"
        prepay_id: "prepay_id"
        scene_info:
          store_info:
            address: "address"
            area_code: "area_code"
            name: "name"
            id: "id"
          device_id: "device_id"
          h5_info:
            app_name: "app_name"
            app_url: "app_url"
            bundle_id: "bundle_id"
            package_name: "package_name"
            type: "type"
          payer_client_ip: "payer_client_ip"
      alipay_page:
        store_id: "store_id"
        extend_params:
          hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
          sys_service_provider_id: "sys_service_provider_id"
          hb_fq_num: "hb_fq_num"
          industry_reflux_info: "industry_reflux_info"
          specified_seller_name: "specified_seller_name"
          card_type: "card_type"
        time_expire: 1
        request_from_url: 1.024645700144157789424070870154537260532379150390625
        integration_type: 7.3862819483858839220147274318151175975799560546875
        qr_pay_mode: "qr_pay_mode"
        qrcode_width: 1.231513536777255612975068288506008684635162353515625
        goods_detail:
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        pay_url: "pay_url"
        enable_pay_channels: "enable_pay_channels"
        sub_merchant:
          merchant_id: "merchant_id"
          merchant_type: "merchant_type"
        invoice_info:
          key_info:
            tax_num: "tax_num"
            is_support_invoice: true
            invoice_merchant_name: "invoice_merchant_name"
          details: "details"
        merchant_trade_id: "merchant_trade_id"
        business_params: 4.1456080298839363962315474054776132106781005859375
        disable_pay_channels: "disable_pay_channels"
        goods_type: "goods_type"
        promo_params: "promo_params"
        seller_id: "seller_id"
      wechatpay_scan:
        time_expire: "time_expire"
        bank_type: "bank_type"
        settle_info:
          profit_sharing: true
        time_start: "time_start"
        sub_is_subscribe: false
        fee_type: "fee_type"
        payer:
          openid: "openid"
          appid: "appid"
        spbill_create_ip: "spbill_create_ip"
        cash_fee: "cash_fee"
        auth_code: "auth_code"
        sub_openid: "sub_openid"
        cash_fee_type: "cash_fee_type"
        goods_tag: "goods_tag"
        settlement_total_fee: 1.2846590061165319429647979632136411964893341064453125
        attach: "attach"
        detail:
          invoice_id: "invoice_id"
          goods_detail:
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          cost_price: "cost_price"
        time_end: "time_end"
        is_subscribe: false
        scene_info:
          store_info:
            address: "address"
            area_code: "area_code"
            name: "name"
            id: "id"
          device_id: "device_id"
          h5_info:
            app_name: "app_name"
            app_url: "app_url"
            bundle_id: "bundle_id"
            package_name: "package_name"
            type: "type"
          payer_client_ip: "payer_client_ip"
      alipay_lite:
        store_id: "store_id"
        extend_params:
          hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
          sys_service_provider_id: "sys_service_provider_id"
          hb_fq_num: "hb_fq_num"
          industry_reflux_info: "industry_reflux_info"
          specified_seller_name: "specified_seller_name"
          card_type: "card_type"
        time_expire: "time_expire"
        settle_info:
          settle_period_time: "settle_period_time"
          settle_detail_infos:
            amount: "amount"
            settle_entity_type: "settle_entity_type"
            trans_in: "trans_in"
            summary_dimension: "summary_dimension"
            settle_entity_id: "settle_entity_id"
            trans_in_type: "trans_in_type"
        operator_id: "operator_id"
        receiver_address_info:
          zip: "zip"
          address: "address"
          mobile: "mobile"
          name: "name"
          division_code: "division_code"
        body: "body"
        buyer_id: "buyer_id"
        product_code: "product_code"
        discountable_amount: 3.616076749251911
        logistics_detail:
          logistics_type: "logistics_type"
        business_params:
          good_taxes: "good_taxes"
          actual_order_time: "actual_order_time"
          campus_card: "campus_card"
          card_type: "card_type"
        timeout_express: "timeout_express"
        trade_no: "trade_no"
        undiscountable_amount: 2.027123023002322
        seller_id: "seller_id"
        terminal_id: "terminal_id"
      alipay_qr:
        discountable_amount: "discountable_amount"
        store_id: "store_id"
        operator_id: "operator_id"
        qr_code: "qr_code"
        qr_code_timeout_express: "qr_code_timeout_express"
        buyer_id: "buyer_id"
        product_code: "product_code"
        goods_detail:
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        - goods_name: "goods_name"
          alipay_goods_id: "alipay_goods_id"
          quantity: 9.301444243932575517419536481611430644989013671875
          price: 7.0614014
          goods_category: "goods_category"
          goods_id: "goods_id"
          body: "body"
          categories_tree: "categories_tree"
          show_url: "show_url"
        qr_link: "qr_link"
        terminal_id: "terminal_id"
      wechatpay_h5:
        wap_name: "wap_name"
        time_expire: "time_expire"
        wap_url: "wap_url"
        goods_tag: "goods_tag"
        settle_info:
          profit_sharing: true
        time_start: "time_start"
        attach: "attach"
        detail:
          invoice_id: "invoice_id"
          goods_detail:
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          - goods_name: "goods_name"
            quantity: "quantity"
            Wechatpay_goods_id: "Wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            unit_price: "unit_price"
          cost_price: "cost_price"
        pay_url: "pay_url"
        pay_sign: "pay_sign"
        prepay_id: "prepay_id"
        scene_info:
          store_info:
            address: "address"
            area_code: "area_code"
            name: "name"
            id: "id"
          device_id: "device_id"
          h5_info:
            app_name: "app_name"
            app_url: "app_url"
            bundle_id: "bundle_id"
            package_name: "package_name"
            type: "type"
          payer_client_ip: "payer_client_ip"
  v1ChargeListResponse:
    type: "object"
    properties:
      data:
        type: "array"
        description: "包含一个由请求参数分页后的返回对象实体"
        items:
          $ref: "#/definitions/v1Charge"
      has_more:
        type: "boolean"
        description: "表明获取列表之后是否还有更多的元素实体。如果值为 false，表明当前页是最后一页"
        default: false
      object:
        type: "string"
        description: "返回对象的类型，此值为 ChargeList"
    title: "返回 Charge 对象列表"
    description: "返回一个已存在的 charge 对象列表或者一个错误"
    example:
      data:
      - metadata:
          key: "metadata"
        time_expire: "2000-01-23T04:56:07.000+00:00"
        subject: "subject"
        amount_fee: 6.0274563
        channel: {}
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        body: "body"
        failure_msg: "failure_msg"
        refunds:
        - amount: 7.143538
          failure_code: "failure_code"
          metadata:
            key: "metadata"
          succeed_ts: 7.05877035158235610623478351044468581676483154296875
          created: 0.885137473901165261480628032586537301540374755859375
          refund_no: "refund_no"
          created_at: "2000-01-23T04:56:07.000+00:00"
          description: "description"
          success_at: "2000-01-23T04:56:07.000+00:00"
          is_success: false
          failure_msg: "failure_msg"
          refund_id: "refund_id"
          charge_id: "charge_id"
          account:
            alipay:
              refund_royalty_parameters:
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
            wechatpay:
              goods_detail:
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              account:
                from:
                - null
                - null
          transaction_no: "transaction_no"
          charge_merchant_trade_id: "charge_merchant_trade_id"
          status: "status"
        - amount: 7.143538
          failure_code: "failure_code"
          metadata:
            key: "metadata"
          succeed_ts: 7.05877035158235610623478351044468581676483154296875
          created: 0.885137473901165261480628032586537301540374755859375
          refund_no: "refund_no"
          created_at: "2000-01-23T04:56:07.000+00:00"
          description: "description"
          success_at: "2000-01-23T04:56:07.000+00:00"
          is_success: false
          failure_msg: "failure_msg"
          refund_id: "refund_id"
          charge_id: "charge_id"
          account:
            alipay:
              refund_royalty_parameters:
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
            wechatpay:
              goods_detail:
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              account:
                from:
                - null
                - null
          transaction_no: "transaction_no"
          charge_merchant_trade_id: "charge_merchant_trade_id"
          status: "status"
        credential:
          '@type': "@type"
        amount_refund: 1.4658129
        charge_id: "charge_id"
        extra:
          alipay_face: {}
          wechatpay_lite:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            applet_config:
              timeStamp: "timeStamp"
              package: "package"
              paySign: "paySign"
              appId: "appId"
              signType: "signType"
              nonceStr: "nonceStr"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            payer:
              openid: "openid"
              appid: "appid"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          wechatpay_native:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            qr_code: "qr_code"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            qr_link: "qr_link"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_scan:
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            query_options: "query_options"
            discount_amount: 7.457744773683766
            is_async_pay:
              async_type: "async_type"
            operator_id: "operator_id"
            buyer_id: "buyer_id"
            product_code: "product_code"
            invoice_amount: 4.965218492984954
            auth_no: "auth_no"
            fund_bill_list:
              real_amount: "real_amount"
              amount: "amount"
              fund_channel: "fund_channel"
            scene: "scene"
            auth_confirm_mode: "auth_confirm_mode"
            store_name: "store_name"
            receipt_amount: 9.965781217890562
            discount_goods_detail: "discount_goods_detail"
            buyer_pay_amount: 6.84685269835264
            terminal_id: "terminal_id"
            store_id: "store_id"
            gmt_payment: "gmt_payment"
            pay_params: "pay_params"
            buyer_user_id: "buyer_user_id"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            auth_code: "auth_code"
            discountable_amount: 1.1730742509559433
            voucher_detail_list:
              purchase_ant_contribute: 6.438423552598547
              amount: 6.683562403749608
              merchant_contribute: 8.762042012749001
              purchase_buyer_contribute: 3.5571952270680973
              name: "name"
              memo: "memo"
              purchase_merchant_contribute: 6.965117697638846
              other_contribute: 9.018348186070783
              template_id: "template_id"
              id: "id"
              type: "type"
            advance_payment_type: "advance_payment_type"
            total_amount: 9.369310271410669
            buyer_logon_id: "buyer_logon_id"
            request_org_pid: "request_org_pid"
            point_amount: 5.025004791520295
          alipay_app:
            store_id: "store_id"
            credit_biz_order_id: "credit_biz_order_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            credit_agreement_id: "credit_agreement_id"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            enable_pay_channels: "enable_pay_channels"
            ext_user_info:
              cert_type: "cert_type"
              cert_no: "cert_no"
              mobile: "mobile"
              name: "name"
              fix_buyer: "fix_buyer"
              min_age: "min_age"
              need_check_info: "need_check_info"
            credit_pay_mode: "credit_pay_mode"
            merchant_trade_id: "merchant_trade_id"
            disable_pay_channels: "disable_pay_channels"
            goods_type: "goods_type"
            seller_id: "seller_id"
            pay_param: "pay_param"
          alipay_wap:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            quit_url: "quit_url"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            pay_url: "pay_url"
            enable_pay_channels: "enable_pay_channels"
            fund_bill_list:
            - "fund_bill_list"
            - "fund_bill_list"
            voucher_detail_list:
              purchase_ant_contribute: 6.438423552598547
              amount: 6.683562403749608
              merchant_contribute: 8.762042012749001
              purchase_buyer_contribute: 3.5571952270680973
              name: "name"
              memo: "memo"
              purchase_merchant_contribute: 6.965117697638846
              other_contribute: 9.018348186070783
              template_id: "template_id"
              id: "id"
              type: "type"
            merchant_trade_id: "merchant_trade_id"
            business_params: "business_params"
            disable_pay_channels: "disable_pay_channels"
            return_url: "return_url"
            goods_type: "goods_type"
            auth_token: "auth_token"
            promo_params: "promo_params"
            seller_id: "seller_id"
          wechatpay_app:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            app_config:
              package: "package"
              appid: "appid"
              sign: "sign"
              partnerid: "partnerid"
              prepayid: "prepayid"
              noncestr: "noncestr"
              timestamp: "timestamp"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          wechatpay_jsapi:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            jsapi_config:
              timeStamp: "timeStamp"
              package: "package"
              paySign: "paySign"
              appId: "appId"
              signType: "signType"
              nonceStr: "nonceStr"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            payer:
              openid: "openid"
              appid: "appid"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_page:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            time_expire: 1
            request_from_url: 1.024645700144157789424070870154537260532379150390625
            integration_type: 7.3862819483858839220147274318151175975799560546875
            qr_pay_mode: "qr_pay_mode"
            qrcode_width: 1.231513536777255612975068288506008684635162353515625
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            pay_url: "pay_url"
            enable_pay_channels: "enable_pay_channels"
            sub_merchant:
              merchant_id: "merchant_id"
              merchant_type: "merchant_type"
            invoice_info:
              key_info:
                tax_num: "tax_num"
                is_support_invoice: true
                invoice_merchant_name: "invoice_merchant_name"
              details: "details"
            merchant_trade_id: "merchant_trade_id"
            business_params: 4.1456080298839363962315474054776132106781005859375
            disable_pay_channels: "disable_pay_channels"
            goods_type: "goods_type"
            promo_params: "promo_params"
            seller_id: "seller_id"
          wechatpay_scan:
            time_expire: "time_expire"
            bank_type: "bank_type"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            sub_is_subscribe: false
            fee_type: "fee_type"
            payer:
              openid: "openid"
              appid: "appid"
            spbill_create_ip: "spbill_create_ip"
            cash_fee: "cash_fee"
            auth_code: "auth_code"
            sub_openid: "sub_openid"
            cash_fee_type: "cash_fee_type"
            goods_tag: "goods_tag"
            settlement_total_fee: 1.2846590061165319429647979632136411964893341064453125
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            time_end: "time_end"
            is_subscribe: false
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_lite:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            time_expire: "time_expire"
            settle_info:
              settle_period_time: "settle_period_time"
              settle_detail_infos:
                amount: "amount"
                settle_entity_type: "settle_entity_type"
                trans_in: "trans_in"
                summary_dimension: "summary_dimension"
                settle_entity_id: "settle_entity_id"
                trans_in_type: "trans_in_type"
            operator_id: "operator_id"
            receiver_address_info:
              zip: "zip"
              address: "address"
              mobile: "mobile"
              name: "name"
              division_code: "division_code"
            body: "body"
            buyer_id: "buyer_id"
            product_code: "product_code"
            discountable_amount: 3.616076749251911
            logistics_detail:
              logistics_type: "logistics_type"
            business_params:
              good_taxes: "good_taxes"
              actual_order_time: "actual_order_time"
              campus_card: "campus_card"
              card_type: "card_type"
            timeout_express: "timeout_express"
            trade_no: "trade_no"
            undiscountable_amount: 2.027123023002322
            seller_id: "seller_id"
            terminal_id: "terminal_id"
          alipay_qr:
            discountable_amount: "discountable_amount"
            store_id: "store_id"
            operator_id: "operator_id"
            qr_code: "qr_code"
            qr_code_timeout_express: "qr_code_timeout_express"
            buyer_id: "buyer_id"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            qr_link: "qr_link"
            terminal_id: "terminal_id"
          wechatpay_h5:
            wap_name: "wap_name"
            time_expire: "time_expire"
            wap_url: "wap_url"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            pay_url: "pay_url"
            pay_sign: "pay_sign"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
        client_ip: "client_ip"
        currency: "currency"
        refunded: false
        app_id: "app_id"
        expired_ts: "expired_ts"
        amount: 0.8008281904610115
        amount_royalty: 5.962134
        failure_code: "failure_code"
        closed_at: "2000-01-23T04:56:07.000+00:00"
        paid_ts: "paid_ts"
        reversed_at: "2000-01-23T04:56:07.000+00:00"
        ttl: 6
        paid_at: "2000-01-23T04:56:07.000+00:00"
        amount_settle: 5.637376656633329
        live_mode: false
        merchant_trade_id: "merchant_trade_id"
        closed_ts: "closed_ts"
        paid: false
        closed: false
        reversed: false
        transaction_no: "transaction_no"
        object: "Charge"
      - metadata:
          key: "metadata"
        time_expire: "2000-01-23T04:56:07.000+00:00"
        subject: "subject"
        amount_fee: 6.0274563
        channel: {}
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        body: "body"
        failure_msg: "failure_msg"
        refunds:
        - amount: 7.143538
          failure_code: "failure_code"
          metadata:
            key: "metadata"
          succeed_ts: 7.05877035158235610623478351044468581676483154296875
          created: 0.885137473901165261480628032586537301540374755859375
          refund_no: "refund_no"
          created_at: "2000-01-23T04:56:07.000+00:00"
          description: "description"
          success_at: "2000-01-23T04:56:07.000+00:00"
          is_success: false
          failure_msg: "failure_msg"
          refund_id: "refund_id"
          charge_id: "charge_id"
          account:
            alipay:
              refund_royalty_parameters:
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
            wechatpay:
              goods_detail:
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              account:
                from:
                - null
                - null
          transaction_no: "transaction_no"
          charge_merchant_trade_id: "charge_merchant_trade_id"
          status: "status"
        - amount: 7.143538
          failure_code: "failure_code"
          metadata:
            key: "metadata"
          succeed_ts: 7.05877035158235610623478351044468581676483154296875
          created: 0.885137473901165261480628032586537301540374755859375
          refund_no: "refund_no"
          created_at: "2000-01-23T04:56:07.000+00:00"
          description: "description"
          success_at: "2000-01-23T04:56:07.000+00:00"
          is_success: false
          failure_msg: "failure_msg"
          refund_id: "refund_id"
          charge_id: "charge_id"
          account:
            alipay:
              refund_royalty_parameters:
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
            wechatpay:
              goods_detail:
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              account:
                from:
                - null
                - null
          transaction_no: "transaction_no"
          charge_merchant_trade_id: "charge_merchant_trade_id"
          status: "status"
        credential:
          '@type': "@type"
        amount_refund: 1.4658129
        charge_id: "charge_id"
        extra:
          alipay_face: {}
          wechatpay_lite:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            applet_config:
              timeStamp: "timeStamp"
              package: "package"
              paySign: "paySign"
              appId: "appId"
              signType: "signType"
              nonceStr: "nonceStr"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            payer:
              openid: "openid"
              appid: "appid"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          wechatpay_native:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            qr_code: "qr_code"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            qr_link: "qr_link"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_scan:
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            query_options: "query_options"
            discount_amount: 7.457744773683766
            is_async_pay:
              async_type: "async_type"
            operator_id: "operator_id"
            buyer_id: "buyer_id"
            product_code: "product_code"
            invoice_amount: 4.965218492984954
            auth_no: "auth_no"
            fund_bill_list:
              real_amount: "real_amount"
              amount: "amount"
              fund_channel: "fund_channel"
            scene: "scene"
            auth_confirm_mode: "auth_confirm_mode"
            store_name: "store_name"
            receipt_amount: 9.965781217890562
            discount_goods_detail: "discount_goods_detail"
            buyer_pay_amount: 6.84685269835264
            terminal_id: "terminal_id"
            store_id: "store_id"
            gmt_payment: "gmt_payment"
            pay_params: "pay_params"
            buyer_user_id: "buyer_user_id"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            auth_code: "auth_code"
            discountable_amount: 1.1730742509559433
            voucher_detail_list:
              purchase_ant_contribute: 6.438423552598547
              amount: 6.683562403749608
              merchant_contribute: 8.762042012749001
              purchase_buyer_contribute: 3.5571952270680973
              name: "name"
              memo: "memo"
              purchase_merchant_contribute: 6.965117697638846
              other_contribute: 9.018348186070783
              template_id: "template_id"
              id: "id"
              type: "type"
            advance_payment_type: "advance_payment_type"
            total_amount: 9.369310271410669
            buyer_logon_id: "buyer_logon_id"
            request_org_pid: "request_org_pid"
            point_amount: 5.025004791520295
          alipay_app:
            store_id: "store_id"
            credit_biz_order_id: "credit_biz_order_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            credit_agreement_id: "credit_agreement_id"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            enable_pay_channels: "enable_pay_channels"
            ext_user_info:
              cert_type: "cert_type"
              cert_no: "cert_no"
              mobile: "mobile"
              name: "name"
              fix_buyer: "fix_buyer"
              min_age: "min_age"
              need_check_info: "need_check_info"
            credit_pay_mode: "credit_pay_mode"
            merchant_trade_id: "merchant_trade_id"
            disable_pay_channels: "disable_pay_channels"
            goods_type: "goods_type"
            seller_id: "seller_id"
            pay_param: "pay_param"
          alipay_wap:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            quit_url: "quit_url"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            pay_url: "pay_url"
            enable_pay_channels: "enable_pay_channels"
            fund_bill_list:
            - "fund_bill_list"
            - "fund_bill_list"
            voucher_detail_list:
              purchase_ant_contribute: 6.438423552598547
              amount: 6.683562403749608
              merchant_contribute: 8.762042012749001
              purchase_buyer_contribute: 3.5571952270680973
              name: "name"
              memo: "memo"
              purchase_merchant_contribute: 6.965117697638846
              other_contribute: 9.018348186070783
              template_id: "template_id"
              id: "id"
              type: "type"
            merchant_trade_id: "merchant_trade_id"
            business_params: "business_params"
            disable_pay_channels: "disable_pay_channels"
            return_url: "return_url"
            goods_type: "goods_type"
            auth_token: "auth_token"
            promo_params: "promo_params"
            seller_id: "seller_id"
          wechatpay_app:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            app_config:
              package: "package"
              appid: "appid"
              sign: "sign"
              partnerid: "partnerid"
              prepayid: "prepayid"
              noncestr: "noncestr"
              timestamp: "timestamp"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          wechatpay_jsapi:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            jsapi_config:
              timeStamp: "timeStamp"
              package: "package"
              paySign: "paySign"
              appId: "appId"
              signType: "signType"
              nonceStr: "nonceStr"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            payer:
              openid: "openid"
              appid: "appid"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_page:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            time_expire: 1
            request_from_url: 1.024645700144157789424070870154537260532379150390625
            integration_type: 7.3862819483858839220147274318151175975799560546875
            qr_pay_mode: "qr_pay_mode"
            qrcode_width: 1.231513536777255612975068288506008684635162353515625
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            pay_url: "pay_url"
            enable_pay_channels: "enable_pay_channels"
            sub_merchant:
              merchant_id: "merchant_id"
              merchant_type: "merchant_type"
            invoice_info:
              key_info:
                tax_num: "tax_num"
                is_support_invoice: true
                invoice_merchant_name: "invoice_merchant_name"
              details: "details"
            merchant_trade_id: "merchant_trade_id"
            business_params: 4.1456080298839363962315474054776132106781005859375
            disable_pay_channels: "disable_pay_channels"
            goods_type: "goods_type"
            promo_params: "promo_params"
            seller_id: "seller_id"
          wechatpay_scan:
            time_expire: "time_expire"
            bank_type: "bank_type"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            sub_is_subscribe: false
            fee_type: "fee_type"
            payer:
              openid: "openid"
              appid: "appid"
            spbill_create_ip: "spbill_create_ip"
            cash_fee: "cash_fee"
            auth_code: "auth_code"
            sub_openid: "sub_openid"
            cash_fee_type: "cash_fee_type"
            goods_tag: "goods_tag"
            settlement_total_fee: 1.2846590061165319429647979632136411964893341064453125
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            time_end: "time_end"
            is_subscribe: false
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_lite:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            time_expire: "time_expire"
            settle_info:
              settle_period_time: "settle_period_time"
              settle_detail_infos:
                amount: "amount"
                settle_entity_type: "settle_entity_type"
                trans_in: "trans_in"
                summary_dimension: "summary_dimension"
                settle_entity_id: "settle_entity_id"
                trans_in_type: "trans_in_type"
            operator_id: "operator_id"
            receiver_address_info:
              zip: "zip"
              address: "address"
              mobile: "mobile"
              name: "name"
              division_code: "division_code"
            body: "body"
            buyer_id: "buyer_id"
            product_code: "product_code"
            discountable_amount: 3.616076749251911
            logistics_detail:
              logistics_type: "logistics_type"
            business_params:
              good_taxes: "good_taxes"
              actual_order_time: "actual_order_time"
              campus_card: "campus_card"
              card_type: "card_type"
            timeout_express: "timeout_express"
            trade_no: "trade_no"
            undiscountable_amount: 2.027123023002322
            seller_id: "seller_id"
            terminal_id: "terminal_id"
          alipay_qr:
            discountable_amount: "discountable_amount"
            store_id: "store_id"
            operator_id: "operator_id"
            qr_code: "qr_code"
            qr_code_timeout_express: "qr_code_timeout_express"
            buyer_id: "buyer_id"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            qr_link: "qr_link"
            terminal_id: "terminal_id"
          wechatpay_h5:
            wap_name: "wap_name"
            time_expire: "time_expire"
            wap_url: "wap_url"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            pay_url: "pay_url"
            pay_sign: "pay_sign"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
        client_ip: "client_ip"
        currency: "currency"
        refunded: false
        app_id: "app_id"
        expired_ts: "expired_ts"
        amount: 0.8008281904610115
        amount_royalty: 5.962134
        failure_code: "failure_code"
        closed_at: "2000-01-23T04:56:07.000+00:00"
        paid_ts: "paid_ts"
        reversed_at: "2000-01-23T04:56:07.000+00:00"
        ttl: 6
        paid_at: "2000-01-23T04:56:07.000+00:00"
        amount_settle: 5.637376656633329
        live_mode: false
        merchant_trade_id: "merchant_trade_id"
        closed_ts: "closed_ts"
        paid: false
        closed: false
        reversed: false
        transaction_no: "transaction_no"
        object: "Charge"
      has_more: false
      object: "object"
  v1ChargeResponse:
    type: "object"
    properties:
      data:
        description: "Charge 对象"
        $ref: "#/definitions/v1Charge"
      object:
        type: "string"
        format: "string"
        description: "支付凭据 charge 对象"
        default: "Charge"
    title: "创建 Charge 对象接口返回一个 Charge 对象"
    description: "返回一个支付凭据 charge 对象。"
    example:
      data:
        metadata:
          key: "metadata"
        time_expire: "2000-01-23T04:56:07.000+00:00"
        subject: "subject"
        amount_fee: 6.0274563
        channel: {}
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        body: "body"
        failure_msg: "failure_msg"
        refunds:
        - amount: 7.143538
          failure_code: "failure_code"
          metadata:
            key: "metadata"
          succeed_ts: 7.05877035158235610623478351044468581676483154296875
          created: 0.885137473901165261480628032586537301540374755859375
          refund_no: "refund_no"
          created_at: "2000-01-23T04:56:07.000+00:00"
          description: "description"
          success_at: "2000-01-23T04:56:07.000+00:00"
          is_success: false
          failure_msg: "failure_msg"
          refund_id: "refund_id"
          charge_id: "charge_id"
          account:
            alipay:
              refund_royalty_parameters:
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
            wechatpay:
              goods_detail:
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              account:
                from:
                - null
                - null
          transaction_no: "transaction_no"
          charge_merchant_trade_id: "charge_merchant_trade_id"
          status: "status"
        - amount: 7.143538
          failure_code: "failure_code"
          metadata:
            key: "metadata"
          succeed_ts: 7.05877035158235610623478351044468581676483154296875
          created: 0.885137473901165261480628032586537301540374755859375
          refund_no: "refund_no"
          created_at: "2000-01-23T04:56:07.000+00:00"
          description: "description"
          success_at: "2000-01-23T04:56:07.000+00:00"
          is_success: false
          failure_msg: "failure_msg"
          refund_id: "refund_id"
          charge_id: "charge_id"
          account:
            alipay:
              refund_royalty_parameters:
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
              - refund_detail_item_list:
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                - real_amount: 6.878052
                  amount: 6.778325
                  fund_type: "fund_type"
                  fund_channel: "fund_channel"
                amount: 2.8841622
                trans_in: "trans_in"
                royalty_type: "royalty_type"
                buyer_user_id: "buyer_user_id"
                trans_out: "trans_out"
                trans_out_type: "trans_out_type"
                trans_in_type: "trans_in_type"
                refund_fee: 5.9448957
                send_back_fee: "send_back_fee"
                store_name: "store_name"
                buyer_logon_id: "buyer_logon_id"
                royalty_scene: "royalty_scene"
                fund_change: "fund_change"
                trans_in_name: "trans_in_name"
                desc: "desc"
            wechatpay:
              goods_detail:
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              - goods_name: "goods_name"
                wechatpay_goods_id: "wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                refund_amount: 6
                unit_price: 3
                refund_quantity: 3
              account:
                from:
                - null
                - null
          transaction_no: "transaction_no"
          charge_merchant_trade_id: "charge_merchant_trade_id"
          status: "status"
        credential:
          '@type': "@type"
        amount_refund: 1.4658129
        charge_id: "charge_id"
        extra:
          alipay_face: {}
          wechatpay_lite:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            applet_config:
              timeStamp: "timeStamp"
              package: "package"
              paySign: "paySign"
              appId: "appId"
              signType: "signType"
              nonceStr: "nonceStr"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            payer:
              openid: "openid"
              appid: "appid"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          wechatpay_native:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            qr_code: "qr_code"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            qr_link: "qr_link"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_scan:
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            query_options: "query_options"
            discount_amount: 7.457744773683766
            is_async_pay:
              async_type: "async_type"
            operator_id: "operator_id"
            buyer_id: "buyer_id"
            product_code: "product_code"
            invoice_amount: 4.965218492984954
            auth_no: "auth_no"
            fund_bill_list:
              real_amount: "real_amount"
              amount: "amount"
              fund_channel: "fund_channel"
            scene: "scene"
            auth_confirm_mode: "auth_confirm_mode"
            store_name: "store_name"
            receipt_amount: 9.965781217890562
            discount_goods_detail: "discount_goods_detail"
            buyer_pay_amount: 6.84685269835264
            terminal_id: "terminal_id"
            store_id: "store_id"
            gmt_payment: "gmt_payment"
            pay_params: "pay_params"
            buyer_user_id: "buyer_user_id"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            auth_code: "auth_code"
            discountable_amount: 1.1730742509559433
            voucher_detail_list:
              purchase_ant_contribute: 6.438423552598547
              amount: 6.683562403749608
              merchant_contribute: 8.762042012749001
              purchase_buyer_contribute: 3.5571952270680973
              name: "name"
              memo: "memo"
              purchase_merchant_contribute: 6.965117697638846
              other_contribute: 9.018348186070783
              template_id: "template_id"
              id: "id"
              type: "type"
            advance_payment_type: "advance_payment_type"
            total_amount: 9.369310271410669
            buyer_logon_id: "buyer_logon_id"
            request_org_pid: "request_org_pid"
            point_amount: 5.025004791520295
          alipay_app:
            store_id: "store_id"
            credit_biz_order_id: "credit_biz_order_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            credit_agreement_id: "credit_agreement_id"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            enable_pay_channels: "enable_pay_channels"
            ext_user_info:
              cert_type: "cert_type"
              cert_no: "cert_no"
              mobile: "mobile"
              name: "name"
              fix_buyer: "fix_buyer"
              min_age: "min_age"
              need_check_info: "need_check_info"
            credit_pay_mode: "credit_pay_mode"
            merchant_trade_id: "merchant_trade_id"
            disable_pay_channels: "disable_pay_channels"
            goods_type: "goods_type"
            seller_id: "seller_id"
            pay_param: "pay_param"
          alipay_wap:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            quit_url: "quit_url"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            pay_url: "pay_url"
            enable_pay_channels: "enable_pay_channels"
            fund_bill_list:
            - "fund_bill_list"
            - "fund_bill_list"
            voucher_detail_list:
              purchase_ant_contribute: 6.438423552598547
              amount: 6.683562403749608
              merchant_contribute: 8.762042012749001
              purchase_buyer_contribute: 3.5571952270680973
              name: "name"
              memo: "memo"
              purchase_merchant_contribute: 6.965117697638846
              other_contribute: 9.018348186070783
              template_id: "template_id"
              id: "id"
              type: "type"
            merchant_trade_id: "merchant_trade_id"
            business_params: "business_params"
            disable_pay_channels: "disable_pay_channels"
            return_url: "return_url"
            goods_type: "goods_type"
            auth_token: "auth_token"
            promo_params: "promo_params"
            seller_id: "seller_id"
          wechatpay_app:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            app_config:
              package: "package"
              appid: "appid"
              sign: "sign"
              partnerid: "partnerid"
              prepayid: "prepayid"
              noncestr: "noncestr"
              timestamp: "timestamp"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          wechatpay_jsapi:
            time_expire: "time_expire"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            jsapi_config:
              timeStamp: "timeStamp"
              package: "package"
              paySign: "paySign"
              appId: "appId"
              signType: "signType"
              nonceStr: "nonceStr"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            payer:
              openid: "openid"
              appid: "appid"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_page:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            time_expire: 1
            request_from_url: 1.024645700144157789424070870154537260532379150390625
            integration_type: 7.3862819483858839220147274318151175975799560546875
            qr_pay_mode: "qr_pay_mode"
            qrcode_width: 1.231513536777255612975068288506008684635162353515625
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            pay_url: "pay_url"
            enable_pay_channels: "enable_pay_channels"
            sub_merchant:
              merchant_id: "merchant_id"
              merchant_type: "merchant_type"
            invoice_info:
              key_info:
                tax_num: "tax_num"
                is_support_invoice: true
                invoice_merchant_name: "invoice_merchant_name"
              details: "details"
            merchant_trade_id: "merchant_trade_id"
            business_params: 4.1456080298839363962315474054776132106781005859375
            disable_pay_channels: "disable_pay_channels"
            goods_type: "goods_type"
            promo_params: "promo_params"
            seller_id: "seller_id"
          wechatpay_scan:
            time_expire: "time_expire"
            bank_type: "bank_type"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            sub_is_subscribe: false
            fee_type: "fee_type"
            payer:
              openid: "openid"
              appid: "appid"
            spbill_create_ip: "spbill_create_ip"
            cash_fee: "cash_fee"
            auth_code: "auth_code"
            sub_openid: "sub_openid"
            cash_fee_type: "cash_fee_type"
            goods_tag: "goods_tag"
            settlement_total_fee: 1.2846590061165319429647979632136411964893341064453125
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            time_end: "time_end"
            is_subscribe: false
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
          alipay_lite:
            store_id: "store_id"
            extend_params:
              hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
              sys_service_provider_id: "sys_service_provider_id"
              hb_fq_num: "hb_fq_num"
              industry_reflux_info: "industry_reflux_info"
              specified_seller_name: "specified_seller_name"
              card_type: "card_type"
            time_expire: "time_expire"
            settle_info:
              settle_period_time: "settle_period_time"
              settle_detail_infos:
                amount: "amount"
                settle_entity_type: "settle_entity_type"
                trans_in: "trans_in"
                summary_dimension: "summary_dimension"
                settle_entity_id: "settle_entity_id"
                trans_in_type: "trans_in_type"
            operator_id: "operator_id"
            receiver_address_info:
              zip: "zip"
              address: "address"
              mobile: "mobile"
              name: "name"
              division_code: "division_code"
            body: "body"
            buyer_id: "buyer_id"
            product_code: "product_code"
            discountable_amount: 3.616076749251911
            logistics_detail:
              logistics_type: "logistics_type"
            business_params:
              good_taxes: "good_taxes"
              actual_order_time: "actual_order_time"
              campus_card: "campus_card"
              card_type: "card_type"
            timeout_express: "timeout_express"
            trade_no: "trade_no"
            undiscountable_amount: 2.027123023002322
            seller_id: "seller_id"
            terminal_id: "terminal_id"
          alipay_qr:
            discountable_amount: "discountable_amount"
            store_id: "store_id"
            operator_id: "operator_id"
            qr_code: "qr_code"
            qr_code_timeout_express: "qr_code_timeout_express"
            buyer_id: "buyer_id"
            product_code: "product_code"
            goods_detail:
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            - goods_name: "goods_name"
              alipay_goods_id: "alipay_goods_id"
              quantity: 9.301444243932575517419536481611430644989013671875
              price: 7.0614014
              goods_category: "goods_category"
              goods_id: "goods_id"
              body: "body"
              categories_tree: "categories_tree"
              show_url: "show_url"
            qr_link: "qr_link"
            terminal_id: "terminal_id"
          wechatpay_h5:
            wap_name: "wap_name"
            time_expire: "time_expire"
            wap_url: "wap_url"
            goods_tag: "goods_tag"
            settle_info:
              profit_sharing: true
            time_start: "time_start"
            attach: "attach"
            detail:
              invoice_id: "invoice_id"
              goods_detail:
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              - goods_name: "goods_name"
                quantity: "quantity"
                Wechatpay_goods_id: "Wechatpay_goods_id"
                merchant_goods_id: "merchant_goods_id"
                unit_price: "unit_price"
              cost_price: "cost_price"
            pay_url: "pay_url"
            pay_sign: "pay_sign"
            prepay_id: "prepay_id"
            scene_info:
              store_info:
                address: "address"
                area_code: "area_code"
                name: "name"
                id: "id"
              device_id: "device_id"
              h5_info:
                app_name: "app_name"
                app_url: "app_url"
                bundle_id: "bundle_id"
                package_name: "package_name"
                type: "type"
              payer_client_ip: "payer_client_ip"
        client_ip: "client_ip"
        currency: "currency"
        refunded: false
        app_id: "app_id"
        expired_ts: "expired_ts"
        amount: 0.8008281904610115
        amount_royalty: 5.962134
        failure_code: "failure_code"
        closed_at: "2000-01-23T04:56:07.000+00:00"
        paid_ts: "paid_ts"
        reversed_at: "2000-01-23T04:56:07.000+00:00"
        ttl: 6
        paid_at: "2000-01-23T04:56:07.000+00:00"
        amount_settle: 5.637376656633329
        live_mode: false
        merchant_trade_id: "merchant_trade_id"
        closed_ts: "closed_ts"
        paid: false
        closed: false
        reversed: false
        transaction_no: "transaction_no"
        object: "Charge"
      object: "Charge"
  v1ChargeRoutingResponse:
    type: "object"
  v1CreateChargeRequest:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
        description: "[REQUIRED] 订单金额，单位元， 如 0.01"
      app_id:
        type: "string"
        format: "string"
        description: "[REQUIRED] 应用 id"
      body:
        type: "string"
        format: "string"
        description: "[REQUIRED] 服务明细"
      callback_url:
        type: "string"
        format: "string"
        description: "[OPTIONAL] 回调地址，如不传则使用 APP 设置中的回调地址。若都为空，则无法跳回原页面"
      channel:
        description: "[REQUIRED] 渠道名称"
        $ref: "#/definitions/tradev1Channel"
      client_ip:
        type: "string"
        format: "string"
        description: "[REQUIRED] 客户端机器 IP"
      currency:
        type: "string"
        format: "string"
        description: "货币单位。国内收单机构仅支持 CNY"
        default: "CNY"
      description:
        type: "string"
        format: "string"
        description: "[OPTIONAL] 交易描述"
      extra:
        description: "[OPTIONAL] 各支付渠道元数据"
        $ref: "#/definitions/v1CreateChargeRequestExtra"
      merchant_trade_id:
        type: "string"
        format: "string"
        description: "[REQUIRED] 客户系统的交易单号（订单号），必须在应用下唯一。长度不超过30个字符"
      metadata:
        type: "object"
        description: "[OPTIONAL] 订单元数据，原样返回"
        additionalProperties:
          type: "string"
      notification_area:
        type: "string"
        format: "string"
        description: "[OPTIONAL] 接受通知服务器所在区域，为确保消息能够送达，请选择服务器所在国家的国家码。如不填默认为 CN"
        default: "CN"
      notify_url:
        type: "string"
        format: "string"
        description: "[OPTIONAL] 通知地址，如不传则使用 APP 设置中的通知地址。若都为空，则不发送通知"
      subject:
        type: "string"
        format: "string"
        description: "[REQUIRED] 物品或服务名称（交易标题）"
      ttl:
        type: "integer"
        format: "int32"
        description: "[OPTIONAL] 订单超时时间，单位秒"
    title: "创建 Charge 对象"
    description: "你可以创建一个 charge 对象向用户收款。charge 是一个支付凭据对象，所有和支付相关的要素信息都存储在这个对象中，你的\
      服务端可以通过发起支付请求来创建一个新的 charge 对象，也可以随时查询一个或者多个 charge 对象的状态。每个 charge 对象都拥有一个标\
      识 id，该 id 在系统内唯一。"
  v1CreateChargeRequestExtra:
    type: "object"
    properties:
      alipay_app:
        description: "支付宝 APP 支付元数据"
        $ref: "#/definitions/v1ExtraAlipayApp"
      alipay_face:
        description: "支付宝刷脸支付元数据"
        $ref: "#/definitions/v1ExtraAlipayFace"
      alipay_lite:
        description: "支付宝小程序支付元数据"
        $ref: "#/definitions/v1ExtraAlipayLite"
      alipay_page:
        description: "支付宝电脑网站支付元数据"
        $ref: "#/definitions/v1ExtraAlipayPage"
      alipay_qr:
        description: "支付宝二维码支付元数据"
        $ref: "#/definitions/v1ExtraAlipayQr"
      alipay_scan:
        description: "支付宝扫码（被扫）支付元数据"
        $ref: "#/definitions/v1ExtraAlipayScan"
      alipay_wap:
        description: "支付宝手机网站支付元数据"
        $ref: "#/definitions/v1ExtraAlipayWap"
      wechatpay_app:
        description: "微信支付 APP 支付元数据"
        $ref: "#/definitions/v1ExtraWechatpayApp"
      wechatpay_h5:
        description: "微信支付 H5 支付元数据"
        $ref: "#/definitions/v1ExtraWechatpayH5"
      wechatpay_jsapi:
        description: "微信支付 JSAPI 支付元数据"
        $ref: "#/definitions/v1ExtraWechatpayJsapi"
      wechatpay_lite:
        description: "微信支付小程序支付元数据"
        $ref: "#/definitions/v1ExtraWechatpayLite"
      wechatpay_native:
        description: "微信支付二维码支付元数据"
        $ref: "#/definitions/v1ExtraWechatpayNative"
      wechatpay_scan:
        description: "微信支付扫码（被扫）支付元数据"
        $ref: "#/definitions/v1ExtraWechatpayScan"
  v1CreateCustomerRequest:
    type: "object"
    properties:
      address:
        type: "string"
      app_id:
        type: "string"
      available_balance:
        type: "number"
        format: "double"
      avatar:
        type: "string"
      created:
        type: "string"
        format: "int64"
      currency:
        type: "string"
      description:
        type: "string"
      disabled:
        type: "boolean"
      email:
        type: "string"
      gender:
        $ref: "#/definitions/v1Gender"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      name:
        type: "string"
      out_customer_id:
        type: "string"
      parent_customer_id:
        type: "string"
      phone:
        type: "string"
      withdrawable_balance:
        type: "number"
        format: "double"
  v1CreateRefundRequest:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
        description: "[OPTIONAL] 退款金额大于 0, 单位为对应币种的最小货币单位，例如：人民币为分（如退款金额为 1 元，此处请填\
          \ 100）。必须小于等于可退款金额，默认为全额退款。"
      app_id:
        type: "string"
        format: "string"
        description: "[REQUIRED] 应用 id"
      charge_id:
        type: "string"
        format: "string"
        description: "[REQUIRED] 支付 Charge Id"
      description:
        type: "string"
        format: "string"
        description: "[REQUIRED] 退款原因，最多 255 个 Unicode 字符。"
      extra:
        description: "[OPTIONAL] 退款 extra 参数。"
        $ref: "#/definitions/protobufAny"
      merchant_refund_id:
        type: "string"
        format: "string"
        description: "[REQUIRED] 商户系统的退款单号，必须保证唯一。由于 charge 支持多次退款，对于失败重试动作确保使用相同的\
          订单号，以避免重复退款造成损失。"
      metadata:
        type: "object"
        description: "[OPTIONAL] 参考元数据。"
        additionalProperties:
          type: "string"
    title: "创建 Refund 对象"
    description: "通过发起一次退款请求创建一个新的 refund 对象，只能对已经发生交易并且没有全额退款的 charge 对象发起退款。当进行全\
      额退款之前，可以进行多次退款，直至全额退款。当一次退款成功后，会发送 Webhooks 通知。"
  v1CreateRoyaltyRequest:
    type: "object"
    properties:
      app_id:
        type: "string"
        format: "string"
        description: "App ID"
      callback_url:
        type: "string"
        format: "string"
        description: "结果通知地址"
      charge_id:
        type: "string"
        format: "string"
        description: "Charge ID"
      order_id:
        type: "string"
        format: "string"
        description: "Order ID"
      receivers:
        type: "array"
        description: "分润接受方列表"
        items:
          $ref: "#/definitions/CreateRoyaltyRequestRoyaltyReceiver"
  v1CreateUserRequest:
    type: "object"
    properties:
      address:
        type: "string"
      app_id:
        type: "string"
      available_balance:
        type: "number"
        format: "double"
      avatar:
        type: "string"
      created:
        type: "string"
        format: "int64"
      currency:
        type: "string"
      description:
        type: "string"
      disabled:
        type: "boolean"
      email:
        type: "string"
      gender:
        $ref: "#/definitions/v1Gender"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      name:
        type: "string"
      out_user_id:
        type: "string"
      parent_user_id:
        type: "string"
      phone:
        type: "string"
      withdrawable_balance:
        type: "number"
        format: "double"
  v1Customer:
    type: "object"
    properties:
      address:
        type: "string"
      app_id:
        type: "string"
      available_balance:
        type: "number"
        format: "double"
      avatar:
        type: "string"
      created:
        type: "string"
        format: "int64"
      currency:
        type: "string"
      description:
        type: "string"
      disabled:
        type: "string"
      email:
        type: "string"
      gender:
        $ref: "#/definitions/v1Gender"
      id:
        type: "string"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      name:
        type: "string"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "Customer"
      phone:
        type: "string"
      withdrawable_balance:
        type: "number"
        format: "double"
    example:
      metadata:
        key: "metadata"
      address: "address"
      gender: {}
      created: "created"
      description: "description"
      avatar: "avatar"
      withdrawable_balance: 6.027456183070403
      available_balance: 0.8008281904610115
      phone: "phone"
      name: "name"
      currency: "currency"
      disabled: "disabled"
      id: "id"
      app_id: "app_id"
      email: "email"
      object: "Customer"
  v1CustomerListResponse:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/v1Customer"
      has_more:
        type: "boolean"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "CustomerList"
    example:
      data:
      - metadata:
          key: "metadata"
        address: "address"
        gender: {}
        created: "created"
        description: "description"
        avatar: "avatar"
        withdrawable_balance: 6.027456183070403
        available_balance: 0.8008281904610115
        phone: "phone"
        name: "name"
        currency: "currency"
        disabled: "disabled"
        id: "id"
        app_id: "app_id"
        email: "email"
        object: "Customer"
      - metadata:
          key: "metadata"
        address: "address"
        gender: {}
        created: "created"
        description: "description"
        avatar: "avatar"
        withdrawable_balance: 6.027456183070403
        available_balance: 0.8008281904610115
        phone: "phone"
        name: "name"
        currency: "currency"
        disabled: "disabled"
        id: "id"
        app_id: "app_id"
        email: "email"
        object: "Customer"
      has_more: true
      object: "CustomerList"
  v1CustomerResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1Customer"
      object:
        type: "string"
    example:
      data:
        metadata:
          key: "metadata"
        address: "address"
        gender: {}
        created: "created"
        description: "description"
        avatar: "avatar"
        withdrawable_balance: 6.027456183070403
        available_balance: 0.8008281904610115
        phone: "phone"
        name: "name"
        currency: "currency"
        disabled: "disabled"
        id: "id"
        app_id: "app_id"
        email: "email"
        object: "Customer"
      object: "object"
  v1DeleteCustomerResponse:
    type: "object"
    properties:
      deleted:
        type: "boolean"
      id:
        type: "string"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "Customer"
    example:
      deleted: true
      id: "id"
      object: "Customer"
  v1DeleteProductResponse:
    type: "object"
  v1DeleteSettlementAccountResponse:
    type: "object"
    properties:
      deleted:
        type: "boolean"
      id:
        type: "string"
      object:
        type: "string"
    example:
      deleted: true
      id: "id"
      object: "object"
  v1DeleteUserResponse:
    type: "object"
    properties:
      deleted:
        type: "boolean"
      id:
        type: "string"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "User"
    example:
      deleted: true
      id: "id"
      object: "User"
  v1ExtraAlipayApp:
    type: "object"
    properties:
      credit_agreement_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 信用支付协议号"
      credit_biz_order_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 信用支付业务订单号"
      credit_pay_mode:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 信用支付模式"
        title: "only in response"
      disable_pay_channels:
        type: "string"
        format: "string"
        description: "禁用渠道"
      enable_pay_channels:
        type: "string"
        format: "string"
        description: "可用渠道"
      ext_user_info:
        description: "外部指定买家"
        $ref: "#/definitions/v1ExtraAlipayExtUserInfo"
      extend_params:
        description: "业务扩展参数"
        $ref: "#/definitions/v1ExtraAlipayExtendParams"
      goods_detail:
        type: "array"
        description: "商品明细列表"
        items:
          $ref: "#/definitions/v1ExtraAlipayGoodsDetail"
      goods_type:
        type: "string"
        format: "string"
        description: "商品类型"
      merchant_trade_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 商户订单号"
      pay_param:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] App 用于拉起支付的请求字符串"
        title: "支付请求字符串"
      product_code:
        type: "string"
        format: "string"
        description: "销售产品码，商家和支付宝签约的产品码"
      seller_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 支付宝卖家支付宝用户ID"
      store_id:
        type: "string"
        format: "string"
        description: "商户门店编号"
    example:
      store_id: "store_id"
      credit_biz_order_id: "credit_biz_order_id"
      extend_params:
        hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
        sys_service_provider_id: "sys_service_provider_id"
        hb_fq_num: "hb_fq_num"
        industry_reflux_info: "industry_reflux_info"
        specified_seller_name: "specified_seller_name"
        card_type: "card_type"
      credit_agreement_id: "credit_agreement_id"
      product_code: "product_code"
      goods_detail:
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      enable_pay_channels: "enable_pay_channels"
      ext_user_info:
        cert_type: "cert_type"
        cert_no: "cert_no"
        mobile: "mobile"
        name: "name"
        fix_buyer: "fix_buyer"
        min_age: "min_age"
        need_check_info: "need_check_info"
      credit_pay_mode: "credit_pay_mode"
      merchant_trade_id: "merchant_trade_id"
      disable_pay_channels: "disable_pay_channels"
      goods_type: "goods_type"
      seller_id: "seller_id"
      pay_param: "pay_param"
  v1ExtraAlipayBusinessParams:
    type: "object"
    properties:
      actual_order_time:
        type: "string"
      campus_card:
        type: "string"
      card_type:
        type: "string"
      good_taxes:
        type: "string"
    example:
      good_taxes: "good_taxes"
      actual_order_time: "actual_order_time"
      campus_card: "campus_card"
      card_type: "card_type"
  v1ExtraAlipayExtUserInfo:
    type: "object"
    properties:
      cert_no:
        type: "string"
        format: "string"
        description: "真实用户的证件号码"
      cert_type:
        type: "string"
        format: "string"
        description: "真实用户的证件类型"
      fix_buyer:
        type: "string"
        format: "string"
        description: "是否是实名用户"
      min_age:
        type: "string"
        format: "string"
        description: "真实用户的证件有效期的起始时间"
      mobile:
        type: "string"
        format: "string"
        description: "真实用户的手机号码"
      name:
        type: "string"
        format: "string"
        description: "真实用户的姓名"
      need_check_info:
        type: "string"
        format: "string"
        description: "是否需要补充身份信息"
    example:
      cert_type: "cert_type"
      cert_no: "cert_no"
      mobile: "mobile"
      name: "name"
      fix_buyer: "fix_buyer"
      min_age: "min_age"
      need_check_info: "need_check_info"
  v1ExtraAlipayExtendParams:
    type: "object"
    properties:
      card_type:
        type: "string"
        format: "string"
        description: "卡类型"
      hb_fq_num:
        type: "string"
        format: "string"
        description: "使用花呗分期要进行的分期数"
      hb_fq_seller_percent:
        type: "number"
        format: "int32"
        description: "使用花呗分期需要卖家承担的手续费比例的百分值，传入100代表100%"
      industry_reflux_info:
        type: "string"
        format: "string"
        description: "行业数据回流信息"
      specified_seller_name:
        type: "string"
        format: "string"
        description: "指定收款支付宝用户名"
      sys_service_provider_id:
        type: "string"
        format: "string"
        description: "系统商编号，该参数作为系统商返佣数据提取的依据，请填写系统商签约协议的PID"
    example:
      hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
      sys_service_provider_id: "sys_service_provider_id"
      hb_fq_num: "hb_fq_num"
      industry_reflux_info: "industry_reflux_info"
      specified_seller_name: "specified_seller_name"
      card_type: "card_type"
  v1ExtraAlipayFace:
    type: "object"
  v1ExtraAlipayFundBillList:
    type: "object"
    properties:
      amount:
        type: "string"
      fund_channel:
        type: "string"
      real_amount:
        type: "string"
    example:
      real_amount: "real_amount"
      amount: "amount"
      fund_channel: "fund_channel"
  v1ExtraAlipayGoodsDetail:
    type: "object"
    properties:
      alipay_goods_id:
        type: "string"
        format: "string"
        description: "支付宝商品编号"
      body:
        type: "string"
        format: "string"
        description: "商品描述"
      categories_tree:
        type: "string"
        format: "string"
        description: "商品类目树"
      goods_category:
        type: "string"
        format: "string"
        description: "商品类目"
      goods_id:
        type: "string"
        format: "string"
        description: "商品编号"
      goods_name:
        type: "string"
        format: "string"
        description: "商品名称"
      price:
        type: "number"
        format: "float"
        description: "价格"
      quantity:
        type: "number"
        format: "int32"
        description: "商品数量"
      show_url:
        type: "string"
        format: "string"
        description: "商品显示链接"
    example:
      goods_name: "goods_name"
      alipay_goods_id: "alipay_goods_id"
      quantity: 9.301444243932575517419536481611430644989013671875
      price: 7.0614014
      goods_category: "goods_category"
      goods_id: "goods_id"
      body: "body"
      categories_tree: "categories_tree"
      show_url: "show_url"
  v1ExtraAlipayInvoiceInfo:
    type: "object"
    properties:
      details:
        type: "string"
      key_info:
        $ref: "#/definitions/ExtraAlipayInvoiceInfoKeyInfo"
    example:
      key_info:
        tax_num: "tax_num"
        is_support_invoice: true
        invoice_merchant_name: "invoice_merchant_name"
      details: "details"
  v1ExtraAlipayLite:
    type: "object"
    properties:
      body:
        type: "string"
        format: "string"
        description: "商品描述"
      business_params:
        description: "业务扩展参数"
        $ref: "#/definitions/v1ExtraAlipayBusinessParams"
      buyer_id:
        type: "string"
        format: "string"
        description: "买家的支付宝唯一用户号（2088开头的16位纯数字）"
      discountable_amount:
        type: "number"
        format: "double"
        description: "可打折金额. 参与优惠计算的金额，单位为元，精确到小数点后两位，取值范围[0.01,100000000] 如果该值未传入\
          ，但传入了【订单总金额】，【不可打折金额】则该值默认为【订单总金额】-【不可打折金额】"
      extend_params:
        description: "业务扩展参数"
        $ref: "#/definitions/v1ExtraAlipayExtendParams"
      logistics_detail:
        description: "物流信息"
        $ref: "#/definitions/v1ExtraAlipayLogisticsDetail"
      operator_id:
        type: "string"
        format: "string"
        description: "商户操作员编号"
      product_code:
        type: "string"
        format: "string"
        description: "销售产品码，商家和支付宝签约的产品码，为固定值 FACE_TO_FACE_PAYMENT"
      receiver_address_info:
        description: "收货信息"
        $ref: "#/definitions/v1ExtraAlipayReceiverAddressInfo"
      seller_id:
        type: "string"
        format: "string"
        description: "卖家支付宝用户号"
      settle_info:
        description: "结算信息"
        $ref: "#/definitions/v1ExtraAlipaySettleInfo"
      store_id:
        type: "string"
        format: "string"
        description: "商户门店编号"
      terminal_id:
        type: "string"
        format: "string"
        description: "商户机具终端编号"
      time_expire:
        type: "string"
        format: "string"
        description: "绝对超时时间，格式为yyyy-MM-dd HH:mm:ss"
      timeout_express:
        type: "string"
        format: "string"
        description: "订单有效时间，该时间段内订单可以进行支付，结束后订单将关闭，天数为0表示永久有效"
      trade_no:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 支付宝交易号"
        title: "only in response"
      undiscountable_amount:
        type: "number"
        format: "double"
        description: "不可打折金额. 不参与优惠计算的金额，单位为元，精确到小数点后两位，取值范围[0.01,100000000] 如果该值未\
          传入，但传入了【订单总金额】,【可打折金额】，则该值默认为【订单总金额】-【可打折金额】"
    example:
      store_id: "store_id"
      extend_params:
        hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
        sys_service_provider_id: "sys_service_provider_id"
        hb_fq_num: "hb_fq_num"
        industry_reflux_info: "industry_reflux_info"
        specified_seller_name: "specified_seller_name"
        card_type: "card_type"
      time_expire: "time_expire"
      settle_info:
        settle_period_time: "settle_period_time"
        settle_detail_infos:
          amount: "amount"
          settle_entity_type: "settle_entity_type"
          trans_in: "trans_in"
          summary_dimension: "summary_dimension"
          settle_entity_id: "settle_entity_id"
          trans_in_type: "trans_in_type"
      operator_id: "operator_id"
      receiver_address_info:
        zip: "zip"
        address: "address"
        mobile: "mobile"
        name: "name"
        division_code: "division_code"
      body: "body"
      buyer_id: "buyer_id"
      product_code: "product_code"
      discountable_amount: 3.616076749251911
      logistics_detail:
        logistics_type: "logistics_type"
      business_params:
        good_taxes: "good_taxes"
        actual_order_time: "actual_order_time"
        campus_card: "campus_card"
        card_type: "card_type"
      timeout_express: "timeout_express"
      trade_no: "trade_no"
      undiscountable_amount: 2.027123023002322
      seller_id: "seller_id"
      terminal_id: "terminal_id"
  v1ExtraAlipayLogisticsDetail:
    type: "object"
    properties:
      logistics_type:
        type: "string"
    example:
      logistics_type: "logistics_type"
  v1ExtraAlipayPage:
    type: "object"
    properties:
      business_params:
        type: "number"
        format: "int32"
        description: "业务扩展参数"
      disable_pay_channels:
        type: "string"
        format: "string"
        description: "禁用渠道"
      enable_pay_channels:
        type: "string"
        format: "string"
        description: "可用渠道"
      extend_params:
        description: "业务扩展参数"
        $ref: "#/definitions/v1ExtraAlipayExtendParams"
      goods_detail:
        type: "array"
        description: "商品明细列表"
        items:
          $ref: "#/definitions/v1ExtraAlipayGoodsDetail"
      goods_type:
        type: "string"
        format: "string"
        description: "商品类型"
      integration_type:
        type: "number"
        format: "int32"
        description: "支付宝用户ID"
      invoice_info:
        description: "发票信息"
        $ref: "#/definitions/v1ExtraAlipayInvoiceInfo"
      merchant_trade_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 商户订单号"
      pay_url:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 支付链接"
      promo_params:
        type: "string"
        format: "string"
        description: "优惠参数"
      qr_pay_mode:
        type: "string"
        format: "string"
        description: "扫码支付模式"
      qrcode_width:
        type: "number"
        format: "int32"
        description: "二维码宽度"
      request_from_url:
        type: "number"
        format: "int32"
        description: "请求来源地址"
      seller_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 收款支付宝用户ID"
        title: "only in response"
      store_id:
        type: "string"
        format: "string"
        description: "商户门店编号"
      sub_merchant:
        description: "二级商户信息"
        $ref: "#/definitions/v1ExtraAlipaySubMerchant"
      time_expire:
        type: "integer"
        format: "int32"
        description: "订单失效时间"
    example:
      store_id: "store_id"
      extend_params:
        hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
        sys_service_provider_id: "sys_service_provider_id"
        hb_fq_num: "hb_fq_num"
        industry_reflux_info: "industry_reflux_info"
        specified_seller_name: "specified_seller_name"
        card_type: "card_type"
      time_expire: 1
      request_from_url: 1.024645700144157789424070870154537260532379150390625
      integration_type: 7.3862819483858839220147274318151175975799560546875
      qr_pay_mode: "qr_pay_mode"
      qrcode_width: 1.231513536777255612975068288506008684635162353515625
      goods_detail:
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      pay_url: "pay_url"
      enable_pay_channels: "enable_pay_channels"
      sub_merchant:
        merchant_id: "merchant_id"
        merchant_type: "merchant_type"
      invoice_info:
        key_info:
          tax_num: "tax_num"
          is_support_invoice: true
          invoice_merchant_name: "invoice_merchant_name"
        details: "details"
      merchant_trade_id: "merchant_trade_id"
      business_params: 4.1456080298839363962315474054776132106781005859375
      disable_pay_channels: "disable_pay_channels"
      goods_type: "goods_type"
      promo_params: "promo_params"
      seller_id: "seller_id"
  v1ExtraAlipayPayParams:
    type: "object"
    properties:
      async_type:
        type: "string"
    example:
      async_type: "async_type"
  v1ExtraAlipayQr:
    type: "object"
    properties:
      buyer_id:
        type: "string"
        format: "string"
        description: "买家的支付宝唯一用户号（2088开头的16位纯数字）"
      discountable_amount:
        type: "string"
        description: "可打折金额. 参与优惠计算的金额，单位为元，精确到小数点后两位，取值范围[0.01,100000000] 如果该值未传入\
          ，但传入了【订单总金额】，【不可打折金额】则该值默认为【订单总金额】-【不可打折金额】"
      goods_detail:
        type: "array"
        description: "商品明细列表"
        items:
          $ref: "#/definitions/v1ExtraAlipayGoodsDetail"
      operator_id:
        type: "string"
        format: "string"
        description: "商户操作员编号"
      product_code:
        type: "string"
        format: "string"
        description: "销售产品码，商家和支付宝签约的产品码，为固定值QUICK_MSECURITY_PAY"
      qr_code:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 二维码"
        title: "only in response"
      qr_code_timeout_express:
        type: "string"
        format: "string"
        description: "支付场景。 条码支付，取值：bar_code； 声波支付，取值：wave_code"
        title: "支付场景。 条码支付，取值：bar_code； 声波支付，取值：wave_code"
      qr_link:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 二维码图片的URL地址"
      store_id:
        type: "string"
        format: "string"
        description: "商户门店编号"
      terminal_id:
        type: "string"
        format: "string"
        description: "商户机具终端编号"
    example:
      discountable_amount: "discountable_amount"
      store_id: "store_id"
      operator_id: "operator_id"
      qr_code: "qr_code"
      qr_code_timeout_express: "qr_code_timeout_express"
      buyer_id: "buyer_id"
      product_code: "product_code"
      goods_detail:
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      qr_link: "qr_link"
      terminal_id: "terminal_id"
  v1ExtraAlipayReceiverAddressInfo:
    type: "object"
    properties:
      address:
        type: "string"
      division_code:
        type: "string"
      mobile:
        type: "string"
      name:
        type: "string"
      zip:
        type: "string"
    example:
      zip: "zip"
      address: "address"
      mobile: "mobile"
      name: "name"
      division_code: "division_code"
  v1ExtraAlipayScan:
    type: "object"
    properties:
      advance_payment_type:
        type: "string"
        format: "string"
        description: "预授权类型"
      auth_code:
        type: "string"
        format: "string"
        description: "用户的条码"
        title: "用户的条码"
      auth_confirm_mode:
        type: "string"
        format: "string"
        description: "授权确认方式"
      auth_no:
        type: "string"
        format: "string"
        description: "授权号"
      buyer_id:
        type: "string"
        format: "string"
        description: "买家的支付宝用户id"
      buyer_logon_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 买家支付宝账号"
      buyer_pay_amount:
        type: "number"
        format: "double"
        description: "[ONLY IN RESPONSE] 付款金额"
      buyer_user_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 买家在支付宝的用户id"
      discount_amount:
        type: "number"
        format: "double"
        description: "[ONLY IN RESPONSE] 商家优惠金额"
      discount_goods_detail:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 商家优惠商品明细"
      discountable_amount:
        type: "number"
        format: "double"
        description: "可打折金额"
      extend_params:
        description: "业务扩展参数"
        $ref: "#/definitions/v1ExtraAlipayExtendParams"
      fund_bill_list:
        description: "[ONLY IN RESPONSE] 支付金额信息"
        $ref: "#/definitions/v1ExtraAlipayFundBillList"
      gmt_payment:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 支付时间"
      goods_detail:
        type: "array"
        description: "商品明细列表"
        items:
          $ref: "#/definitions/v1ExtraAlipayGoodsDetail"
      invoice_amount:
        type: "number"
        format: "double"
        description: "[ONLY IN RESPONSE] 开票金额"
      is_async_pay:
        description: "是否异步支付"
        $ref: "#/definitions/v1ExtraAlipayPayParams"
      operator_id:
        type: "string"
        format: "string"
        description: "商户操作员编号"
      pay_params:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 支付宝返回的支付参数"
        title: "only in response"
      point_amount:
        type: "number"
        format: "double"
        description: "[ONLY IN RESPONSE] 集分宝金额"
      product_code:
        type: "string"
        format: "string"
        description: "销售产品码"
      query_options:
        type: "string"
        format: "string"
        description: "商户授权查询类型"
      receipt_amount:
        type: "number"
        format: "double"
        description: "[ONLY IN RESPONSE] 实收金额"
      request_org_pid:
        type: "string"
        format: "string"
        description: "请求方机构id"
      scene:
        type: "string"
        format: "string"
        description: "支付场景"
        title: "支付场景。 条码支付，取值：bar_code； 声波支付，取值：wave_code"
      store_id:
        type: "string"
        format: "string"
        description: "商户门店编号"
      store_name:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 商户门店名称"
      terminal_id:
        type: "string"
        format: "string"
        description: "商户机具终端编号"
      total_amount:
        type: "number"
        format: "double"
        description: "[ONLY IN RESPONSE] 订单金额"
      voucher_detail_list:
        description: "[ONLY IN RESPONSE] 商家优惠明细列表"
        $ref: "#/definitions/v1ExtraAlipayVoucherDetailList"
    example:
      extend_params:
        hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
        sys_service_provider_id: "sys_service_provider_id"
        hb_fq_num: "hb_fq_num"
        industry_reflux_info: "industry_reflux_info"
        specified_seller_name: "specified_seller_name"
        card_type: "card_type"
      query_options: "query_options"
      discount_amount: 7.457744773683766
      is_async_pay:
        async_type: "async_type"
      operator_id: "operator_id"
      buyer_id: "buyer_id"
      product_code: "product_code"
      invoice_amount: 4.965218492984954
      auth_no: "auth_no"
      fund_bill_list:
        real_amount: "real_amount"
        amount: "amount"
        fund_channel: "fund_channel"
      scene: "scene"
      auth_confirm_mode: "auth_confirm_mode"
      store_name: "store_name"
      receipt_amount: 9.965781217890562
      discount_goods_detail: "discount_goods_detail"
      buyer_pay_amount: 6.84685269835264
      terminal_id: "terminal_id"
      store_id: "store_id"
      gmt_payment: "gmt_payment"
      pay_params: "pay_params"
      buyer_user_id: "buyer_user_id"
      goods_detail:
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      auth_code: "auth_code"
      discountable_amount: 1.1730742509559433
      voucher_detail_list:
        purchase_ant_contribute: 6.438423552598547
        amount: 6.683562403749608
        merchant_contribute: 8.762042012749001
        purchase_buyer_contribute: 3.5571952270680973
        name: "name"
        memo: "memo"
        purchase_merchant_contribute: 6.965117697638846
        other_contribute: 9.018348186070783
        template_id: "template_id"
        id: "id"
        type: "type"
      advance_payment_type: "advance_payment_type"
      total_amount: 9.369310271410669
      buyer_logon_id: "buyer_logon_id"
      request_org_pid: "request_org_pid"
      point_amount: 5.025004791520295
  v1ExtraAlipaySettleInfo:
    type: "object"
    properties:
      settle_detail_infos:
        $ref: "#/definitions/ExtraAlipaySettleInfoSettleDetailInfos"
      settle_period_time:
        type: "string"
    example:
      settle_period_time: "settle_period_time"
      settle_detail_infos:
        amount: "amount"
        settle_entity_type: "settle_entity_type"
        trans_in: "trans_in"
        summary_dimension: "summary_dimension"
        settle_entity_id: "settle_entity_id"
        trans_in_type: "trans_in_type"
  v1ExtraAlipaySubMerchant:
    type: "object"
    properties:
      merchant_id:
        type: "string"
        format: "string"
        description: "商户的支付宝user_id"
      merchant_type:
        type: "string"
        format: "string"
        description: "商户类型，1：支付宝服务窗，2：第三方App，目前只支持支付宝服务窗，默认为1"
    example:
      merchant_id: "merchant_id"
      merchant_type: "merchant_type"
  v1ExtraAlipayVoucherDetailList:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "double"
      id:
        type: "string"
      memo:
        type: "string"
      merchant_contribute:
        type: "number"
        format: "double"
      name:
        type: "string"
      other_contribute:
        type: "number"
        format: "double"
      purchase_ant_contribute:
        type: "number"
        format: "double"
      purchase_buyer_contribute:
        type: "number"
        format: "double"
      purchase_merchant_contribute:
        type: "number"
        format: "double"
      template_id:
        type: "string"
      type:
        type: "string"
    example:
      purchase_ant_contribute: 6.438423552598547
      amount: 6.683562403749608
      merchant_contribute: 8.762042012749001
      purchase_buyer_contribute: 3.5571952270680973
      name: "name"
      memo: "memo"
      purchase_merchant_contribute: 6.965117697638846
      other_contribute: 9.018348186070783
      template_id: "template_id"
      id: "id"
      type: "type"
  v1ExtraAlipayWap:
    type: "object"
    properties:
      auth_token:
        type: "string"
        format: "string"
        description: "授权码"
      business_params:
        type: "string"
        format: "string"
        description: "业务扩展参数"
      disable_pay_channels:
        type: "string"
        format: "string"
        description: "禁用渠道"
      enable_pay_channels:
        type: "string"
        format: "string"
        description: "可用渠道"
      extend_params:
        description: "业务扩展参数"
        $ref: "#/definitions/v1ExtraAlipayExtendParams"
      fund_bill_list:
        type: "array"
        description: "支付金额信息"
        items:
          type: "string"
      goods_detail:
        type: "array"
        description: "商品明细列表"
        items:
          $ref: "#/definitions/v1ExtraAlipayGoodsDetail"
      goods_type:
        type: "string"
        format: "string"
        description: "商品类型"
      merchant_trade_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 商户订单号"
      pay_url:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 支付链接"
      product_code:
        type: "string"
        format: "string"
        description: "销售产品码"
      promo_params:
        type: "string"
        format: "string"
        description: "优惠参数"
      quit_url:
        type: "string"
        format: "string"
        description: "支付取消跳转的地址"
      return_url:
        type: "string"
        format: "string"
        description: "支付成功跳转的地址"
      seller_id:
        type: "string"
        format: "string"
        description: "[ONLY IN RESPONSE] 收款支付宝用户ID"
        title: "only in response"
      store_id:
        type: "string"
        format: "string"
        description: "商户门店编号"
      voucher_detail_list:
        $ref: "#/definitions/v1ExtraAlipayVoucherDetailList"
    example:
      store_id: "store_id"
      extend_params:
        hb_fq_seller_percent: 2.3021358869347654518833223846741020679473876953125
        sys_service_provider_id: "sys_service_provider_id"
        hb_fq_num: "hb_fq_num"
        industry_reflux_info: "industry_reflux_info"
        specified_seller_name: "specified_seller_name"
        card_type: "card_type"
      quit_url: "quit_url"
      product_code: "product_code"
      goods_detail:
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      - goods_name: "goods_name"
        alipay_goods_id: "alipay_goods_id"
        quantity: 9.301444243932575517419536481611430644989013671875
        price: 7.0614014
        goods_category: "goods_category"
        goods_id: "goods_id"
        body: "body"
        categories_tree: "categories_tree"
        show_url: "show_url"
      pay_url: "pay_url"
      enable_pay_channels: "enable_pay_channels"
      fund_bill_list:
      - "fund_bill_list"
      - "fund_bill_list"
      voucher_detail_list:
        purchase_ant_contribute: 6.438423552598547
        amount: 6.683562403749608
        merchant_contribute: 8.762042012749001
        purchase_buyer_contribute: 3.5571952270680973
        name: "name"
        memo: "memo"
        purchase_merchant_contribute: 6.965117697638846
        other_contribute: 9.018348186070783
        template_id: "template_id"
        id: "id"
        type: "type"
      merchant_trade_id: "merchant_trade_id"
      business_params: "business_params"
      disable_pay_channels: "disable_pay_channels"
      return_url: "return_url"
      goods_type: "goods_type"
      auth_token: "auth_token"
      promo_params: "promo_params"
      seller_id: "seller_id"
  v1ExtraWechatpayApp:
    type: "object"
    properties:
      app_config:
        description: "app拉起支付配置信息"
        $ref: "#/definitions/v1ExtraWechatpayAppConfig"
      attach:
        type: "string"
        description: "元数据"
      detail:
        description: "商品详情"
        $ref: "#/definitions/v1ExtraWechatpayDetail"
      goods_tag:
        type: "string"
        format: "string"
        description: "订单优惠标记"
      prepay_id:
        type: "string"
        format: "string"
        description: "预支付交易会话标识"
      scene_info:
        description: "场景信息"
        $ref: "#/definitions/v1ExtraWechatpaySceneInfo"
      settle_info:
        description: "结算信息"
        $ref: "#/definitions/v1ExtraWechatpaySettleInfo"
      time_expire:
        type: "string"
        format: "string"
        description: "交易结束时间"
      time_start:
        type: "string"
        format: "string"
        description: "交易起始时间"
    example:
      time_expire: "time_expire"
      goods_tag: "goods_tag"
      settle_info:
        profit_sharing: true
      time_start: "time_start"
      app_config:
        package: "package"
        appid: "appid"
        sign: "sign"
        partnerid: "partnerid"
        prepayid: "prepayid"
        noncestr: "noncestr"
        timestamp: "timestamp"
      attach: "attach"
      detail:
        invoice_id: "invoice_id"
        goods_detail:
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        cost_price: "cost_price"
      prepay_id: "prepay_id"
      scene_info:
        store_info:
          address: "address"
          area_code: "area_code"
          name: "name"
          id: "id"
        device_id: "device_id"
        h5_info:
          app_name: "app_name"
          app_url: "app_url"
          bundle_id: "bundle_id"
          package_name: "package_name"
          type: "type"
        payer_client_ip: "payer_client_ip"
  v1ExtraWechatpayAppConfig:
    type: "object"
    properties:
      appid:
        type: "string"
        format: "string"
        description: "应用appid"
      noncestr:
        type: "string"
        format: "string"
        description: "随机字符串"
      package:
        type: "string"
        format: "string"
        description: "扩展字段"
      partnerid:
        type: "string"
        format: "string"
        description: "商户号"
      prepayid:
        type: "string"
        format: "string"
        description: "预支付交易会话标识"
      sign:
        type: "string"
        format: "string"
        description: "签名"
      timestamp:
        type: "string"
        format: "string"
        description: "时间戳"
    example:
      package: "package"
      appid: "appid"
      sign: "sign"
      partnerid: "partnerid"
      prepayid: "prepayid"
      noncestr: "noncestr"
      timestamp: "timestamp"
  v1ExtraWechatpayAppletConfig:
    type: "object"
    properties:
      appId:
        type: "string"
        format: "string"
        description: "小程序appid"
      nonceStr:
        type: "string"
        format: "string"
        description: "随机字符串"
      package:
        type: "string"
        format: "string"
        description: "扩展字段"
      paySign:
        type: "string"
        format: "string"
        description: "签名"
      signType:
        type: "string"
        format: "string"
        description: "签名类型"
      timeStamp:
        type: "string"
        format: "string"
        description: "时间戳"
    example:
      timeStamp: "timeStamp"
      package: "package"
      paySign: "paySign"
      appId: "appId"
      signType: "signType"
      nonceStr: "nonceStr"
  v1ExtraWechatpayDetail:
    type: "object"
    properties:
      cost_price:
        type: "string"
        format: "int64"
      goods_detail:
        type: "array"
        items:
          $ref: "#/definitions/ExtraWechatpayDetailGoodsDetail"
      invoice_id:
        type: "string"
    example:
      invoice_id: "invoice_id"
      goods_detail:
      - goods_name: "goods_name"
        quantity: "quantity"
        Wechatpay_goods_id: "Wechatpay_goods_id"
        merchant_goods_id: "merchant_goods_id"
        unit_price: "unit_price"
      - goods_name: "goods_name"
        quantity: "quantity"
        Wechatpay_goods_id: "Wechatpay_goods_id"
        merchant_goods_id: "merchant_goods_id"
        unit_price: "unit_price"
      cost_price: "cost_price"
  v1ExtraWechatpayH5:
    type: "object"
    properties:
      attach:
        type: "string"
        description: "元数据"
      detail:
        description: "商品详情"
        $ref: "#/definitions/v1ExtraWechatpayDetail"
      goods_tag:
        type: "string"
        format: "string"
        description: "订单优惠标记"
      pay_sign:
        type: "string"
        format: "string"
        description: "支付签名"
      pay_url:
        type: "string"
        format: "string"
        description: "支付链接"
        title: "just in response"
      prepay_id:
        type: "string"
        format: "string"
        description: "预支付交易会话标识"
      scene_info:
        description: "场景信息"
        $ref: "#/definitions/v1ExtraWechatpaySceneInfo"
      settle_info:
        description: "结算信息"
        $ref: "#/definitions/v1ExtraWechatpaySettleInfo"
      time_expire:
        type: "string"
        format: "string"
        description: "交易结束时间"
      time_start:
        type: "string"
        format: "string"
        description: "交易起始时间"
      wap_name:
        type: "string"
        format: "string"
        description: "WAP网站名"
      wap_url:
        type: "string"
        format: "string"
        description: "WAP网站URL"
    example:
      wap_name: "wap_name"
      time_expire: "time_expire"
      wap_url: "wap_url"
      goods_tag: "goods_tag"
      settle_info:
        profit_sharing: true
      time_start: "time_start"
      attach: "attach"
      detail:
        invoice_id: "invoice_id"
        goods_detail:
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        cost_price: "cost_price"
      pay_url: "pay_url"
      pay_sign: "pay_sign"
      prepay_id: "prepay_id"
      scene_info:
        store_info:
          address: "address"
          area_code: "area_code"
          name: "name"
          id: "id"
        device_id: "device_id"
        h5_info:
          app_name: "app_name"
          app_url: "app_url"
          bundle_id: "bundle_id"
          package_name: "package_name"
          type: "type"
        payer_client_ip: "payer_client_ip"
  v1ExtraWechatpayJsapi:
    type: "object"
    properties:
      attach:
        type: "string"
        description: "元数据"
      detail:
        description: "商品详情"
        $ref: "#/definitions/v1ExtraWechatpayDetail"
      goods_tag:
        type: "string"
        format: "string"
        description: "订单优惠标记"
      jsapi_config:
        description: "jsapi支付配置信息"
        $ref: "#/definitions/v1ExtraWechatpayJsapiConfig"
      payer:
        description: "支付者信息"
        $ref: "#/definitions/v1ExtraWechatpayPayer"
      prepay_id:
        type: "string"
        format: "string"
        description: "预支付交易会话标识"
      scene_info:
        description: "场景信息"
        $ref: "#/definitions/v1ExtraWechatpaySceneInfo"
      settle_info:
        description: "结算信息"
        $ref: "#/definitions/v1ExtraWechatpaySettleInfo"
      time_expire:
        type: "string"
        format: "string"
        description: "交易结束时间"
      time_start:
        type: "string"
        format: "string"
        description: "交易起始时间"
    example:
      time_expire: "time_expire"
      goods_tag: "goods_tag"
      settle_info:
        profit_sharing: true
      time_start: "time_start"
      jsapi_config:
        timeStamp: "timeStamp"
        package: "package"
        paySign: "paySign"
        appId: "appId"
        signType: "signType"
        nonceStr: "nonceStr"
      attach: "attach"
      detail:
        invoice_id: "invoice_id"
        goods_detail:
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        cost_price: "cost_price"
      payer:
        openid: "openid"
        appid: "appid"
      prepay_id: "prepay_id"
      scene_info:
        store_info:
          address: "address"
          area_code: "area_code"
          name: "name"
          id: "id"
        device_id: "device_id"
        h5_info:
          app_name: "app_name"
          app_url: "app_url"
          bundle_id: "bundle_id"
          package_name: "package_name"
          type: "type"
        payer_client_ip: "payer_client_ip"
  v1ExtraWechatpayJsapiConfig:
    type: "object"
    properties:
      appId:
        type: "string"
        format: "string"
        description: "公众号appid"
      nonceStr:
        type: "string"
        format: "string"
        description: "随机字符串"
      package:
        type: "string"
        format: "string"
        description: "扩展字段"
      paySign:
        type: "string"
        format: "string"
        description: "签名"
      signType:
        type: "string"
        format: "string"
        description: "签名类型"
      timeStamp:
        type: "string"
        format: "string"
        description: "时间戳"
    example:
      timeStamp: "timeStamp"
      package: "package"
      paySign: "paySign"
      appId: "appId"
      signType: "signType"
      nonceStr: "nonceStr"
  v1ExtraWechatpayLite:
    type: "object"
    properties:
      applet_config:
        description: "小程序拉起支付配置信息"
        $ref: "#/definitions/v1ExtraWechatpayAppletConfig"
      attach:
        type: "string"
        description: "元数据"
      detail:
        description: "商品详情"
        $ref: "#/definitions/v1ExtraWechatpayDetail"
      goods_tag:
        type: "string"
        format: "string"
        description: "订单优惠标记"
      payer:
        description: "付款人信息"
        $ref: "#/definitions/v1ExtraWechatpayPayer"
      prepay_id:
        type: "string"
        format: "string"
        description: "预支付交易会话标识"
      scene_info:
        description: "场景信息"
        $ref: "#/definitions/v1ExtraWechatpaySceneInfo"
      settle_info:
        description: "结算信息"
        $ref: "#/definitions/v1ExtraWechatpaySettleInfo"
      time_expire:
        type: "string"
        format: "string"
        description: "交易结束时间"
      time_start:
        type: "string"
        format: "string"
        description: "交易起始时间"
    example:
      time_expire: "time_expire"
      goods_tag: "goods_tag"
      settle_info:
        profit_sharing: true
      time_start: "time_start"
      applet_config:
        timeStamp: "timeStamp"
        package: "package"
        paySign: "paySign"
        appId: "appId"
        signType: "signType"
        nonceStr: "nonceStr"
      attach: "attach"
      detail:
        invoice_id: "invoice_id"
        goods_detail:
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        cost_price: "cost_price"
      payer:
        openid: "openid"
        appid: "appid"
      prepay_id: "prepay_id"
      scene_info:
        store_info:
          address: "address"
          area_code: "area_code"
          name: "name"
          id: "id"
        device_id: "device_id"
        h5_info:
          app_name: "app_name"
          app_url: "app_url"
          bundle_id: "bundle_id"
          package_name: "package_name"
          type: "type"
        payer_client_ip: "payer_client_ip"
  v1ExtraWechatpayNative:
    type: "object"
    properties:
      attach:
        type: "string"
        description: "元数据"
      detail:
        description: "商品详情"
        $ref: "#/definitions/v1ExtraWechatpayDetail"
      goods_tag:
        type: "string"
        format: "string"
        description: "订单优惠标记"
      qr_code:
        type: "string"
        format: "string"
        description: "二维码数据"
        title: "only in response"
      qr_link:
        type: "string"
        format: "string"
        description: "二维码链接"
      scene_info:
        description: "场景信息"
        $ref: "#/definitions/v1ExtraWechatpaySceneInfo"
      settle_info:
        description: "结算信息"
        $ref: "#/definitions/v1ExtraWechatpaySettleInfo"
      time_expire:
        type: "string"
        format: "string"
        description: "交易过期时间"
      time_start:
        type: "string"
        format: "string"
        description: "交易起始时间"
    example:
      time_expire: "time_expire"
      goods_tag: "goods_tag"
      settle_info:
        profit_sharing: true
      time_start: "time_start"
      qr_code: "qr_code"
      attach: "attach"
      detail:
        invoice_id: "invoice_id"
        goods_detail:
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        cost_price: "cost_price"
      qr_link: "qr_link"
      scene_info:
        store_info:
          address: "address"
          area_code: "area_code"
          name: "name"
          id: "id"
        device_id: "device_id"
        h5_info:
          app_name: "app_name"
          app_url: "app_url"
          bundle_id: "bundle_id"
          package_name: "package_name"
          type: "type"
        payer_client_ip: "payer_client_ip"
  v1ExtraWechatpayPayer:
    type: "object"
    properties:
      appid:
        type: "string"
        format: "string"
        description: "应用下的 appid，必需和 Openid 一致"
      openid:
        type: "string"
        format: "string"
        description: "下单前需获取到用户的 Openid。必需和 appid 一致"
    example:
      openid: "openid"
      appid: "appid"
  v1ExtraWechatpayScan:
    type: "object"
    properties:
      attach:
        type: "string"
        description: "元数据"
      auth_code:
        type: "string"
        format: "string"
        description: "授权码"
      bank_type:
        type: "string"
        format: "string"
        description: "付款银行"
      cash_fee:
        type: "string"
        format: "string"
        description: "现金支付金额"
      cash_fee_type:
        type: "string"
        format: "string"
        description: "现金支付币种"
      detail:
        description: "商品详情"
        $ref: "#/definitions/v1ExtraWechatpayDetail"
      fee_type:
        type: "string"
        format: "string"
        description: "货币种类"
      goods_tag:
        type: "string"
        format: "string"
        description: "订单优惠标记"
      is_subscribe:
        type: "boolean"
        description: "是否关注公众账号"
        default: false
      payer:
        description: "付款人信息"
        $ref: "#/definitions/v1ExtraWechatpayPayer"
      scene_info:
        description: "场景信息"
        $ref: "#/definitions/v1ExtraWechatpaySceneInfo"
      settle_info:
        description: "结算信息"
        $ref: "#/definitions/v1ExtraWechatpaySettleInfo"
      settlement_total_fee:
        type: "number"
        format: "int64"
        description: "应结订单金额"
      spbill_create_ip:
        type: "string"
        format: "string"
        description: "终端IP"
      sub_is_subscribe:
        type: "boolean"
        description: "子商户是否关注公众账号"
        default: false
      sub_openid:
        type: "string"
        format: "string"
        description: "子商户openid"
      time_end:
        type: "string"
        format: "string"
        description: "支付完成时间"
      time_expire:
        type: "string"
        format: "string"
        description: "交易结束时间"
      time_start:
        type: "string"
        format: "string"
        description: "交易起始时间"
    example:
      time_expire: "time_expire"
      bank_type: "bank_type"
      settle_info:
        profit_sharing: true
      time_start: "time_start"
      sub_is_subscribe: false
      fee_type: "fee_type"
      payer:
        openid: "openid"
        appid: "appid"
      spbill_create_ip: "spbill_create_ip"
      cash_fee: "cash_fee"
      auth_code: "auth_code"
      sub_openid: "sub_openid"
      cash_fee_type: "cash_fee_type"
      goods_tag: "goods_tag"
      settlement_total_fee: 1.2846590061165319429647979632136411964893341064453125
      attach: "attach"
      detail:
        invoice_id: "invoice_id"
        goods_detail:
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        - goods_name: "goods_name"
          quantity: "quantity"
          Wechatpay_goods_id: "Wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          unit_price: "unit_price"
        cost_price: "cost_price"
      time_end: "time_end"
      is_subscribe: false
      scene_info:
        store_info:
          address: "address"
          area_code: "area_code"
          name: "name"
          id: "id"
        device_id: "device_id"
        h5_info:
          app_name: "app_name"
          app_url: "app_url"
          bundle_id: "bundle_id"
          package_name: "package_name"
          type: "type"
        payer_client_ip: "payer_client_ip"
  v1ExtraWechatpaySceneInfo:
    type: "object"
    properties:
      device_id:
        type: "string"
      h5_info:
        $ref: "#/definitions/ExtraWechatpaySceneInfoH5Info"
      payer_client_ip:
        type: "string"
      store_info:
        $ref: "#/definitions/ExtraWechatpaySceneInfoStoreInfo"
    example:
      store_info:
        address: "address"
        area_code: "area_code"
        name: "name"
        id: "id"
      device_id: "device_id"
      h5_info:
        app_name: "app_name"
        app_url: "app_url"
        bundle_id: "bundle_id"
        package_name: "package_name"
        type: "type"
      payer_client_ip: "payer_client_ip"
  v1ExtraWechatpaySettleInfo:
    type: "object"
    properties:
      profit_sharing:
        type: "boolean"
    example:
      profit_sharing: true
  v1FinishRoyaltyResponse:
    type: "object"
  v1Gender:
    type: "string"
    title: "- GENDER_UNKNOWN: 未设置\n - MALE: 男\n - FE_MALE: 女\n - PRIVACY: 保密\n - ThirdGender:\
      \ 第三性别"
    enum:
    - "GENDER_UNKNOWN"
    - "MALE"
    - "FE_MALE"
    - "PRIVACY"
    - "ThirdGender"
    default: "GENDER_UNKNOWN"
  v1ListAllCustomersRequestCreated:
    type: "object"
    properties:
      gt:
        type: "integer"
        format: "int64"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      gte:
        type: "integer"
        format: "int64"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lt:
        type: "integer"
        format: "int64"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lte:
        type: "integer"
        format: "int64"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
  v1ListAllRoyaltiesRequestCreated:
    type: "object"
    properties:
      gt:
        type: "integer"
        format: "int64"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      gte:
        type: "integer"
        format: "int64"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lt:
        type: "integer"
        format: "int64"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lte:
        type: "integer"
        format: "int64"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
  v1ListAllSettlementAccountsRequestCreated:
    type: "object"
    properties:
      gt:
        type: "integer"
        format: "int64"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      gte:
        type: "integer"
        format: "int64"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lt:
        type: "integer"
        format: "int64"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lte:
        type: "integer"
        format: "int64"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
  v1ListAllUsersRequestCreated:
    type: "object"
    properties:
      gt:
        type: "integer"
        format: "int64"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      gte:
        type: "integer"
        format: "int64"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lt:
        type: "integer"
        format: "int64"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lte:
        type: "integer"
        format: "int64"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
  v1NotifyRoutingResponse:
    type: "object"
  v1ProductListResponse:
    type: "object"
  v1ProductResponse:
    type: "object"
  v1QueryChargeListRequestCreated:
    type: "object"
    properties:
      gt:
        type: "integer"
        format: "int64"
        description: "小于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      gte:
        type: "integer"
        format: "int64"
        description: "小于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lt:
        type: "integer"
        format: "int64"
        description: "大于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lte:
        type: "integer"
        format: "int64"
        description: "大于或等于 charge 对象的创建时间，用 Unix 时间戳表示"
        default: 0
  v1Refund:
    type: "object"
    properties:
      account:
        description: "支付渠道退款元参数"
        $ref: "#/definitions/v1RefundExtra"
      amount:
        type: "number"
        format: "float"
        description: "退款金额"
      charge_id:
        type: "string"
        format: "string"
        description: "Charge 对象 id"
      charge_merchant_trade_id:
        type: "string"
        format: "string"
        description: "商户系统订单号"
      created:
        type: "number"
        format: "int64"
        description: "退款创建时间"
      created_at:
        type: "string"
        format: "date-time"
        description: "退款创建时间"
      description:
        type: "string"
        format: "string"
        description: "退款说明"
      failure_code:
        type: "string"
        format: "string"
        description: "支付渠道失败错误码"
      failure_msg:
        type: "string"
        format: "string"
        description: "支付渠道失败原因描述"
      is_success:
        type: "boolean"
        format: "boolean"
        description: "退款是否成功"
        default: false
      metadata:
        type: "object"
        description: "元数据，原样返回"
        additionalProperties:
          type: "string"
      refund_id:
        type: "string"
        format: "string"
        description: "Refund 对象 ID"
      refund_no:
        type: "string"
        format: "string"
        description: "退款单号"
      status:
        type: "string"
        format: "string"
        description: "退款状态"
      succeed_ts:
        type: "number"
        format: "int64"
        description: "退款成功时间"
      success_at:
        type: "string"
        format: "date-time"
        description: "退款成功时间"
      transaction_no:
        type: "string"
        format: "string"
        description: "交易号"
    title: "Refund 对象"
    description: "Refund 对象允许你可以对已经支付的 charge 对象发起退款请求。"
    example:
      amount: 7.143538
      failure_code: "failure_code"
      metadata:
        key: "metadata"
      succeed_ts: 7.05877035158235610623478351044468581676483154296875
      created: 0.885137473901165261480628032586537301540374755859375
      refund_no: "refund_no"
      created_at: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      success_at: "2000-01-23T04:56:07.000+00:00"
      is_success: false
      failure_msg: "failure_msg"
      refund_id: "refund_id"
      charge_id: "charge_id"
      account:
        alipay:
          refund_royalty_parameters:
          - refund_detail_item_list:
            - real_amount: 6.878052
              amount: 6.778325
              fund_type: "fund_type"
              fund_channel: "fund_channel"
            - real_amount: 6.878052
              amount: 6.778325
              fund_type: "fund_type"
              fund_channel: "fund_channel"
            amount: 2.8841622
            trans_in: "trans_in"
            royalty_type: "royalty_type"
            buyer_user_id: "buyer_user_id"
            trans_out: "trans_out"
            trans_out_type: "trans_out_type"
            trans_in_type: "trans_in_type"
            refund_fee: 5.9448957
            send_back_fee: "send_back_fee"
            store_name: "store_name"
            buyer_logon_id: "buyer_logon_id"
            royalty_scene: "royalty_scene"
            fund_change: "fund_change"
            trans_in_name: "trans_in_name"
            desc: "desc"
          - refund_detail_item_list:
            - real_amount: 6.878052
              amount: 6.778325
              fund_type: "fund_type"
              fund_channel: "fund_channel"
            - real_amount: 6.878052
              amount: 6.778325
              fund_type: "fund_type"
              fund_channel: "fund_channel"
            amount: 2.8841622
            trans_in: "trans_in"
            royalty_type: "royalty_type"
            buyer_user_id: "buyer_user_id"
            trans_out: "trans_out"
            trans_out_type: "trans_out_type"
            trans_in_type: "trans_in_type"
            refund_fee: 5.9448957
            send_back_fee: "send_back_fee"
            store_name: "store_name"
            buyer_logon_id: "buyer_logon_id"
            royalty_scene: "royalty_scene"
            fund_change: "fund_change"
            trans_in_name: "trans_in_name"
            desc: "desc"
        wechatpay:
          goods_detail:
          - goods_name: "goods_name"
            wechatpay_goods_id: "wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            refund_amount: 6
            unit_price: 3
            refund_quantity: 3
          - goods_name: "goods_name"
            wechatpay_goods_id: "wechatpay_goods_id"
            merchant_goods_id: "merchant_goods_id"
            refund_amount: 6
            unit_price: 3
            refund_quantity: 3
          account:
            from:
            - null
            - null
      transaction_no: "transaction_no"
      charge_merchant_trade_id: "charge_merchant_trade_id"
      status: "status"
  v1RefundExtra:
    type: "object"
    properties:
      alipay:
        description: "支付宝退款元参数，可参考 https://opendocs.alipay.com/apis/0287wa"
        $ref: "#/definitions/v1RefundExtraAlipay"
      wechatpay:
        description: "微信支付退款元参数，可参考 https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_1_9.shtml"
        $ref: "#/definitions/v1RefundExtraWechatPay"
    example:
      alipay:
        refund_royalty_parameters:
        - refund_detail_item_list:
          - real_amount: 6.878052
            amount: 6.778325
            fund_type: "fund_type"
            fund_channel: "fund_channel"
          - real_amount: 6.878052
            amount: 6.778325
            fund_type: "fund_type"
            fund_channel: "fund_channel"
          amount: 2.8841622
          trans_in: "trans_in"
          royalty_type: "royalty_type"
          buyer_user_id: "buyer_user_id"
          trans_out: "trans_out"
          trans_out_type: "trans_out_type"
          trans_in_type: "trans_in_type"
          refund_fee: 5.9448957
          send_back_fee: "send_back_fee"
          store_name: "store_name"
          buyer_logon_id: "buyer_logon_id"
          royalty_scene: "royalty_scene"
          fund_change: "fund_change"
          trans_in_name: "trans_in_name"
          desc: "desc"
        - refund_detail_item_list:
          - real_amount: 6.878052
            amount: 6.778325
            fund_type: "fund_type"
            fund_channel: "fund_channel"
          - real_amount: 6.878052
            amount: 6.778325
            fund_type: "fund_type"
            fund_channel: "fund_channel"
          amount: 2.8841622
          trans_in: "trans_in"
          royalty_type: "royalty_type"
          buyer_user_id: "buyer_user_id"
          trans_out: "trans_out"
          trans_out_type: "trans_out_type"
          trans_in_type: "trans_in_type"
          refund_fee: 5.9448957
          send_back_fee: "send_back_fee"
          store_name: "store_name"
          buyer_logon_id: "buyer_logon_id"
          royalty_scene: "royalty_scene"
          fund_change: "fund_change"
          trans_in_name: "trans_in_name"
          desc: "desc"
      wechatpay:
        goods_detail:
        - goods_name: "goods_name"
          wechatpay_goods_id: "wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          refund_amount: 6
          unit_price: 3
          refund_quantity: 3
        - goods_name: "goods_name"
          wechatpay_goods_id: "wechatpay_goods_id"
          merchant_goods_id: "merchant_goods_id"
          refund_amount: 6
          unit_price: 3
          refund_quantity: 3
        account:
          from:
          - null
          - null
  v1RefundExtraAlipay:
    type: "object"
    properties:
      refund_royalty_parameters:
        type: "array"
        items:
          $ref: "#/definitions/RefundExtraAlipayOpenApiRoyaltyDetailInfoPojo"
    example:
      refund_royalty_parameters:
      - refund_detail_item_list:
        - real_amount: 6.878052
          amount: 6.778325
          fund_type: "fund_type"
          fund_channel: "fund_channel"
        - real_amount: 6.878052
          amount: 6.778325
          fund_type: "fund_type"
          fund_channel: "fund_channel"
        amount: 2.8841622
        trans_in: "trans_in"
        royalty_type: "royalty_type"
        buyer_user_id: "buyer_user_id"
        trans_out: "trans_out"
        trans_out_type: "trans_out_type"
        trans_in_type: "trans_in_type"
        refund_fee: 5.9448957
        send_back_fee: "send_back_fee"
        store_name: "store_name"
        buyer_logon_id: "buyer_logon_id"
        royalty_scene: "royalty_scene"
        fund_change: "fund_change"
        trans_in_name: "trans_in_name"
        desc: "desc"
      - refund_detail_item_list:
        - real_amount: 6.878052
          amount: 6.778325
          fund_type: "fund_type"
          fund_channel: "fund_channel"
        - real_amount: 6.878052
          amount: 6.778325
          fund_type: "fund_type"
          fund_channel: "fund_channel"
        amount: 2.8841622
        trans_in: "trans_in"
        royalty_type: "royalty_type"
        buyer_user_id: "buyer_user_id"
        trans_out: "trans_out"
        trans_out_type: "trans_out_type"
        trans_in_type: "trans_in_type"
        refund_fee: 5.9448957
        send_back_fee: "send_back_fee"
        store_name: "store_name"
        buyer_logon_id: "buyer_logon_id"
        royalty_scene: "royalty_scene"
        fund_change: "fund_change"
        trans_in_name: "trans_in_name"
        desc: "desc"
  v1RefundExtraWechatPay:
    type: "object"
    properties:
      account:
        description: "出资账户信息"
        $ref: "#/definitions/RefundExtraWechatPayAccount"
      goods_detail:
        type: "array"
        description: "退款商品"
        items:
          $ref: "#/definitions/RefundExtraWechatPayGoodsDetailItem"
    example:
      goods_detail:
      - goods_name: "goods_name"
        wechatpay_goods_id: "wechatpay_goods_id"
        merchant_goods_id: "merchant_goods_id"
        refund_amount: 6
        unit_price: 3
        refund_quantity: 3
      - goods_name: "goods_name"
        wechatpay_goods_id: "wechatpay_goods_id"
        merchant_goods_id: "merchant_goods_id"
        refund_amount: 6
        unit_price: 3
        refund_quantity: 3
      account:
        from:
        - null
        - null
  v1RefundListResponse:
    type: "object"
    properties:
      data:
        type: "array"
        description: "Refund 对象"
        items:
          $ref: "#/definitions/v1Refund"
      has_more:
        type: "boolean"
        description: "表明获取列表之后是否还有更多的元素实体。如果值为 false，表明当前页是最后一页"
        default: false
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "RefundList"
      total:
        type: "integer"
        format: "int32"
        description: "总数据条数"
        default: 0
    example:
      total: 0
      data:
      - amount: 7.143538
        failure_code: "failure_code"
        metadata:
          key: "metadata"
        succeed_ts: 7.05877035158235610623478351044468581676483154296875
        created: 0.885137473901165261480628032586537301540374755859375
        refund_no: "refund_no"
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        success_at: "2000-01-23T04:56:07.000+00:00"
        is_success: false
        failure_msg: "failure_msg"
        refund_id: "refund_id"
        charge_id: "charge_id"
        account:
          alipay:
            refund_royalty_parameters:
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
          wechatpay:
            goods_detail:
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            account:
              from:
              - null
              - null
        transaction_no: "transaction_no"
        charge_merchant_trade_id: "charge_merchant_trade_id"
        status: "status"
      - amount: 7.143538
        failure_code: "failure_code"
        metadata:
          key: "metadata"
        succeed_ts: 7.05877035158235610623478351044468581676483154296875
        created: 0.885137473901165261480628032586537301540374755859375
        refund_no: "refund_no"
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        success_at: "2000-01-23T04:56:07.000+00:00"
        is_success: false
        failure_msg: "failure_msg"
        refund_id: "refund_id"
        charge_id: "charge_id"
        account:
          alipay:
            refund_royalty_parameters:
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
          wechatpay:
            goods_detail:
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            account:
              from:
              - null
              - null
        transaction_no: "transaction_no"
        charge_merchant_trade_id: "charge_merchant_trade_id"
        status: "status"
      has_more: false
      object: "RefundList"
  v1RefundResponse:
    type: "object"
    properties:
      data:
        description: "Refund 对象"
        $ref: "#/definitions/v1Refund"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "Refund"
    example:
      data:
        amount: 7.143538
        failure_code: "failure_code"
        metadata:
          key: "metadata"
        succeed_ts: 7.05877035158235610623478351044468581676483154296875
        created: 0.885137473901165261480628032586537301540374755859375
        refund_no: "refund_no"
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        success_at: "2000-01-23T04:56:07.000+00:00"
        is_success: false
        failure_msg: "failure_msg"
        refund_id: "refund_id"
        charge_id: "charge_id"
        account:
          alipay:
            refund_royalty_parameters:
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
            - refund_detail_item_list:
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              - real_amount: 6.878052
                amount: 6.778325
                fund_type: "fund_type"
                fund_channel: "fund_channel"
              amount: 2.8841622
              trans_in: "trans_in"
              royalty_type: "royalty_type"
              buyer_user_id: "buyer_user_id"
              trans_out: "trans_out"
              trans_out_type: "trans_out_type"
              trans_in_type: "trans_in_type"
              refund_fee: 5.9448957
              send_back_fee: "send_back_fee"
              store_name: "store_name"
              buyer_logon_id: "buyer_logon_id"
              royalty_scene: "royalty_scene"
              fund_change: "fund_change"
              trans_in_name: "trans_in_name"
              desc: "desc"
          wechatpay:
            goods_detail:
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            - goods_name: "goods_name"
              wechatpay_goods_id: "wechatpay_goods_id"
              merchant_goods_id: "merchant_goods_id"
              refund_amount: 6
              unit_price: 3
              refund_quantity: 3
            account:
              from:
              - null
              - null
        transaction_no: "transaction_no"
        charge_merchant_trade_id: "charge_merchant_trade_id"
        status: "status"
      object: "Refund"
  v1RefundRoutingResponse:
    type: "object"
  v1Royalty:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "double"
      charge_id:
        type: "string"
      created:
        type: "string"
        format: "int64"
      description:
        type: "string"
      id:
        type: "string"
      livemode:
        type: "boolean"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      method:
        $ref: "#/definitions/tradev1RoyaltyMethod"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "Royalty"
      order_id:
        type: "string"
      payer_app_id:
        type: "string"
      payer_settle_account_id:
        type: "string"
      payer_user_id:
        type: "string"
      recipient_user_id:
        type: "string"
      royalty_settlement_id:
        type: "string"
      royalty_settlement_transaction_id:
        type: "string"
      status:
        type: "string"
      time_settled:
        type: "string"
        format: "int64"
    example:
      recipient_user_id: "recipient_user_id"
      amount: 0.8008281904610115
      metadata:
        key: "metadata"
      livemode: true
      method: {}
      created: "created"
      description: "description"
      royalty_settlement_id: "royalty_settlement_id"
      payer_settle_account_id: "payer_settle_account_id"
      royalty_settlement_transaction_id: "royalty_settlement_transaction_id"
      payer_app_id: "payer_app_id"
      charge_id: "charge_id"
      time_settled: "time_settled"
      id: "id"
      order_id: "order_id"
      payer_user_id: "payer_user_id"
      object: "Royalty"
      status: "status"
  v1RoyaltyListResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1Royalty"
      hasMore:
        type: "boolean"
      object:
        type: "string"
  v1RoyaltyMode:
    type: "string"
    title: "- royalty_mode_unset: 未设置\n - fixed: 固定金额\n - rate: 比例"
    enum:
    - "royalty_mode_unset"
    - "fixed"
    - "rate"
    default: "royalty_mode_unset"
  v1RoyaltyResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1Royalty"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "Royalty"
    example:
      data:
        recipient_user_id: "recipient_user_id"
        amount: 0.8008281904610115
        metadata:
          key: "metadata"
        livemode: true
        method: {}
        created: "created"
        description: "description"
        royalty_settlement_id: "royalty_settlement_id"
        payer_settle_account_id: "payer_settle_account_id"
        royalty_settlement_transaction_id: "royalty_settlement_transaction_id"
        payer_app_id: "payer_app_id"
        charge_id: "charge_id"
        time_settled: "time_settled"
        id: "id"
        order_id: "order_id"
        payer_user_id: "payer_user_id"
        object: "Royalty"
        status: "status"
      object: "Royalty"
  v1RoyaltyRoutingRequestRoyaltyMethod:
    type: "string"
    title: "- CREATE_ROYALTY: 请求分账\n - QUERY_ROYALTY: 查询分账\n - Finish_ROYALTY: 完结分\
      账\n - RETURN_ROYALTY: 退还分账"
    enum:
    - "ROYALTY_METHOD_UNKNOWN"
    - "CREATE_ROYALTY"
    - "QUERY_ROYALTY"
    - "Finish_ROYALTY"
    - "RETURN_ROYALTY"
    default: "ROYALTY_METHOD_UNKNOWN"
  v1RoyaltyRoutingResponse:
    type: "object"
  v1RoyaltySettlement:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "double"
      amount_canceled:
        type: "number"
        format: "double"
      amount_failed:
        type: "number"
        format: "double"
      amount_succeeded:
        type: "number"
        format: "double"
      app_id:
        type: "string"
      count:
        type: "string"
        format: "int64"
      count_canceled:
        type: "string"
        format: "int64"
      count_failed:
        type: "string"
        format: "int64"
      count_succeeded:
        type: "string"
        format: "int64"
      created:
        type: "string"
        format: "int64"
      fee:
        type: "number"
        format: "double"
      id:
        type: "string"
      livemode:
        type: "boolean"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      method:
        $ref: "#/definitions/tradev1RoyaltyMethod"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "RoyaltySettlement"
      operation_url:
        type: "string"
      source:
        $ref: "#/definitions/v1RoyaltySettlementSource"
      status:
        type: "string"
      time_finished:
        type: "string"
        format: "int64"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/v1RoyaltySettlementTransaction"
  v1RoyaltySettlementListResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1RoyaltySettlement"
      hasMore:
        type: "boolean"
      object:
        type: "string"
  v1RoyaltySettlementResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1RoyaltySettlement"
      object:
        type: "string"
  v1RoyaltySettlementSource:
    type: "object"
    properties:
      availableSettleAmount:
        type: "number"
        format: "double"
        title: "可结结算"
      sourceId:
        type: "string"
      type:
        $ref: "#/definitions/v1RoyaltySettlementSourceType"
    title: "--------------------------------------------------\nRoyalty Settlement"
  v1RoyaltySettlementSourceType:
    type: "string"
    enum:
    - "TYPE_UNKNOWN"
    - "CHARGE"
    - "ORDER"
    default: "TYPE_UNKNOWN"
  v1RoyaltySettlementTransaction:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "double"
      created:
        type: "string"
        format: "int64"
      failure_reason:
        type: "string"
      id:
        type: "string"
      livemode:
        type: "boolean"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "RoyaltySettlementTransaction"
      recipient_app_id:
        type: "string"
      recipient_user_id:
        type: "string"
      royalty_settlement_id:
        type: "string"
      status:
        type: "string"
      transfer_id:
        type: "string"
      user_settlement_account_id:
        type: "string"
    title: "--------------------------------------------------\nRoyalty Settlement\
      \ Transaction"
  v1RoyaltySettlementTransactionListResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1RoyaltySettlementTransaction"
      hasMore:
        type: "boolean"
      object:
        type: "string"
  v1RoyaltySettlementTransactionResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1RoyaltySettlementTransaction"
      object:
        type: "string"
  v1SearchCustomersRequestCreated:
    type: "object"
    properties:
      gt:
        type: "integer"
        format: "int64"
        description: "小于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      gte:
        type: "integer"
        format: "int64"
        description: "小于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lt:
        type: "integer"
        format: "int64"
        description: "大于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lte:
        type: "integer"
        format: "int64"
        description: "大于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
  v1SearchUsersRequestCreated:
    type: "object"
    properties:
      gt:
        type: "integer"
        format: "int64"
        description: "小于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      gte:
        type: "integer"
        format: "int64"
        description: "小于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lt:
        type: "integer"
        format: "int64"
        description: "大于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
      lte:
        type: "integer"
        format: "int64"
        description: "大于或等于 BusinessUser 对象的创建时间，用 Unix 时间戳表示"
        default: 0
  v1SettlementAccount:
    type: "object"
    properties:
      app_id:
        type: "string"
        format: "string"
        description: "分账接收方所在的应用 ID"
        default: "0"
      channel:
        description: "分账接收方的账户类型"
        $ref: "#/definitions/v1SettlementAccountChannel"
      created:
        type: "integer"
        format: "int64"
        description: "分账接收方的创建时间"
        default: 0
      id:
        type: "string"
        format: "string"
        description: "分账接收方的唯一标识"
        default: "0"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "Recipient"
      recipient:
        description: "分账接收方的账户信息"
        $ref: "#/definitions/v1SettlementAccountRecipient"
      updated:
        type: "integer"
        format: "int64"
        description: "分账接收方的更新时间"
        default: 0
      user_id:
        type: "string"
        format: "string"
        description: "分账接收方的用户 ID"
        default: "0"
    title: "--------------------------------------------------\nSettle Account"
    example:
      user_id: "0"
      created: 0
      channel: {}
      recipient:
        alipay_channel_recipient:
          account_type: {}
          name: "name"
          type: {}
          account: "account"
        bank_channel_recipient:
          bank_branch: "bank_branch"
          bank_name: "bank_name"
          name: "name"
          bank_province: "bank_province"
          type: "type"
          account: "account"
          bank_city: "bank_city"
        wechatpay_channel_recipient:
          name: "name"
          app_id: "app_id"
          account: "account"
          force_check: false
      id: "0"
      app_id: "0"
      updated: 6
      object: "Recipient"
  v1SettlementAccountChannel:
    type: "string"
    title: "- ALIPAY: 分账到支付宝\n - WECHANTPAY: 分账到微信支付\n - BANK: 分账到银行卡\n - BALANCE:\
      \ 分账到 justap 账户余额"
    enum:
    - "CHANNEL_UNKNOWN"
    - "ALIPAY"
    - "WECHANTPAY"
    - "BANK"
    - "BALANCE"
    default: "CHANNEL_UNKNOWN"
  v1SettlementAccountListResponse:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/v1SettlementAccount"
      hasMore:
        type: "boolean"
      object:
        type: "string"
    example:
      data:
      - user_id: "0"
        created: 0
        channel: {}
        recipient:
          alipay_channel_recipient:
            account_type: {}
            name: "name"
            type: {}
            account: "account"
          bank_channel_recipient:
            bank_branch: "bank_branch"
            bank_name: "bank_name"
            name: "name"
            bank_province: "bank_province"
            type: "type"
            account: "account"
            bank_city: "bank_city"
          wechatpay_channel_recipient:
            name: "name"
            app_id: "app_id"
            account: "account"
            force_check: false
        id: "0"
        app_id: "0"
        updated: 6
        object: "Recipient"
      - user_id: "0"
        created: 0
        channel: {}
        recipient:
          alipay_channel_recipient:
            account_type: {}
            name: "name"
            type: {}
            account: "account"
          bank_channel_recipient:
            bank_branch: "bank_branch"
            bank_name: "bank_name"
            name: "name"
            bank_province: "bank_province"
            type: "type"
            account: "account"
            bank_city: "bank_city"
          wechatpay_channel_recipient:
            name: "name"
            app_id: "app_id"
            account: "account"
            force_check: false
        id: "0"
        app_id: "0"
        updated: 6
        object: "Recipient"
      hasMore: true
      object: "object"
  v1SettlementAccountRecipient:
    type: "object"
    properties:
      alipay_channel_recipient:
        $ref: "#/definitions/SettlementAccountRecipientAlipayChannelRecipient"
      bank_channel_recipient:
        $ref: "#/definitions/SettlementAccountRecipientBankChannelRecipient"
      wechatpay_channel_recipient:
        $ref: "#/definitions/SettlementAccountRecipientWechatpayChannelRecipient"
    example:
      alipay_channel_recipient:
        account_type: {}
        name: "name"
        type: {}
        account: "account"
      bank_channel_recipient:
        bank_branch: "bank_branch"
        bank_name: "bank_name"
        name: "name"
        bank_province: "bank_province"
        type: "type"
        account: "account"
        bank_city: "bank_city"
      wechatpay_channel_recipient:
        name: "name"
        app_id: "app_id"
        account: "account"
        force_check: false
  v1SettlementAccountResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1SettlementAccount"
      object:
        type: "string"
    example:
      data:
        user_id: "0"
        created: 0
        channel: {}
        recipient:
          alipay_channel_recipient:
            account_type: {}
            name: "name"
            type: {}
            account: "account"
          bank_channel_recipient:
            bank_branch: "bank_branch"
            bank_name: "bank_name"
            name: "name"
            bank_province: "bank_province"
            type: "type"
            account: "account"
            bank_city: "bank_city"
          wechatpay_channel_recipient:
            name: "name"
            app_id: "app_id"
            account: "account"
            force_check: false
        id: "0"
        app_id: "0"
        updated: 6
        object: "Recipient"
      object: "object"
  v1TransferRoutingResponse:
    type: "object"
  v1UnionQrRequest:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "double"
        description: "金额"
        default: 0.0
      appid:
        type: "string"
        format: "string"
        description: "openid 对应的应用id"
      browser_agent:
        type: "string"
        format: "string"
        description: "浏览器信息"
      i:
        type: "string"
        format: "string"
        description: "设备编号"
      in_app:
        type: "string"
        format: "string"
        description: "打开的app类型，微信/支付宝/qq/闪付"
      openid:
        type: "string"
        format: "string"
        description: "用户openid"
      remark:
        type: "string"
        format: "string"
        description: "订单备注"
      s:
        type: "string"
        format: "string"
        description: "设备编号的签名"
    example:
      in_app: "in_app"
      browser_agent: "browser_agent"
      amount: 0.8008281904610115
      s: "s"
      openid: "openid"
      appid: "appid"
      i: "i"
      remark: "remark"
  v1User:
    type: "object"
    properties:
      address:
        type: "string"
      app_id:
        type: "string"
      available_balance:
        type: "number"
        format: "double"
      avatar:
        type: "string"
      created:
        type: "string"
        format: "int64"
      currency:
        type: "string"
      description:
        type: "string"
      disabled:
        type: "boolean"
      email:
        type: "string"
      gender:
        type: "string"
      id:
        type: "string"
      metadata:
        type: "object"
        additionalProperties:
          type: "string"
      name:
        type: "string"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "User"
      parent_id:
        type: "string"
      phone:
        type: "string"
      updated:
        type: "string"
        format: "int64"
      withdrawable_balance:
        type: "number"
        format: "double"
    title: "--------------------------------------------------\nUsers"
    example:
      metadata:
        key: "metadata"
      address: "address"
      gender: "gender"
      created: "created"
      description: "description"
      avatar: "avatar"
      withdrawable_balance: 6.027456183070403
      available_balance: 0.8008281904610115
      phone: "phone"
      parent_id: "parent_id"
      name: "name"
      currency: "currency"
      disabled: true
      id: "id"
      app_id: "app_id"
      updated: "updated"
      email: "email"
      object: "User"
  v1UserListResponse:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/v1User"
      has_more:
        type: "boolean"
      object:
        type: "string"
        format: "string"
        description: "对象类型"
        default: "UserList"
    example:
      data:
      - metadata:
          key: "metadata"
        address: "address"
        gender: "gender"
        created: "created"
        description: "description"
        avatar: "avatar"
        withdrawable_balance: 6.027456183070403
        available_balance: 0.8008281904610115
        phone: "phone"
        parent_id: "parent_id"
        name: "name"
        currency: "currency"
        disabled: true
        id: "id"
        app_id: "app_id"
        updated: "updated"
        email: "email"
        object: "User"
      - metadata:
          key: "metadata"
        address: "address"
        gender: "gender"
        created: "created"
        description: "description"
        avatar: "avatar"
        withdrawable_balance: 6.027456183070403
        available_balance: 0.8008281904610115
        phone: "phone"
        parent_id: "parent_id"
        name: "name"
        currency: "currency"
        disabled: true
        id: "id"
        app_id: "app_id"
        updated: "updated"
        email: "email"
        object: "User"
      has_more: true
      object: "UserList"
  v1UserResponse:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/v1User"
      object:
        type: "string"
    example:
      data:
        metadata:
          key: "metadata"
        address: "address"
        gender: "gender"
        created: "created"
        description: "description"
        avatar: "avatar"
        withdrawable_balance: 6.027456183070403
        available_balance: 0.8008281904610115
        phone: "phone"
        parent_id: "parent_id"
        name: "name"
        currency: "currency"
        disabled: true
        id: "id"
        app_id: "app_id"
        updated: "updated"
        email: "email"
        object: "User"
      object: "object"
  v1WechatpayCallbackResponse:
    type: "object"
    properties:
      callback_url:
        type: "string"
  v1WechatpayNotifyResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
x-webhooks: "## Webhooks 回调\n"
